digraph {
  rankdir=TB
  splines=true

  "Block0" [ shape=box label=<<table border="0" cellborder="0" cellpadding="1"><tr><td align="center" bgcolor="black" colspan="3"><font color="white">Block 0 </font></td></tr><tr><td align="right" port="i1">1</td><td align="left">{} &lt;- label</td></tr><tr><td align="right" port="i2">2</td><td align="left">{[rax:1 (arg:0)]} &lt;- parameter</td></tr><tr><td align="right" port="i3">3</td><td align="left">{[rax:2 (arg:8)]} &lt;- parameter</td></tr><tr><td align="right" port="i4">4</td><td align="left">{[rax:3 (arg:16)]} &lt;- parameter</td></tr><tr><td align="right" port="i5">5</td><td align="left">{[rax:4 (arg:24)]} &lt;- parameter</td></tr><tr><td align="right" port="i6">6</td><td align="left">{[rax:5 (arg:32)]} &lt;- parameter</td></tr><tr><td align="right" port="i7">7</td><td align="left">{} &lt;- start</td></tr><tr><td align="right" port="i0">0</td><td align="left">{} &lt;- movegroup[arg:8 -&gt; =rax]</td></tr><tr><td align="right" port="i8">8</td><td align="left">{[o:6 (=rcx)]} &lt;- unbox (=rax)</td></tr><tr><td align="right" port="i0">0</td><td align="left">{} &lt;- movegroup[=rcx -&gt; stack:i7]</td></tr><tr><td align="right" port="i0">0</td><td align="left">{} &lt;- movegroup[arg:16 -&gt; =rdx]</td></tr><tr><td align="right" port="i9">9</td><td align="left">{[i:7 (=rbx)]} &lt;- unbox (=rdx)</td></tr><tr><td align="right" port="i0">0</td><td align="left">{} &lt;- movegroup[=rbx -&gt; stack:i6]</td></tr><tr><td align="right" port="i0">0</td><td align="left">{} &lt;- movegroup[arg:24 -&gt; =rbp]</td></tr><tr><td align="right" port="i10">10</td><td align="left">{[i:8 (=rsi)]} &lt;- unbox (=rbp)</td></tr><tr><td align="right" port="i0">0</td><td align="left">{} &lt;- movegroup[=rsi -&gt; stack:i5]</td></tr><tr><td align="right" port="i0">0</td><td align="left">{} &lt;- movegroup[arg:32 -&gt; =rdi]</td></tr><tr><td align="right" port="i11">11</td><td align="left">{[i:9 (=r8)]} &lt;- unbox (=rdi)</td></tr><tr><td align="right" port="i0">0</td><td align="left">{} &lt;- movegroup[=r8 -&gt; stack:i4]</td></tr><tr><td align="right" port="i12">12</td><td align="left">{} &lt;- checkoverrecursed</td></tr><tr><td align="right" port="i13">13</td><td align="left">{} &lt;- osipoint</td></tr><tr><td align="right" port="i14">14</td><td align="left">{[x:10 (=xmm0)]} &lt;- double</td></tr><tr><td align="right" port="i15">15</td><td align="left">{[rax:11 (=rax)]} &lt;- value</td></tr><tr><td align="right" port="i16">16</td><td align="left">{[i:12 (=rdx)]} &lt;- integer</td></tr><tr><td align="right" port="i0">0</td><td align="left">{} &lt;- movegroup</td></tr><tr><td align="right" port="i17">17</td><td align="left">{} &lt;- goto</td></tr></table>> ] ;
  "Block1" [ color=green shape=box label=<<table border="0" cellborder="0" cellpadding="1"><tr><td align="center" bgcolor="black" colspan="3"><font color="white">Block 1 </font></td></tr><tr><td align="right" port="i18">18</td><td align="left">{[rax:13 (=rax)]} &lt;- phi (v11:*), (v31:*)</td></tr><tr><td align="right" port="i19">19</td><td align="left">{[i:14 (=rdx)]} &lt;- phi (v12:*), (v32:*)</td></tr><tr><td align="right" port="i20">20</td><td align="left">{} &lt;- label</td></tr><tr><td align="right" port="i21">21</td><td align="left">{} &lt;- interruptcheck</td></tr><tr><td align="right" port="i22">22</td><td align="left">{} &lt;- osipoint</td></tr><tr><td align="right" port="i23">23</td><td align="left">{} &lt;- compareandbranch (=rdx), (c)</td></tr></table>> ] ;
  "Block2" [ shape=box label=<<table border="0" cellborder="0" cellpadding="1"><tr><td align="center" bgcolor="black" colspan="3"><font color="white">Block 2 </font></td></tr><tr><td align="right" port="i24">24</td><td align="left">{} &lt;- label</td></tr><tr><td align="right" port="i0">0</td><td align="left">{} &lt;- movegroup</td></tr><tr><td align="right" port="i25">25</td><td align="left">{[i:15 (=rbp)]} &lt;- compare (=rbx), (c)</td></tr><tr><td align="right" port="i26">26</td><td align="left">{} &lt;- testiandbranch (=rbp)</td></tr></table>> ] ;
  "Block3" [ shape=box style=dashed label=<<table border="0" cellborder="0" cellpadding="1"><tr><td align="center" bgcolor="black" colspan="3"><font color="white">Block 3 </font></td></tr><tr><td align="right" port="i27">27</td><td align="left">{} &lt;- label</td></tr><tr><td align="right" port="i0">0</td><td align="left">{} &lt;- movegroup</td></tr><tr><td align="right" port="i0">0</td><td align="left">{} &lt;- movegroup</td></tr><tr><td align="right" port="i28">28</td><td align="left">{} &lt;- goto</td></tr></table>> ] ;
  "Block4" [ shape=box label=<<table border="0" cellborder="0" cellpadding="1"><tr><td align="center" bgcolor="black" colspan="3"><font color="white">Block 4 </font></td></tr><tr><td align="right" port="i29">29</td><td align="left">{} &lt;- label</td></tr><tr><td align="right" port="i0">0</td><td align="left">{} &lt;- movegroup</td></tr><tr><td align="right" port="i30">30</td><td align="left">{[i:16 (=rbp)]} &lt;- compare (=rsi), (c)</td></tr><tr><td align="right" port="i31">31</td><td align="left">{} &lt;- testiandbranch (=rbp)</td></tr></table>> ] ;
  "Block5" [ shape=box style=dashed label=<<table border="0" cellborder="0" cellpadding="1"><tr><td align="center" bgcolor="black" colspan="3"><font color="white">Block 5 </font></td></tr><tr><td align="right" port="i32">32</td><td align="left">{} &lt;- label</td></tr><tr><td align="right" port="i0">0</td><td align="left">{} &lt;- movegroup</td></tr><tr><td align="right" port="i0">0</td><td align="left">{} &lt;- movegroup</td></tr><tr><td align="right" port="i33">33</td><td align="left">{} &lt;- goto</td></tr></table>> ] ;
  "Block6" [ shape=box label=<<table border="0" cellborder="0" cellpadding="1"><tr><td align="center" bgcolor="black" colspan="3"><font color="white">Block 6 </font></td></tr><tr><td align="right" port="i34">34</td><td align="left">{} &lt;- label</td></tr><tr><td align="right" port="i0">0</td><td align="left">{} &lt;- movegroup</td></tr><tr><td align="right" port="i35">35</td><td align="left">{[i:17 (=rbp)]} &lt;- compare (=r8), (c)</td></tr><tr><td align="right" port="i0">0</td><td align="left">{} &lt;- movegroup</td></tr><tr><td align="right" port="i36">36</td><td align="left">{} &lt;- goto</td></tr></table>> ] ;
  "Block7" [ shape=box label=<<table border="0" cellborder="0" cellpadding="1"><tr><td align="center" bgcolor="black" colspan="3"><font color="white">Block 7 </font></td></tr><tr><td align="right" port="i37">37</td><td align="left">{[i:18 (=rbp)]} &lt;- phi (v16:*), (v17:*)</td></tr><tr><td align="right" port="i38">38</td><td align="left">{} &lt;- label</td></tr><tr><td align="right" port="i0">0</td><td align="left">{} &lt;- movegroup</td></tr><tr><td align="right" port="i39">39</td><td align="left">{} &lt;- goto</td></tr></table>> ] ;
  "Block8" [ shape=box label=<<table border="0" cellborder="0" cellpadding="1"><tr><td align="center" bgcolor="black" colspan="3"><font color="white">Block 8 </font></td></tr><tr><td align="right" port="i40">40</td><td align="left">{[i:19 (=rbp)]} &lt;- phi (v15:*), (v18:*)</td></tr><tr><td align="right" port="i41">41</td><td align="left">{} &lt;- label</td></tr><tr><td align="right" port="i42">42</td><td align="left">{} &lt;- testiandbranch (=rbp)</td></tr></table>> ] ;
  "Block9" [ shape=box style=dashed label=<<table border="0" cellborder="0" cellpadding="1"><tr><td align="center" bgcolor="black" colspan="3"><font color="white">Block 9 </font></td></tr><tr><td align="right" port="i43">43</td><td align="left">{} &lt;- label</td></tr><tr><td align="right" port="i0">0</td><td align="left">{} &lt;- movegroup</td></tr><tr><td align="right" port="i0">0</td><td align="left">{} &lt;- movegroup[=rcx -&gt; stack:i7], [=rbx -&gt; stack:i6], [=rsi -&gt; stack:i5], [=r8 -&gt; stack:i4], [=rdx -&gt; stack:i3]</td></tr><tr><td align="right" port="i44">44</td><td align="left">{} &lt;- goto</td></tr></table>> ] ;
  "Block10" [ shape=box label=<<table border="0" cellborder="0" cellpadding="1"><tr><td align="center" bgcolor="black" colspan="3"><font color="white">Block 10 </font></td></tr><tr><td align="right" port="i45">45</td><td align="left">{} &lt;- label</td></tr><tr><td align="right" port="i0">0</td><td align="left">{} &lt;- movegroup</td></tr><tr><td align="right" port="i46">46</td><td align="left">{[f:20 (=rbp)]} &lt;- elements (=rcx)</td></tr><tr><td align="right" port="i47">47</td><td align="left">{[i:21 (=rdi)]} &lt;- initializedlength (=rbp)</td></tr><tr><td align="right" port="i48">48</td><td align="left">{} &lt;- boundscheck (=rdx), (=rdi)</td></tr><tr><td align="right" port="i49">49</td><td align="left">{[rax:22 (=rdi)]} &lt;- loadelementv (=rbp), (=rdx)</td></tr><tr><td align="right" port="i0">0</td><td align="left">{} &lt;- movegroup[=rdi -&gt; stack:i1]</td></tr><tr><td align="right" port="i50">50</td><td align="left">{} &lt;- typebarrier (=rdi) t=([i:23 (=rbp)])</td></tr><tr><td align="right" port="i0">0</td><td align="left">{} &lt;- movegroup[=rax -&gt; stack:i2], [=rdx -&gt; stack:i3]</td></tr><tr><td align="right" port="i51">51</td><td align="left">{[rax:24 (=rcx)]} &lt;- callgetproperty (=rdi)</td></tr><tr><td align="right" port="i0">0</td><td align="left">{} &lt;- movegroup</td></tr><tr><td align="right" port="i52">52</td><td align="left">{} &lt;- nop</td></tr><tr><td align="right" port="i53">53</td><td align="left">{} &lt;- osipoint</td></tr><tr><td align="right" port="i54">54</td><td align="left">{} &lt;- typebarrier (=rcx) t=([i:25 (=rax)])</td></tr><tr><td align="right" port="i0">0</td><td align="left">{} &lt;- movegroup[stack:i1 -&gt; =rax]</td></tr><tr><td align="right" port="i55">55</td><td align="left">{} &lt;- stackargv (=rax)</td></tr><tr><td align="right" port="i56">56</td><td align="left">{[o:26 (=rdx)]} &lt;- unbox (=rcx)</td></tr><tr><td align="right" port="i0">0</td><td align="left">{} &lt;- movegroup[=rcx -&gt; stack:i8], [=rdx -&gt; =rax]</td></tr><tr><td align="right" port="i57">57</td><td align="left">{[rax:29 (=rcx)]} &lt;- callgeneric (=rax) t=([i:27 (=r8)], [i:28 (=rbx)])</td></tr><tr><td align="right" port="i0">0</td><td align="left">{} &lt;- movegroup</td></tr><tr><td align="right" port="i58">58</td><td align="left">{} &lt;- nop</td></tr><tr><td align="right" port="i59">59</td><td align="left">{} &lt;- osipoint</td></tr><tr><td align="right" port="i60">60</td><td align="left">{} &lt;- typebarrier (=rcx) t=([i:30 (=rax)])</td></tr><tr><td align="right" port="i0">0</td><td align="left">{} &lt;- movegroup[=rcx -&gt; =rax]</td></tr><tr><td align="right" port="i61">61</td><td align="left">{} &lt;- goto</td></tr></table>> ] ;
  "Block11" [ color=red shape=box label=<<table border="0" cellborder="0" cellpadding="1"><tr><td align="center" bgcolor="black" colspan="3"><font color="white">Block 11 </font></td></tr><tr><td align="right" port="i62">62</td><td align="left">{[rax:31 (=rax)]} &lt;- phi (v13:*), (v29:*)</td></tr><tr><td align="right" port="i63">63</td><td align="left">{} &lt;- label</td></tr><tr><td align="right" port="i0">0</td><td align="left">{} &lt;- movegroup[stack:i3 -&gt; =rcx]</td></tr><tr><td align="right" port="i64">64</td><td align="left">{[i:32 (=rcx)]} &lt;- addi (=rcx), (c)</td></tr><tr><td align="right" port="i0">0</td><td align="left">{} &lt;- movegroup[=rcx -&gt; =rdx], [stack:i7 -&gt; =rcx], [stack:i6 -&gt; =rbx], [stack:i5 -&gt; =rsi], [stack:i4 -&gt; =r8]</td></tr><tr><td align="right" port="i65">65</td><td align="left">{} &lt;- goto</td></tr></table>> ] ;
  "Block12" [ shape=box label=<<table border="0" cellborder="0" cellpadding="1"><tr><td align="center" bgcolor="black" colspan="3"><font color="white">Block 12 </font></td></tr><tr><td align="right" port="i66">66</td><td align="left">{} &lt;- label</td></tr><tr><td align="right" port="i0">0</td><td align="left">{} &lt;- movegroup[=rax -&gt; stack:i2]</td></tr><tr><td align="right" port="i0">0</td><td align="left">{} &lt;- movegroup[stack:i2 -&gt; =rcx]</td></tr><tr><td align="right" port="i0">0</td><td align="left">{} &lt;- movegroup</td></tr><tr><td align="right" port="i67">67</td><td align="left">{} &lt;- return (=rcx)</td></tr></table>> ] ;

  "Block0" -> "Block1" ;
  "Block1" -> "Block2" [ label=1 ] ;
  "Block1" -> "Block12" [ label=0 ] ;
  "Block2" -> "Block4" [ label=1 ] ;
  "Block2" -> "Block3" [ label=0 ] ;
  "Block3" -> "Block8" ;
  "Block4" -> "Block6" [ label=1 ] ;
  "Block4" -> "Block5" [ label=0 ] ;
  "Block5" -> "Block7" ;
  "Block6" -> "Block7" ;
  "Block7" -> "Block8" ;
  "Block8" -> "Block10" [ label=1 ] ;
  "Block8" -> "Block9" [ label=0 ] ;
  "Block9" -> "Block11" ;
  "Block10" -> "Block11" ;
  "Block11" -> "Block1" ;
}
