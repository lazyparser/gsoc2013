[BaselineOp] Analyzing op @ 0 (end=50): getgname
[BaselineOp] Analyzing op @ 5 (end=50): undefined
[BaselineOp] Analyzing op @ 6 (end=50): notearg
[BaselineOp] Analyzing op @ 7 (end=50): getarg
[BaselineOp] Analyzing op @ 10 (end=50): zero
[BaselineOp] Analyzing op @ 11 (end=50): getelem
[BaselineOp] Analyzing op @ 12 (end=50): getarg
[BaselineOp] Analyzing op @ 15 (end=50): zero
[BaselineOp] Analyzing op @ 16 (end=50): getelem
[BaselineOp] Analyzing op @ 17 (end=50): sub
[BaselineOp] Analyzing op @ 18 (end=50): notearg
[BaselineOp] Analyzing op @ 19 (end=50): getarg
[BaselineOp] Analyzing op @ 22 (end=50): one
[BaselineOp] Analyzing op @ 23 (end=50): getelem
[BaselineOp] Analyzing op @ 24 (end=50): getarg
[BaselineOp] Analyzing op @ 27 (end=50): one
[BaselineOp] Analyzing op @ 28 (end=50): getelem
[BaselineOp] Analyzing op @ 29 (end=50): sub
[BaselineOp] Analyzing op @ 30 (end=50): notearg
[BaselineOp] Analyzing op @ 31 (end=50): getarg
[BaselineOp] Analyzing op @ 34 (end=50): int8
[BaselineOp] Analyzing op @ 36 (end=50): getelem
[BaselineOp] Analyzing op @ 37 (end=50): getarg
[BaselineOp] Analyzing op @ 40 (end=50): int8
[BaselineOp] Analyzing op @ 42 (end=50): getelem
[BaselineOp] Analyzing op @ 43 (end=50): sub
[BaselineOp] Analyzing op @ 44 (end=50): notearg
[BaselineOp] Analyzing op @ 45 (end=50): new
[BaselineOp] Analyzing op @ 48 (end=50): return
[BaselineOp] Analyzing op @ 49 (end=50): stop
[BaselineScripts] Baseline compiling script 3d-raytrace.js:71 (0x7f220e851448)
[BaselineOp] Compiling op @ 0: getgname
[BaselineOp] Compiling op @ 5: undefined
[BaselineOp] Compiling op @ 6: notearg
[BaselineOp] Compiling op @ 7: getarg
[BaselineOp] Compiling op @ 10: zero
[BaselineOp] Compiling op @ 11: getelem
[BaselineOp] Compiling op @ 12: getarg
[BaselineOp] Compiling op @ 15: zero
[BaselineOp] Compiling op @ 16: getelem
[BaselineOp] Compiling op @ 17: sub
[BaselineOp] Compiling op @ 18: notearg
[BaselineOp] Compiling op @ 19: getarg
[BaselineOp] Compiling op @ 22: one
[BaselineOp] Compiling op @ 23: getelem
[BaselineOp] Compiling op @ 24: getarg
[BaselineOp] Compiling op @ 27: one
[BaselineOp] Compiling op @ 28: getelem
[BaselineOp] Compiling op @ 29: sub
[BaselineOp] Compiling op @ 30: notearg
[BaselineOp] Compiling op @ 31: getarg
[BaselineOp] Compiling op @ 34: int8
[BaselineOp] Compiling op @ 36: getelem
[BaselineOp] Compiling op @ 37: getarg
[BaselineOp] Compiling op @ 40: int8
[BaselineOp] Compiling op @ 42: getelem
[BaselineOp] Compiling op @ 43: sub
[BaselineOp] Compiling op @ 44: notearg
[BaselineOp] Compiling op @ 45: new
[BaselineOp] Compiling op @ 48: return
[BaselineOp] Compiling op @ 49: stop
[BaselineScripts] Created BaselineScript 0x2a28f90 (raw 0x7f221053f218) for 3d-raytrace.js:71
[BaselineScripts] [block counter] 0 block counters were emitted for script 3d-raytrace.js:71 (0x2a28f90) (lineno: 72 column: 66)
[BaselineOp] Analyzing op @ 0 (end=594): callgname
[BaselineOp] Analyzing op @ 5 (end=594): undefined
[BaselineOp] Analyzing op @ 6 (end=594): notearg
[BaselineOp] Analyzing op @ 7 (end=594): getarg
[BaselineOp] Analyzing op @ 10 (end=594): notearg
[BaselineOp] Analyzing op @ 11 (end=594): getarg
[BaselineOp] Analyzing op @ 14 (end=594): notearg
[BaselineOp] Analyzing op @ 15 (end=594): call
[BaselineOp] Analyzing op @ 18 (end=594): setlocal
[BaselineOp] Analyzing op @ 21 (end=594): pop
[BaselineOp] Analyzing op @ 22 (end=594): callgname
[BaselineOp] Analyzing op @ 27 (end=594): undefined
[BaselineOp] Analyzing op @ 28 (end=594): notearg
[BaselineOp] Analyzing op @ 29 (end=594): getarg
[BaselineOp] Analyzing op @ 32 (end=594): notearg
[BaselineOp] Analyzing op @ 33 (end=594): getarg
[BaselineOp] Analyzing op @ 36 (end=594): notearg
[BaselineOp] Analyzing op @ 37 (end=594): call
[BaselineOp] Analyzing op @ 40 (end=594): setlocal
[BaselineOp] Analyzing op @ 43 (end=594): pop
[BaselineOp] Analyzing op @ 44 (end=594): callgname
[BaselineOp] Analyzing op @ 49 (end=594): undefined
[BaselineOp] Analyzing op @ 50 (end=594): notearg
[BaselineOp] Analyzing op @ 51 (end=594): getlocal
[BaselineOp] Analyzing op @ 54 (end=594): notearg
[BaselineOp] Analyzing op @ 55 (end=594): getlocal
[BaselineOp] Analyzing op @ 58 (end=594): notearg
[BaselineOp] Analyzing op @ 59 (end=594): call
[BaselineOp] Analyzing op @ 62 (end=594): setlocal
[BaselineOp] Analyzing op @ 65 (end=594): pop
[BaselineOp] Analyzing op @ 66 (end=594): getgname
[BaselineOp] Analyzing op @ 71 (end=594): dup
[BaselineOp] Analyzing op @ 72 (end=594): callprop
[BaselineOp] Analyzing op @ 77 (end=594): swap
[BaselineOp] Analyzing op @ 78 (end=594): notearg
[BaselineOp] Analyzing op @ 79 (end=594): getlocal
[BaselineOp] Analyzing op @ 82 (end=594): zero
[BaselineOp] Analyzing op @ 83 (end=594): getelem
[BaselineOp] Analyzing op @ 84 (end=594): notearg
[BaselineOp] Analyzing op @ 85 (end=594): call
[BaselineOp] Analyzing op @ 88 (end=594): getgname
[BaselineOp] Analyzing op @ 93 (end=594): dup
[BaselineOp] Analyzing op @ 94 (end=594): callprop
[BaselineOp] Analyzing op @ 99 (end=594): swap
[BaselineOp] Analyzing op @ 100 (end=594): notearg
[BaselineOp] Analyzing op @ 101 (end=594): getlocal
[BaselineOp] Analyzing op @ 104 (end=594): one
[BaselineOp] Analyzing op @ 105 (end=594): getelem
[BaselineOp] Analyzing op @ 106 (end=594): notearg
[BaselineOp] Analyzing op @ 107 (end=594): call
[BaselineOp] Analyzing op @ 110 (end=594): gt
[BaselineOp] Analyzing op @ 111 (end=594): ifeq
[BaselineOp] Analyzing op @ 116 (end=594): getgname
[BaselineOp] Analyzing op @ 121 (end=594): dup
[BaselineOp] Analyzing op @ 122 (end=594): callprop
[BaselineOp] Analyzing op @ 127 (end=594): swap
[BaselineOp] Analyzing op @ 128 (end=594): notearg
[BaselineOp] Analyzing op @ 129 (end=594): getlocal
[BaselineOp] Analyzing op @ 132 (end=594): zero
[BaselineOp] Analyzing op @ 133 (end=594): getelem
[BaselineOp] Analyzing op @ 134 (end=594): notearg
[BaselineOp] Analyzing op @ 135 (end=594): call
[BaselineOp] Analyzing op @ 138 (end=594): getgname
[BaselineOp] Analyzing op @ 143 (end=594): dup
[BaselineOp] Analyzing op @ 144 (end=594): callprop
[BaselineOp] Analyzing op @ 149 (end=594): swap
[BaselineOp] Analyzing op @ 150 (end=594): notearg
[BaselineOp] Analyzing op @ 151 (end=594): getlocal
[BaselineOp] Analyzing op @ 154 (end=594): int8
[BaselineOp] Analyzing op @ 156 (end=594): getelem
[BaselineOp] Analyzing op @ 157 (end=594): notearg
[BaselineOp] Analyzing op @ 158 (end=594): call
[BaselineOp] Analyzing op @ 161 (end=594): gt
[BaselineOp] Analyzing op @ 162 (end=594): ifeq
[BaselineOp] Analyzing op @ 167 (end=594): this
[BaselineOp] Analyzing op @ 168 (end=594): zero
[BaselineOp] Analyzing op @ 169 (end=594): setprop
[BaselineOp] Analyzing op @ 174 (end=594): pop
[BaselineOp] Analyzing op @ 175 (end=594): goto
[BaselineOp] Analyzing op @ 180 (end=594): this
[BaselineOp] Analyzing op @ 181 (end=594): int8
[BaselineOp] Analyzing op @ 183 (end=594): setprop
[BaselineOp] Analyzing op @ 188 (end=594): pop
[BaselineOp] Analyzing op @ 189 (end=594): goto
[BaselineOp] Analyzing op @ 194 (end=594): getgname
[BaselineOp] Analyzing op @ 199 (end=594): dup
[BaselineOp] Analyzing op @ 200 (end=594): callprop
[BaselineOp] Analyzing op @ 205 (end=594): swap
[BaselineOp] Analyzing op @ 206 (end=594): notearg
[BaselineOp] Analyzing op @ 207 (end=594): getlocal
[BaselineOp] Analyzing op @ 210 (end=594): one
[BaselineOp] Analyzing op @ 211 (end=594): getelem
[BaselineOp] Analyzing op @ 212 (end=594): notearg
[BaselineOp] Analyzing op @ 213 (end=594): call
[BaselineOp] Analyzing op @ 216 (end=594): getgname
[BaselineOp] Analyzing op @ 221 (end=594): dup
[BaselineOp] Analyzing op @ 222 (end=594): callprop
[BaselineOp] Analyzing op @ 227 (end=594): swap
[BaselineOp] Analyzing op @ 228 (end=594): notearg
[BaselineOp] Analyzing op @ 229 (end=594): getlocal
[BaselineOp] Analyzing op @ 232 (end=594): int8
[BaselineOp] Analyzing op @ 234 (end=594): getelem
[BaselineOp] Analyzing op @ 235 (end=594): notearg
[BaselineOp] Analyzing op @ 236 (end=594): call
[BaselineOp] Analyzing op @ 239 (end=594): gt
[BaselineOp] Analyzing op @ 240 (end=594): ifeq
[BaselineOp] Analyzing op @ 245 (end=594): this
[BaselineOp] Analyzing op @ 246 (end=594): one
[BaselineOp] Analyzing op @ 247 (end=594): setprop
[BaselineOp] Analyzing op @ 252 (end=594): pop
[BaselineOp] Analyzing op @ 253 (end=594): goto
[BaselineOp] Analyzing op @ 258 (end=594): this
[BaselineOp] Analyzing op @ 259 (end=594): int8
[BaselineOp] Analyzing op @ 261 (end=594): setprop
[BaselineOp] Analyzing op @ 266 (end=594): pop
[BaselineOp] Analyzing op @ 267 (end=594): this
[BaselineOp] Analyzing op @ 268 (end=594): getprop
[BaselineOp] Analyzing op @ 273 (end=594): one
[BaselineOp] Analyzing op @ 274 (end=594): add
[BaselineOp] Analyzing op @ 275 (end=594): int8
[BaselineOp] Analyzing op @ 277 (end=594): mod
[BaselineOp] Analyzing op @ 278 (end=594): setlocal
[BaselineOp] Analyzing op @ 281 (end=594): pop
[BaselineOp] Analyzing op @ 282 (end=594): this
[BaselineOp] Analyzing op @ 283 (end=594): getprop
[BaselineOp] Analyzing op @ 288 (end=594): int8
[BaselineOp] Analyzing op @ 290 (end=594): add
[BaselineOp] Analyzing op @ 291 (end=594): int8
[BaselineOp] Analyzing op @ 293 (end=594): mod
[BaselineOp] Analyzing op @ 294 (end=594): setlocal
[BaselineOp] Analyzing op @ 297 (end=594): pop
[BaselineOp] Analyzing op @ 298 (end=594): getlocal
[BaselineOp] Analyzing op @ 301 (end=594): getlocal
[BaselineOp] Analyzing op @ 304 (end=594): getelem
[BaselineOp] Analyzing op @ 305 (end=594): setlocal
[BaselineOp] Analyzing op @ 308 (end=594): pop
[BaselineOp] Analyzing op @ 309 (end=594): getlocal
[BaselineOp] Analyzing op @ 312 (end=594): getlocal
[BaselineOp] Analyzing op @ 315 (end=594): getelem
[BaselineOp] Analyzing op @ 316 (end=594): setlocal
[BaselineOp] Analyzing op @ 319 (end=594): pop
[BaselineOp] Analyzing op @ 320 (end=594): getlocal
[BaselineOp] Analyzing op @ 323 (end=594): getlocal
[BaselineOp] Analyzing op @ 326 (end=594): getelem
[BaselineOp] Analyzing op @ 327 (end=594): setlocal
[BaselineOp] Analyzing op @ 330 (end=594): pop
[BaselineOp] Analyzing op @ 331 (end=594): getlocal
[BaselineOp] Analyzing op @ 334 (end=594): getlocal
[BaselineOp] Analyzing op @ 337 (end=594): getelem
[BaselineOp] Analyzing op @ 338 (end=594): setlocal
[BaselineOp] Analyzing op @ 341 (end=594): pop
[BaselineOp] Analyzing op @ 342 (end=594): this
[BaselineOp] Analyzing op @ 343 (end=594): callgname
[BaselineOp] Analyzing op @ 348 (end=594): undefined
[BaselineOp] Analyzing op @ 349 (end=594): notearg
[BaselineOp] Analyzing op @ 350 (end=594): getlocal
[BaselineOp] Analyzing op @ 353 (end=594): notearg
[BaselineOp] Analyzing op @ 354 (end=594): call
[BaselineOp] Analyzing op @ 357 (end=594): setprop
[BaselineOp] Analyzing op @ 362 (end=594): pop
[BaselineOp] Analyzing op @ 363 (end=594): this
[BaselineOp] Analyzing op @ 364 (end=594): getlocal
[BaselineOp] Analyzing op @ 367 (end=594): getlocal
[BaselineOp] Analyzing op @ 370 (end=594): getelem
[BaselineOp] Analyzing op @ 371 (end=594): getlocal
[BaselineOp] Analyzing op @ 374 (end=594): this
[BaselineOp] Analyzing op @ 375 (end=594): getprop
[BaselineOp] Analyzing op @ 380 (end=594): getelem
[BaselineOp] Analyzing op @ 381 (end=594): div
[BaselineOp] Analyzing op @ 382 (end=594): setprop
[BaselineOp] Analyzing op @ 387 (end=594): pop
[BaselineOp] Analyzing op @ 388 (end=594): this
[BaselineOp] Analyzing op @ 389 (end=594): getlocal
[BaselineOp] Analyzing op @ 392 (end=594): getlocal
[BaselineOp] Analyzing op @ 395 (end=594): getelem
[BaselineOp] Analyzing op @ 396 (end=594): getlocal
[BaselineOp] Analyzing op @ 399 (end=594): this
[BaselineOp] Analyzing op @ 400 (end=594): getprop
[BaselineOp] Analyzing op @ 405 (end=594): getelem
[BaselineOp] Analyzing op @ 406 (end=594): div
[BaselineOp] Analyzing op @ 407 (end=594): setprop
[BaselineOp] Analyzing op @ 412 (end=594): pop
[BaselineOp] Analyzing op @ 413 (end=594): this
[BaselineOp] Analyzing op @ 414 (end=594): callgname
[BaselineOp] Analyzing op @ 419 (end=594): undefined
[BaselineOp] Analyzing op @ 420 (end=594): notearg
[BaselineOp] Analyzing op @ 421 (end=594): getlocal
[BaselineOp] Analyzing op @ 424 (end=594): notearg
[BaselineOp] Analyzing op @ 425 (end=594): getarg
[BaselineOp] Analyzing op @ 428 (end=594): notearg
[BaselineOp] Analyzing op @ 429 (end=594): call
[BaselineOp] Analyzing op @ 432 (end=594): getlocal
[BaselineOp] Analyzing op @ 435 (end=594): this
[BaselineOp] Analyzing op @ 436 (end=594): getprop
[BaselineOp] Analyzing op @ 441 (end=594): getelem
[BaselineOp] Analyzing op @ 442 (end=594): div
[BaselineOp] Analyzing op @ 443 (end=594): setprop
[BaselineOp] Analyzing op @ 448 (end=594): pop
[BaselineOp] Analyzing op @ 449 (end=594): getlocal
[BaselineOp] Analyzing op @ 452 (end=594): getlocal
[BaselineOp] Analyzing op @ 455 (end=594): mul
[BaselineOp] Analyzing op @ 456 (end=594): getlocal
[BaselineOp] Analyzing op @ 459 (end=594): getlocal
[BaselineOp] Analyzing op @ 462 (end=594): mul
[BaselineOp] Analyzing op @ 463 (end=594): sub
[BaselineOp] Analyzing op @ 464 (end=594): setlocal
[BaselineOp] Analyzing op @ 467 (end=594): pop
[BaselineOp] Analyzing op @ 468 (end=594): this
[BaselineOp] Analyzing op @ 469 (end=594): getarg
[BaselineOp] Analyzing op @ 472 (end=594): getlocal
[BaselineOp] Analyzing op @ 475 (end=594): getelem
[BaselineOp] Analyzing op @ 476 (end=594): setprop
[BaselineOp] Analyzing op @ 481 (end=594): pop
[BaselineOp] Analyzing op @ 482 (end=594): this
[BaselineOp] Analyzing op @ 483 (end=594): getarg
[BaselineOp] Analyzing op @ 486 (end=594): getlocal
[BaselineOp] Analyzing op @ 489 (end=594): getelem
[BaselineOp] Analyzing op @ 490 (end=594): setprop
[BaselineOp] Analyzing op @ 495 (end=594): pop
[BaselineOp] Analyzing op @ 496 (end=594): this
[BaselineOp] Analyzing op @ 497 (end=594): getlocal
[BaselineOp] Analyzing op @ 500 (end=594): getlocal
[BaselineOp] Analyzing op @ 503 (end=594): div
[BaselineOp] Analyzing op @ 504 (end=594): setprop
[BaselineOp] Analyzing op @ 509 (end=594): pop
[BaselineOp] Analyzing op @ 510 (end=594): this
[BaselineOp] Analyzing op @ 511 (end=594): getlocal
[BaselineOp] Analyzing op @ 514 (end=594): neg
[BaselineOp] Analyzing op @ 515 (end=594): getlocal
[BaselineOp] Analyzing op @ 518 (end=594): div
[BaselineOp] Analyzing op @ 519 (end=594): setprop
[BaselineOp] Analyzing op @ 524 (end=594): pop
[BaselineOp] Analyzing op @ 525 (end=594): this
[BaselineOp] Analyzing op @ 526 (end=594): getlocal
[BaselineOp] Analyzing op @ 529 (end=594): getlocal
[BaselineOp] Analyzing op @ 532 (end=594): div
[BaselineOp] Analyzing op @ 533 (end=594): setprop
[BaselineOp] Analyzing op @ 538 (end=594): pop
[BaselineOp] Analyzing op @ 539 (end=594): this
[BaselineOp] Analyzing op @ 540 (end=594): getlocal
[BaselineOp] Analyzing op @ 543 (end=594): neg
[BaselineOp] Analyzing op @ 544 (end=594): getlocal
[BaselineOp] Analyzing op @ 547 (end=594): div
[BaselineOp] Analyzing op @ 548 (end=594): setprop
[BaselineOp] Analyzing op @ 553 (end=594): pop
[BaselineOp] Analyzing op @ 554 (end=594): this
[BaselineOp] Analyzing op @ 555 (end=594): newarray
[BaselineOp] Analyzing op @ 559 (end=594): double
[BaselineOp] Analyzing op @ 564 (end=594): initelem_array
[BaselineOp] Analyzing op @ 568 (end=594): double
[BaselineOp] Analyzing op @ 573 (end=594): initelem_array
[BaselineOp] Analyzing op @ 577 (end=594): double
[BaselineOp] Analyzing op @ 582 (end=594): initelem_array
[BaselineOp] Analyzing op @ 586 (end=594): endinit
[BaselineOp] Analyzing op @ 587 (end=594): setprop
[BaselineOp] Analyzing op @ 592 (end=594): pop
[BaselineOp] Analyzing op @ 593 (end=594): stop
[BaselineScripts] Baseline compiling script 3d-raytrace.js:125 (0x7f220e851380)
[BaselineOp] Compiling op @ 0: callgname
[BaselineOp] Compiling op @ 5: undefined
[BaselineOp] Compiling op @ 6: notearg
[BaselineOp] Compiling op @ 7: getarg
[BaselineOp] Compiling op @ 10: notearg
[BaselineOp] Compiling op @ 11: getarg
[BaselineOp] Compiling op @ 14: notearg
[BaselineOp] Compiling op @ 15: call
[BaselineOp] Compiling op @ 18: setlocal
[BaselineOp] Compiling op @ 21: pop
[BaselineOp] Compiling op @ 22: callgname
[BaselineOp] Compiling op @ 27: undefined
[BaselineOp] Compiling op @ 28: notearg
[BaselineOp] Compiling op @ 29: getarg
[BaselineOp] Compiling op @ 32: notearg
[BaselineOp] Compiling op @ 33: getarg
[BaselineOp] Compiling op @ 36: notearg
[BaselineOp] Compiling op @ 37: call
[BaselineOp] Compiling op @ 40: setlocal
[BaselineOp] Compiling op @ 43: pop
[BaselineOp] Compiling op @ 44: callgname
[BaselineOp] Compiling op @ 49: undefined
[BaselineOp] Compiling op @ 50: notearg
[BaselineOp] Compiling op @ 51: getlocal
[BaselineOp] Compiling op @ 54: notearg
[BaselineOp] Compiling op @ 55: getlocal
[BaselineOp] Compiling op @ 58: notearg
[BaselineOp] Compiling op @ 59: call
[BaselineOp] Compiling op @ 62: setlocal
[BaselineOp] Compiling op @ 65: pop
[BaselineOp] Compiling op @ 66: getgname
[BaselineOp] Compiling op @ 71: dup
[BaselineOp] Compiling op @ 72: callprop
[BaselineOp] Compiling op @ 77: swap
[BaselineOp] Compiling op @ 78: notearg
[BaselineOp] Compiling op @ 79: getlocal
[BaselineOp] Compiling op @ 82: zero
[BaselineOp] Compiling op @ 83: getelem
[BaselineOp] Compiling op @ 84: notearg
[BaselineOp] Compiling op @ 85: call
[BaselineOp] Compiling op @ 88: getgname
[BaselineOp] Compiling op @ 93: dup
[BaselineOp] Compiling op @ 94: callprop
[BaselineOp] Compiling op @ 99: swap
[BaselineOp] Compiling op @ 100: notearg
[BaselineOp] Compiling op @ 101: getlocal
[BaselineOp] Compiling op @ 104: one
[BaselineOp] Compiling op @ 105: getelem
[BaselineOp] Compiling op @ 106: notearg
[BaselineOp] Compiling op @ 107: call
[BaselineOp] Compiling op @ 110: gt
[BaselineOp] Compiling op @ 111: ifeq
[BaselineOp] Compiling op @ 116: getgname
[BaselineOp] [block counter] Emitting a block counter for op @ 116: getgname (lineno: 130 column: 0)
[BaselineOp] Compiling op @ 121: dup
[BaselineOp] Compiling op @ 122: callprop
[BaselineOp] Compiling op @ 127: swap
[BaselineOp] Compiling op @ 128: notearg
[BaselineOp] Compiling op @ 129: getlocal
[BaselineOp] Compiling op @ 132: zero
[BaselineOp] Compiling op @ 133: getelem
[BaselineOp] Compiling op @ 134: notearg
[BaselineOp] Compiling op @ 135: call
[BaselineOp] Compiling op @ 138: getgname
[BaselineOp] Compiling op @ 143: dup
[BaselineOp] Compiling op @ 144: callprop
[BaselineOp] Compiling op @ 149: swap
[BaselineOp] Compiling op @ 150: notearg
[BaselineOp] Compiling op @ 151: getlocal
[BaselineOp] Compiling op @ 154: int8
[BaselineOp] Compiling op @ 156: getelem
[BaselineOp] Compiling op @ 157: notearg
[BaselineOp] Compiling op @ 158: call
[BaselineOp] Compiling op @ 161: gt
[BaselineOp] Compiling op @ 162: ifeq
[BaselineOp] Compiling op @ 167: this
[BaselineOp] [block counter] Emitting a block counter for op @ 167: this (lineno: 131 column: 12)
[BaselineOp] Compiling op @ 168: zero
[BaselineOp] Compiling op @ 169: setprop
[BaselineOp] Compiling op @ 174: pop
[BaselineOp] Compiling op @ 175: goto
[BaselineOp] Compiling op @ 180: this
[BaselineOp] [block counter] Emitting a block counter for op @ 180: this (lineno: 133 column: 12)
[BaselineOp] Compiling op @ 181: int8
[BaselineOp] Compiling op @ 183: setprop
[BaselineOp] Compiling op @ 188: pop
[BaselineOp] Compiling op @ 189: goto
[BaselineOp] [block counter] Emitting a block counter for op @ 189: goto (lineno: 133 column: 12)
[BaselineOp] Compiling op @ 194: getgname
[BaselineOp] [block counter] Emitting a block counter for op @ 194: getgname (lineno: 135 column: 0)
[BaselineOp] Compiling op @ 199: dup
[BaselineOp] Compiling op @ 200: callprop
[BaselineOp] Compiling op @ 205: swap
[BaselineOp] Compiling op @ 206: notearg
[BaselineOp] Compiling op @ 207: getlocal
[BaselineOp] Compiling op @ 210: one
[BaselineOp] Compiling op @ 211: getelem
[BaselineOp] Compiling op @ 212: notearg
[BaselineOp] Compiling op @ 213: call
[BaselineOp] Compiling op @ 216: getgname
[BaselineOp] Compiling op @ 221: dup
[BaselineOp] Compiling op @ 222: callprop
[BaselineOp] Compiling op @ 227: swap
[BaselineOp] Compiling op @ 228: notearg
[BaselineOp] Compiling op @ 229: getlocal
[BaselineOp] Compiling op @ 232: int8
[BaselineOp] Compiling op @ 234: getelem
[BaselineOp] Compiling op @ 235: notearg
[BaselineOp] Compiling op @ 236: call
[BaselineOp] Compiling op @ 239: gt
[BaselineOp] Compiling op @ 240: ifeq
[BaselineOp] Compiling op @ 245: this
[BaselineOp] [block counter] Emitting a block counter for op @ 245: this (lineno: 136 column: 12)
[BaselineOp] Compiling op @ 246: one
[BaselineOp] Compiling op @ 247: setprop
[BaselineOp] Compiling op @ 252: pop
[BaselineOp] Compiling op @ 253: goto
[BaselineOp] Compiling op @ 258: this
[BaselineOp] [block counter] Emitting a block counter for op @ 258: this (lineno: 138 column: 12)
[BaselineOp] Compiling op @ 259: int8
[BaselineOp] Compiling op @ 261: setprop
[BaselineOp] Compiling op @ 266: pop
[BaselineOp] Compiling op @ 267: this
[BaselineOp] [block counter] Emitting a block counter for op @ 267: this (lineno: 139 column: 0)
[BaselineOp] Compiling op @ 268: getprop
[BaselineOp] Compiling op @ 273: one
[BaselineOp] Compiling op @ 274: add
[BaselineOp] Compiling op @ 275: int8
[BaselineOp] Compiling op @ 277: mod
[BaselineOp] Compiling op @ 278: setlocal
[BaselineOp] Compiling op @ 281: pop
[BaselineOp] Compiling op @ 282: this
[BaselineOp] Compiling op @ 283: getprop
[BaselineOp] Compiling op @ 288: int8
[BaselineOp] Compiling op @ 290: add
[BaselineOp] Compiling op @ 291: int8
[BaselineOp] Compiling op @ 293: mod
[BaselineOp] Compiling op @ 294: setlocal
[BaselineOp] Compiling op @ 297: pop
[BaselineOp] Compiling op @ 298: getlocal
[BaselineOp] Compiling op @ 301: getlocal
[BaselineOp] Compiling op @ 304: getelem
[BaselineOp] Compiling op @ 305: setlocal
[BaselineOp] Compiling op @ 308: pop
[BaselineOp] Compiling op @ 309: getlocal
[BaselineOp] Compiling op @ 312: getlocal
[BaselineOp] Compiling op @ 315: getelem
[BaselineOp] Compiling op @ 316: setlocal
[BaselineOp] Compiling op @ 319: pop
[BaselineOp] Compiling op @ 320: getlocal
[BaselineOp] Compiling op @ 323: getlocal
[BaselineOp] Compiling op @ 326: getelem
[BaselineOp] Compiling op @ 327: setlocal
[BaselineOp] Compiling op @ 330: pop
[BaselineOp] Compiling op @ 331: getlocal
[BaselineOp] Compiling op @ 334: getlocal
[BaselineOp] Compiling op @ 337: getelem
[BaselineOp] Compiling op @ 338: setlocal
[BaselineOp] Compiling op @ 341: pop
[BaselineOp] Compiling op @ 342: this
[BaselineOp] Compiling op @ 343: callgname
[BaselineOp] Compiling op @ 348: undefined
[BaselineOp] Compiling op @ 349: notearg
[BaselineOp] Compiling op @ 350: getlocal
[BaselineOp] Compiling op @ 353: notearg
[BaselineOp] Compiling op @ 354: call
[BaselineOp] Compiling op @ 357: setprop
[BaselineOp] Compiling op @ 362: pop
[BaselineOp] Compiling op @ 363: this
[BaselineOp] Compiling op @ 364: getlocal
[BaselineOp] Compiling op @ 367: getlocal
[BaselineOp] Compiling op @ 370: getelem
[BaselineOp] Compiling op @ 371: getlocal
[BaselineOp] Compiling op @ 374: this
[BaselineOp] Compiling op @ 375: getprop
[BaselineOp] Compiling op @ 380: getelem
[BaselineOp] Compiling op @ 381: div
[BaselineOp] Compiling op @ 382: setprop
[BaselineOp] Compiling op @ 387: pop
[BaselineOp] Compiling op @ 388: this
[BaselineOp] Compiling op @ 389: getlocal
[BaselineOp] Compiling op @ 392: getlocal
[BaselineOp] Compiling op @ 395: getelem
[BaselineOp] Compiling op @ 396: getlocal
[BaselineOp] Compiling op @ 399: this
[BaselineOp] Compiling op @ 400: getprop
[BaselineOp] Compiling op @ 405: getelem
[BaselineOp] Compiling op @ 406: div
[BaselineOp] Compiling op @ 407: setprop
[BaselineOp] Compiling op @ 412: pop
[BaselineOp] Compiling op @ 413: this
[BaselineOp] Compiling op @ 414: callgname
[BaselineOp] Compiling op @ 419: undefined
[BaselineOp] Compiling op @ 420: notearg
[BaselineOp] Compiling op @ 421: getlocal
[BaselineOp] Compiling op @ 424: notearg
[BaselineOp] Compiling op @ 425: getarg
[BaselineOp] Compiling op @ 428: notearg
[BaselineOp] Compiling op @ 429: call
[BaselineOp] Compiling op @ 432: getlocal
[BaselineOp] Compiling op @ 435: this
[BaselineOp] Compiling op @ 436: getprop
[BaselineOp] Compiling op @ 441: getelem
[BaselineOp] Compiling op @ 442: div
[BaselineOp] Compiling op @ 443: setprop
[BaselineOp] Compiling op @ 448: pop
[BaselineOp] Compiling op @ 449: getlocal
[BaselineOp] Compiling op @ 452: getlocal
[BaselineOp] Compiling op @ 455: mul
[BaselineOp] Compiling op @ 456: getlocal
[BaselineOp] Compiling op @ 459: getlocal
[BaselineOp] Compiling op @ 462: mul
[BaselineOp] Compiling op @ 463: sub
[BaselineOp] Compiling op @ 464: setlocal
[BaselineOp] Compiling op @ 467: pop
[BaselineOp] Compiling op @ 468: this
[BaselineOp] Compiling op @ 469: getarg
[BaselineOp] Compiling op @ 472: getlocal
[BaselineOp] Compiling op @ 475: getelem
[BaselineOp] Compiling op @ 476: setprop
[BaselineOp] Compiling op @ 481: pop
[BaselineOp] Compiling op @ 482: this
[BaselineOp] Compiling op @ 483: getarg
[BaselineOp] Compiling op @ 486: getlocal
[BaselineOp] Compiling op @ 489: getelem
[BaselineOp] Compiling op @ 490: setprop
[BaselineOp] Compiling op @ 495: pop
[BaselineOp] Compiling op @ 496: this
[BaselineOp] Compiling op @ 497: getlocal
[BaselineOp] Compiling op @ 500: getlocal
[BaselineOp] Compiling op @ 503: div
[BaselineOp] Compiling op @ 504: setprop
[BaselineOp] Compiling op @ 509: pop
[BaselineOp] Compiling op @ 510: this
[BaselineOp] Compiling op @ 511: getlocal
[BaselineOp] Compiling op @ 514: neg
[BaselineOp] Compiling op @ 515: getlocal
[BaselineOp] Compiling op @ 518: div
[BaselineOp] Compiling op @ 519: setprop
[BaselineOp] Compiling op @ 524: pop
[BaselineOp] Compiling op @ 525: this
[BaselineOp] Compiling op @ 526: getlocal
[BaselineOp] Compiling op @ 529: getlocal
[BaselineOp] Compiling op @ 532: div
[BaselineOp] Compiling op @ 533: setprop
[BaselineOp] Compiling op @ 538: pop
[BaselineOp] Compiling op @ 539: this
[BaselineOp] Compiling op @ 540: getlocal
[BaselineOp] Compiling op @ 543: neg
[BaselineOp] Compiling op @ 544: getlocal
[BaselineOp] Compiling op @ 547: div
[BaselineOp] Compiling op @ 548: setprop
[BaselineOp] Compiling op @ 553: pop
[BaselineOp] Compiling op @ 554: this
[BaselineOp] Compiling op @ 555: newarray
[BaselineOp] Compiling op @ 559: double
[BaselineOp] Compiling op @ 564: initelem_array
[BaselineOp] Compiling op @ 568: double
[BaselineOp] Compiling op @ 573: initelem_array
[BaselineOp] Compiling op @ 577: double
[BaselineOp] Compiling op @ 582: initelem_array
[BaselineOp] Compiling op @ 586: endinit
[BaselineOp] Compiling op @ 587: setprop
[BaselineOp] Compiling op @ 592: pop
[BaselineOp] Compiling op @ 593: stop
[BaselineScripts] Created BaselineScript 0x2aee600 (raw 0x7f221053fb88) for 3d-raytrace.js:125
[BaselineScripts] [block counter] 8 block counters were emitted for script 3d-raytrace.js:125 (0x2aee600) (lineno: 157 column: 36)
[BaselineOp] Analyzing op @ 0 (end=92): newarray
[BaselineOp] Analyzing op @ 4 (end=92): getarg
[BaselineOp] Analyzing op @ 7 (end=92): one
[BaselineOp] Analyzing op @ 8 (end=92): getelem
[BaselineOp] Analyzing op @ 9 (end=92): getarg
[BaselineOp] Analyzing op @ 12 (end=92): int8
[BaselineOp] Analyzing op @ 14 (end=92): getelem
[BaselineOp] Analyzing op @ 15 (end=92): mul
[BaselineOp] Analyzing op @ 16 (end=92): getarg
[BaselineOp] Analyzing op @ 19 (end=92): int8
[BaselineOp] Analyzing op @ 21 (end=92): getelem
[BaselineOp] Analyzing op @ 22 (end=92): getarg
[BaselineOp] Analyzing op @ 25 (end=92): one
[BaselineOp] Analyzing op @ 26 (end=92): getelem
[BaselineOp] Analyzing op @ 27 (end=92): mul
[BaselineOp] Analyzing op @ 28 (end=92): sub
[BaselineOp] Analyzing op @ 29 (end=92): initelem_array
[BaselineOp] Analyzing op @ 33 (end=92): getarg
[BaselineOp] Analyzing op @ 36 (end=92): int8
[BaselineOp] Analyzing op @ 38 (end=92): getelem
[BaselineOp] Analyzing op @ 39 (end=92): getarg
[BaselineOp] Analyzing op @ 42 (end=92): zero
[BaselineOp] Analyzing op @ 43 (end=92): getelem
[BaselineOp] Analyzing op @ 44 (end=92): mul
[BaselineOp] Analyzing op @ 45 (end=92): getarg
[BaselineOp] Analyzing op @ 48 (end=92): zero
[BaselineOp] Analyzing op @ 49 (end=92): getelem
[BaselineOp] Analyzing op @ 50 (end=92): getarg
[BaselineOp] Analyzing op @ 53 (end=92): int8
[BaselineOp] Analyzing op @ 55 (end=92): getelem
[BaselineOp] Analyzing op @ 56 (end=92): mul
[BaselineOp] Analyzing op @ 57 (end=92): sub
[BaselineOp] Analyzing op @ 58 (end=92): initelem_array
[BaselineOp] Analyzing op @ 62 (end=92): getarg
[BaselineOp] Analyzing op @ 65 (end=92): zero
[BaselineOp] Analyzing op @ 66 (end=92): getelem
[BaselineOp] Analyzing op @ 67 (end=92): getarg
[BaselineOp] Analyzing op @ 70 (end=92): one
[BaselineOp] Analyzing op @ 71 (end=92): getelem
[BaselineOp] Analyzing op @ 72 (end=92): mul
[BaselineOp] Analyzing op @ 73 (end=92): getarg
[BaselineOp] Analyzing op @ 76 (end=92): one
[BaselineOp] Analyzing op @ 77 (end=92): getelem
[BaselineOp] Analyzing op @ 78 (end=92): getarg
[BaselineOp] Analyzing op @ 81 (end=92): zero
[BaselineOp] Analyzing op @ 82 (end=92): getelem
[BaselineOp] Analyzing op @ 83 (end=92): mul
[BaselineOp] Analyzing op @ 84 (end=92): sub
[BaselineOp] Analyzing op @ 85 (end=92): initelem_array
[BaselineOp] Analyzing op @ 89 (end=92): endinit
[BaselineOp] Analyzing op @ 90 (end=92): return
[BaselineOp] Analyzing op @ 91 (end=92): stop
[BaselineScripts] Baseline compiling script 3d-raytrace.js:87 (0x7f220e851510)
[BaselineOp] Compiling op @ 0: newarray
[BaselineOp] Compiling op @ 4: getarg
[BaselineOp] Compiling op @ 7: one
[BaselineOp] Compiling op @ 8: getelem
[BaselineOp] Compiling op @ 9: getarg
[BaselineOp] Compiling op @ 12: int8
[BaselineOp] Compiling op @ 14: getelem
[BaselineOp] Compiling op @ 15: mul
[BaselineOp] Compiling op @ 16: getarg
[BaselineOp] Compiling op @ 19: int8
[BaselineOp] Compiling op @ 21: getelem
[BaselineOp] Compiling op @ 22: getarg
[BaselineOp] Compiling op @ 25: one
[BaselineOp] Compiling op @ 26: getelem
[BaselineOp] Compiling op @ 27: mul
[BaselineOp] Compiling op @ 28: sub
[BaselineOp] Compiling op @ 29: initelem_array
[BaselineOp] Compiling op @ 33: getarg
[BaselineOp] Compiling op @ 36: int8
[BaselineOp] Compiling op @ 38: getelem
[BaselineOp] Compiling op @ 39: getarg
[BaselineOp] Compiling op @ 42: zero
[BaselineOp] Compiling op @ 43: getelem
[BaselineOp] Compiling op @ 44: mul
[BaselineOp] Compiling op @ 45: getarg
[BaselineOp] Compiling op @ 48: zero
[BaselineOp] Compiling op @ 49: getelem
[BaselineOp] Compiling op @ 50: getarg
[BaselineOp] Compiling op @ 53: int8
[BaselineOp] Compiling op @ 55: getelem
[BaselineOp] Compiling op @ 56: mul
[BaselineOp] Compiling op @ 57: sub
[BaselineOp] Compiling op @ 58: initelem_array
[BaselineOp] Compiling op @ 62: getarg
[BaselineOp] Compiling op @ 65: zero
[BaselineOp] Compiling op @ 66: getelem
[BaselineOp] Compiling op @ 67: getarg
[BaselineOp] Compiling op @ 70: one
[BaselineOp] Compiling op @ 71: getelem
[BaselineOp] Compiling op @ 72: mul
[BaselineOp] Compiling op @ 73: getarg
[BaselineOp] Compiling op @ 76: one
[BaselineOp] Compiling op @ 77: getelem
[BaselineOp] Compiling op @ 78: getarg
[BaselineOp] Compiling op @ 81: zero
[BaselineOp] Compiling op @ 82: getelem
[BaselineOp] Compiling op @ 83: mul
[BaselineOp] Compiling op @ 84: sub
[BaselineOp] Compiling op @ 85: initelem_array
[BaselineOp] Compiling op @ 89: endinit
[BaselineOp] Compiling op @ 90: return
[BaselineOp] Compiling op @ 91: stop
[BaselineScripts] Created BaselineScript 0x2ae9290 (raw 0x7f2210540c50) for 3d-raytrace.js:87
[BaselineScripts] [block counter] 0 block counters were emitted for script 3d-raytrace.js:87 (0x2ae9290) (lineno: 90 column: 43)
[BaselineOp] Analyzing op @ 0 (end=65): callgname
[BaselineOp] Analyzing op @ 5 (end=65): undefined
[BaselineOp] Analyzing op @ 6 (end=65): notearg
[BaselineOp] Analyzing op @ 7 (end=65): getarg
[BaselineOp] Analyzing op @ 10 (end=65): notearg
[BaselineOp] Analyzing op @ 11 (end=65): call
[BaselineOp] Analyzing op @ 14 (end=65): setlocal
[BaselineOp] Analyzing op @ 17 (end=65): pop
[BaselineOp] Analyzing op @ 18 (end=65): newarray
[BaselineOp] Analyzing op @ 22 (end=65): getarg
[BaselineOp] Analyzing op @ 25 (end=65): zero
[BaselineOp] Analyzing op @ 26 (end=65): getelem
[BaselineOp] Analyzing op @ 27 (end=65): getlocal
[BaselineOp] Analyzing op @ 30 (end=65): div
[BaselineOp] Analyzing op @ 31 (end=65): initelem_array
[BaselineOp] Analyzing op @ 35 (end=65): getarg
[BaselineOp] Analyzing op @ 38 (end=65): one
[BaselineOp] Analyzing op @ 39 (end=65): getelem
[BaselineOp] Analyzing op @ 40 (end=65): getlocal
[BaselineOp] Analyzing op @ 43 (end=65): div
[BaselineOp] Analyzing op @ 44 (end=65): initelem_array
[BaselineOp] Analyzing op @ 48 (end=65): getarg
[BaselineOp] Analyzing op @ 51 (end=65): int8
[BaselineOp] Analyzing op @ 53 (end=65): getelem
[BaselineOp] Analyzing op @ 54 (end=65): getlocal
[BaselineOp] Analyzing op @ 57 (end=65): div
[BaselineOp] Analyzing op @ 58 (end=65): initelem_array
[BaselineOp] Analyzing op @ 62 (end=65): endinit
[BaselineOp] Analyzing op @ 63 (end=65): return
[BaselineOp] Analyzing op @ 64 (end=65): stop
[BaselineScripts] Baseline compiling script 3d-raytrace.js:94 (0x7f220e8515d8)
[BaselineOp] Compiling op @ 0: callgname
[BaselineOp] Compiling op @ 5: undefined
[BaselineOp] Compiling op @ 6: notearg
[BaselineOp] Compiling op @ 7: getarg
[BaselineOp] Compiling op @ 10: notearg
[BaselineOp] Compiling op @ 11: call
[BaselineOp] Compiling op @ 14: setlocal
[BaselineOp] Compiling op @ 17: pop
[BaselineOp] Compiling op @ 18: newarray
[BaselineOp] Compiling op @ 22: getarg
[BaselineOp] Compiling op @ 25: zero
[BaselineOp] Compiling op @ 26: getelem
[BaselineOp] Compiling op @ 27: getlocal
[BaselineOp] Compiling op @ 30: div
[BaselineOp] Compiling op @ 31: initelem_array
[BaselineOp] Compiling op @ 35: getarg
[BaselineOp] Compiling op @ 38: one
[BaselineOp] Compiling op @ 39: getelem
[BaselineOp] Compiling op @ 40: getlocal
[BaselineOp] Compiling op @ 43: div
[BaselineOp] Compiling op @ 44: initelem_array
[BaselineOp] Compiling op @ 48: getarg
[BaselineOp] Compiling op @ 51: int8
[BaselineOp] Compiling op @ 53: getelem
[BaselineOp] Compiling op @ 54: getlocal
[BaselineOp] Compiling op @ 57: div
[BaselineOp] Compiling op @ 58: initelem_array
[BaselineOp] Compiling op @ 62: endinit
[BaselineOp] Compiling op @ 63: return
[BaselineOp] Compiling op @ 64: stop
[BaselineScripts] Created BaselineScript 0x2ae9d90 (raw 0x7f22105419a0) for 3d-raytrace.js:94
[BaselineScripts] [block counter] 0 block counters were emitted for script 3d-raytrace.js:94 (0x2ae9d90) (lineno: 96 column: 48)
[BaselineOp] Analyzing op @ 0 (end=56): getgname
[BaselineOp] Analyzing op @ 5 (end=56): dup
[BaselineOp] Analyzing op @ 6 (end=56): callprop
[BaselineOp] Analyzing op @ 11 (end=56): swap
[BaselineOp] Analyzing op @ 12 (end=56): notearg
[BaselineOp] Analyzing op @ 13 (end=56): getarg
[BaselineOp] Analyzing op @ 16 (end=56): zero
[BaselineOp] Analyzing op @ 17 (end=56): getelem
[BaselineOp] Analyzing op @ 18 (end=56): getarg
[BaselineOp] Analyzing op @ 21 (end=56): zero
[BaselineOp] Analyzing op @ 22 (end=56): getelem
[BaselineOp] Analyzing op @ 23 (end=56): mul
[BaselineOp] Analyzing op @ 24 (end=56): getarg
[BaselineOp] Analyzing op @ 27 (end=56): one
[BaselineOp] Analyzing op @ 28 (end=56): getelem
[BaselineOp] Analyzing op @ 29 (end=56): getarg
[BaselineOp] Analyzing op @ 32 (end=56): one
[BaselineOp] Analyzing op @ 33 (end=56): getelem
[BaselineOp] Analyzing op @ 34 (end=56): mul
[BaselineOp] Analyzing op @ 35 (end=56): add
[BaselineOp] Analyzing op @ 36 (end=56): getarg
[BaselineOp] Analyzing op @ 39 (end=56): int8
[BaselineOp] Analyzing op @ 41 (end=56): getelem
[BaselineOp] Analyzing op @ 42 (end=56): getarg
[BaselineOp] Analyzing op @ 45 (end=56): int8
[BaselineOp] Analyzing op @ 47 (end=56): getelem
[BaselineOp] Analyzing op @ 48 (end=56): mul
[BaselineOp] Analyzing op @ 49 (end=56): add
[BaselineOp] Analyzing op @ 50 (end=56): notearg
[BaselineOp] Analyzing op @ 51 (end=56): call
[BaselineOp] Analyzing op @ 54 (end=56): return
[BaselineOp] Analyzing op @ 55 (end=56): stop
[BaselineScripts] Baseline compiling script 3d-raytrace.js:34 (0x7f220e8516a0)
[BaselineOp] Compiling op @ 0: getgname
[BaselineOp] Compiling op @ 5: dup
[BaselineOp] Compiling op @ 6: callprop
[BaselineOp] Compiling op @ 11: swap
[BaselineOp] Compiling op @ 12: notearg
[BaselineOp] Compiling op @ 13: getarg
[BaselineOp] Compiling op @ 16: zero
[BaselineOp] Compiling op @ 17: getelem
[BaselineOp] Compiling op @ 18: getarg
[BaselineOp] Compiling op @ 21: zero
[BaselineOp] Compiling op @ 22: getelem
[BaselineOp] Compiling op @ 23: mul
[BaselineOp] Compiling op @ 24: getarg
[BaselineOp] Compiling op @ 27: one
[BaselineOp] Compiling op @ 28: getelem
[BaselineOp] Compiling op @ 29: getarg
[BaselineOp] Compiling op @ 32: one
[BaselineOp] Compiling op @ 33: getelem
[BaselineOp] Compiling op @ 34: mul
[BaselineOp] Compiling op @ 35: add
[BaselineOp] Compiling op @ 36: getarg
[BaselineOp] Compiling op @ 39: int8
[BaselineOp] Compiling op @ 41: getelem
[BaselineOp] Compiling op @ 42: getarg
[BaselineOp] Compiling op @ 45: int8
[BaselineOp] Compiling op @ 47: getelem
[BaselineOp] Compiling op @ 48: mul
[BaselineOp] Compiling op @ 49: add
[BaselineOp] Compiling op @ 50: notearg
[BaselineOp] Compiling op @ 51: call
[BaselineOp] Compiling op @ 54: return
[BaselineOp] Compiling op @ 55: stop
[BaselineScripts] Created BaselineScript 0x2aed650 (raw 0x7f2210541c40) for 3d-raytrace.js:34
[BaselineScripts] [block counter] 0 block counters were emitted for script 3d-raytrace.js:34 (0x2aed650) (lineno: 35 column: 80)
[BaselineOp] Analyzing op @ 0 (end=39): getarg
[BaselineOp] Analyzing op @ 3 (end=39): zero
[BaselineOp] Analyzing op @ 4 (end=39): getelem
[BaselineOp] Analyzing op @ 5 (end=39): getarg
[BaselineOp] Analyzing op @ 8 (end=39): zero
[BaselineOp] Analyzing op @ 9 (end=39): getelem
[BaselineOp] Analyzing op @ 10 (end=39): mul
[BaselineOp] Analyzing op @ 11 (end=39): getarg
[BaselineOp] Analyzing op @ 14 (end=39): one
[BaselineOp] Analyzing op @ 15 (end=39): getelem
[BaselineOp] Analyzing op @ 16 (end=39): getarg
[BaselineOp] Analyzing op @ 19 (end=39): one
[BaselineOp] Analyzing op @ 20 (end=39): getelem
[BaselineOp] Analyzing op @ 21 (end=39): mul
[BaselineOp] Analyzing op @ 22 (end=39): add
[BaselineOp] Analyzing op @ 23 (end=39): getarg
[BaselineOp] Analyzing op @ 26 (end=39): int8
[BaselineOp] Analyzing op @ 28 (end=39): getelem
[BaselineOp] Analyzing op @ 29 (end=39): getarg
[BaselineOp] Analyzing op @ 32 (end=39): int8
[BaselineOp] Analyzing op @ 34 (end=39): getelem
[BaselineOp] Analyzing op @ 35 (end=39): mul
[BaselineOp] Analyzing op @ 36 (end=39): add
[BaselineOp] Analyzing op @ 37 (end=39): return
[BaselineOp] Analyzing op @ 38 (end=39): stop
[BaselineScripts] Baseline compiling script 3d-raytrace.js:79 (0x7f220e851768)
[BaselineOp] Compiling op @ 0: getarg
[BaselineOp] Compiling op @ 3: zero
[BaselineOp] Compiling op @ 4: getelem
[BaselineOp] Compiling op @ 5: getarg
[BaselineOp] Compiling op @ 8: zero
[BaselineOp] Compiling op @ 9: getelem
[BaselineOp] Compiling op @ 10: mul
[BaselineOp] Compiling op @ 11: getarg
[BaselineOp] Compiling op @ 14: one
[BaselineOp] Compiling op @ 15: getelem
[BaselineOp] Compiling op @ 16: getarg
[BaselineOp] Compiling op @ 19: one
[BaselineOp] Compiling op @ 20: getelem
[BaselineOp] Compiling op @ 21: mul
[BaselineOp] Compiling op @ 22: add
[BaselineOp] Compiling op @ 23: getarg
[BaselineOp] Compiling op @ 26: int8
[BaselineOp] Compiling op @ 28: getelem
[BaselineOp] Compiling op @ 29: getarg
[BaselineOp] Compiling op @ 32: int8
[BaselineOp] Compiling op @ 34: getelem
[BaselineOp] Compiling op @ 35: mul
[BaselineOp] Compiling op @ 36: add
[BaselineOp] Compiling op @ 37: return
[BaselineOp] Compiling op @ 38: stop
[BaselineScripts] Created BaselineScript 0x2aeccb0 (raw 0x7f2210522040) for 3d-raytrace.js:79
[BaselineScripts] [block counter] 0 block counters were emitted for script 3d-raytrace.js:79 (0x2aeccb0) (lineno: 80 column: 57)
[BaselineOp] Analyzing op @ 0 (end=24): getgname
[BaselineOp] Analyzing op @ 5 (end=24): undefined
[BaselineOp] Analyzing op @ 6 (end=24): notearg
[BaselineOp] Analyzing op @ 7 (end=24): getarg
[BaselineOp] Analyzing op @ 10 (end=24): notearg
[BaselineOp] Analyzing op @ 11 (end=24): getarg
[BaselineOp] Analyzing op @ 14 (end=24): notearg
[BaselineOp] Analyzing op @ 15 (end=24): getarg
[BaselineOp] Analyzing op @ 18 (end=24): notearg
[BaselineOp] Analyzing op @ 19 (end=24): new
[BaselineOp] Analyzing op @ 22 (end=24): return
[BaselineOp] Analyzing op @ 23 (end=24): stop
[BaselineScripts] Baseline compiling script 3d-raytrace.js:26 (0x7f220e8512b8)
[BaselineOp] Compiling op @ 0: getgname
[BaselineOp] Compiling op @ 5: undefined
[BaselineOp] Compiling op @ 6: notearg
[BaselineOp] Compiling op @ 7: getarg
[BaselineOp] Compiling op @ 10: notearg
[BaselineOp] Compiling op @ 11: getarg
[BaselineOp] Compiling op @ 14: notearg
[BaselineOp] Compiling op @ 15: getarg
[BaselineOp] Compiling op @ 18: notearg
[BaselineOp] Compiling op @ 19: new
[BaselineOp] Compiling op @ 22: return
[BaselineOp] Compiling op @ 23: stop
[BaselineScripts] Created BaselineScript 0x2aedf50 (raw 0x7f22105225f8) for 3d-raytrace.js:26
[BaselineScripts] [block counter] 0 block counters were emitted for script 3d-raytrace.js:26 (0x2aedf50) (lineno: 27 column: 28)
[BaselineOp] Analyzing op @ 0 (end=1529): getgname
[BaselineOp] Analyzing op @ 5 (end=1529): undefined
[BaselineOp] Analyzing op @ 6 (end=1529): notearg
[BaselineOp] Analyzing op @ 7 (end=1529): new
[BaselineOp] Analyzing op @ 10 (end=1529): dup
[BaselineOp] Analyzing op @ 11 (end=1529): callprop
[BaselineOp] Analyzing op @ 16 (end=1529): swap
[BaselineOp] Analyzing op @ 17 (end=1529): notearg
[BaselineOp] Analyzing op @ 18 (end=1529): call
[BaselineOp] Analyzing op @ 21 (end=1529): setlocal
[BaselineOp] Analyzing op @ 24 (end=1529): pop
[BaselineOp] Analyzing op @ 25 (end=1529): int8
[BaselineOp] Analyzing op @ 27 (end=1529): int8
[BaselineOp] Analyzing op @ 29 (end=1529): mul
[BaselineOp] Analyzing op @ 30 (end=1529): setlocal
[BaselineOp] Analyzing op @ 33 (end=1529): pop
[BaselineOp] Analyzing op @ 34 (end=1529): getgname
[BaselineOp] Analyzing op @ 39 (end=1529): undefined
[BaselineOp] Analyzing op @ 40 (end=1529): notearg
[BaselineOp] Analyzing op @ 41 (end=1529): new
[BaselineOp] Analyzing op @ 44 (end=1529): setlocal
[BaselineOp] Analyzing op @ 47 (end=1529): pop
[BaselineOp] Analyzing op @ 48 (end=1529): callgname
[BaselineOp] Analyzing op @ 53 (end=1529): undefined
[BaselineOp] Analyzing op @ 54 (end=1529): notearg
[BaselineOp] Analyzing op @ 55 (end=1529): int8
[BaselineOp] Analyzing op @ 57 (end=1529): neg
[BaselineOp] Analyzing op @ 58 (end=1529): notearg
[BaselineOp] Analyzing op @ 59 (end=1529): int8
[BaselineOp] Analyzing op @ 61 (end=1529): notearg
[BaselineOp] Analyzing op @ 62 (end=1529): int8
[BaselineOp] Analyzing op @ 64 (end=1529): neg
[BaselineOp] Analyzing op @ 65 (end=1529): notearg
[BaselineOp] Analyzing op @ 66 (end=1529): call
[BaselineOp] Analyzing op @ 69 (end=1529): setlocal
[BaselineOp] Analyzing op @ 72 (end=1529): pop
[BaselineOp] Analyzing op @ 73 (end=1529): callgname
[BaselineOp] Analyzing op @ 78 (end=1529): undefined
[BaselineOp] Analyzing op @ 79 (end=1529): notearg
[BaselineOp] Analyzing op @ 80 (end=1529): int8
[BaselineOp] Analyzing op @ 82 (end=1529): notearg
[BaselineOp] Analyzing op @ 83 (end=1529): int8
[BaselineOp] Analyzing op @ 85 (end=1529): notearg
[BaselineOp] Analyzing op @ 86 (end=1529): int8
[BaselineOp] Analyzing op @ 88 (end=1529): neg
[BaselineOp] Analyzing op @ 89 (end=1529): notearg
[BaselineOp] Analyzing op @ 90 (end=1529): call
[BaselineOp] Analyzing op @ 93 (end=1529): setlocal
[BaselineOp] Analyzing op @ 96 (end=1529): pop
[BaselineOp] Analyzing op @ 97 (end=1529): callgname
[BaselineOp] Analyzing op @ 102 (end=1529): undefined
[BaselineOp] Analyzing op @ 103 (end=1529): notearg
[BaselineOp] Analyzing op @ 104 (end=1529): int8
[BaselineOp] Analyzing op @ 106 (end=1529): neg
[BaselineOp] Analyzing op @ 107 (end=1529): notearg
[BaselineOp] Analyzing op @ 108 (end=1529): int8
[BaselineOp] Analyzing op @ 110 (end=1529): notearg
[BaselineOp] Analyzing op @ 111 (end=1529): int8
[BaselineOp] Analyzing op @ 113 (end=1529): notearg
[BaselineOp] Analyzing op @ 114 (end=1529): call
[BaselineOp] Analyzing op @ 117 (end=1529): setlocal
[BaselineOp] Analyzing op @ 120 (end=1529): pop
[BaselineOp] Analyzing op @ 121 (end=1529): callgname
[BaselineOp] Analyzing op @ 126 (end=1529): undefined
[BaselineOp] Analyzing op @ 127 (end=1529): notearg
[BaselineOp] Analyzing op @ 128 (end=1529): int8
[BaselineOp] Analyzing op @ 130 (end=1529): notearg
[BaselineOp] Analyzing op @ 131 (end=1529): int8
[BaselineOp] Analyzing op @ 133 (end=1529): notearg
[BaselineOp] Analyzing op @ 134 (end=1529): int8
[BaselineOp] Analyzing op @ 136 (end=1529): notearg
[BaselineOp] Analyzing op @ 137 (end=1529): call
[BaselineOp] Analyzing op @ 140 (end=1529): setlocal
[BaselineOp] Analyzing op @ 143 (end=1529): pop
[BaselineOp] Analyzing op @ 144 (end=1529): callgname
[BaselineOp] Analyzing op @ 149 (end=1529): undefined
[BaselineOp] Analyzing op @ 150 (end=1529): notearg
[BaselineOp] Analyzing op @ 151 (end=1529): int8
[BaselineOp] Analyzing op @ 153 (end=1529): neg
[BaselineOp] Analyzing op @ 154 (end=1529): notearg
[BaselineOp] Analyzing op @ 155 (end=1529): int8
[BaselineOp] Analyzing op @ 157 (end=1529): neg
[BaselineOp] Analyzing op @ 158 (end=1529): notearg
[BaselineOp] Analyzing op @ 159 (end=1529): int8
[BaselineOp] Analyzing op @ 161 (end=1529): neg
[BaselineOp] Analyzing op @ 162 (end=1529): notearg
[BaselineOp] Analyzing op @ 163 (end=1529): call
[BaselineOp] Analyzing op @ 166 (end=1529): setlocal
[BaselineOp] Analyzing op @ 169 (end=1529): pop
[BaselineOp] Analyzing op @ 170 (end=1529): callgname
[BaselineOp] Analyzing op @ 175 (end=1529): undefined
[BaselineOp] Analyzing op @ 176 (end=1529): notearg
[BaselineOp] Analyzing op @ 177 (end=1529): int8
[BaselineOp] Analyzing op @ 179 (end=1529): notearg
[BaselineOp] Analyzing op @ 180 (end=1529): int8
[BaselineOp] Analyzing op @ 182 (end=1529): neg
[BaselineOp] Analyzing op @ 183 (end=1529): notearg
[BaselineOp] Analyzing op @ 184 (end=1529): int8
[BaselineOp] Analyzing op @ 186 (end=1529): neg
[BaselineOp] Analyzing op @ 187 (end=1529): notearg
[BaselineOp] Analyzing op @ 188 (end=1529): call
[BaselineOp] Analyzing op @ 191 (end=1529): setlocal
[BaselineOp] Analyzing op @ 194 (end=1529): pop
[BaselineOp] Analyzing op @ 195 (end=1529): callgname
[BaselineOp] Analyzing op @ 200 (end=1529): undefined
[BaselineOp] Analyzing op @ 201 (end=1529): notearg
[BaselineOp] Analyzing op @ 202 (end=1529): int8
[BaselineOp] Analyzing op @ 204 (end=1529): neg
[BaselineOp] Analyzing op @ 205 (end=1529): notearg
[BaselineOp] Analyzing op @ 206 (end=1529): int8
[BaselineOp] Analyzing op @ 208 (end=1529): neg
[BaselineOp] Analyzing op @ 209 (end=1529): notearg
[BaselineOp] Analyzing op @ 210 (end=1529): int8
[BaselineOp] Analyzing op @ 212 (end=1529): notearg
[BaselineOp] Analyzing op @ 213 (end=1529): call
[BaselineOp] Analyzing op @ 216 (end=1529): setlocal
[BaselineOp] Analyzing op @ 219 (end=1529): pop
[BaselineOp] Analyzing op @ 220 (end=1529): callgname
[BaselineOp] Analyzing op @ 225 (end=1529): undefined
[BaselineOp] Analyzing op @ 226 (end=1529): notearg
[BaselineOp] Analyzing op @ 227 (end=1529): int8
[BaselineOp] Analyzing op @ 229 (end=1529): notearg
[BaselineOp] Analyzing op @ 230 (end=1529): int8
[BaselineOp] Analyzing op @ 232 (end=1529): neg
[BaselineOp] Analyzing op @ 233 (end=1529): notearg
[BaselineOp] Analyzing op @ 234 (end=1529): int8
[BaselineOp] Analyzing op @ 236 (end=1529): notearg
[BaselineOp] Analyzing op @ 237 (end=1529): call
[BaselineOp] Analyzing op @ 240 (end=1529): setlocal
[BaselineOp] Analyzing op @ 243 (end=1529): pop
[BaselineOp] Analyzing op @ 244 (end=1529): zero
[BaselineOp] Analyzing op @ 245 (end=1529): setlocal
[BaselineOp] Analyzing op @ 248 (end=1529): pop
[BaselineOp] Analyzing op @ 249 (end=1529): getlocal
[BaselineOp] Analyzing op @ 252 (end=1529): getlocal
[BaselineOp] Analyzing op @ 255 (end=1529): pos
[BaselineOp] Analyzing op @ 256 (end=1529): dup
[BaselineOp] Analyzing op @ 257 (end=1529): one
[BaselineOp] Analyzing op @ 258 (end=1529): add
[BaselineOp] Analyzing op @ 259 (end=1529): setlocal
[BaselineOp] Analyzing op @ 262 (end=1529): pop
[BaselineOp] Analyzing op @ 263 (end=1529): getgname
[BaselineOp] Analyzing op @ 268 (end=1529): undefined
[BaselineOp] Analyzing op @ 269 (end=1529): notearg
[BaselineOp] Analyzing op @ 270 (end=1529): getlocal
[BaselineOp] Analyzing op @ 273 (end=1529): notearg
[BaselineOp] Analyzing op @ 274 (end=1529): getlocal
[BaselineOp] Analyzing op @ 277 (end=1529): notearg
[BaselineOp] Analyzing op @ 278 (end=1529): getlocal
[BaselineOp] Analyzing op @ 281 (end=1529): notearg
[BaselineOp] Analyzing op @ 282 (end=1529): new
[BaselineOp] Analyzing op @ 285 (end=1529): setelem
[BaselineOp] Analyzing op @ 286 (end=1529): pop
[BaselineOp] Analyzing op @ 287 (end=1529): getlocal
[BaselineOp] Analyzing op @ 290 (end=1529): getlocal
[BaselineOp] Analyzing op @ 293 (end=1529): pos
[BaselineOp] Analyzing op @ 294 (end=1529): dup
[BaselineOp] Analyzing op @ 295 (end=1529): one
[BaselineOp] Analyzing op @ 296 (end=1529): add
[BaselineOp] Analyzing op @ 297 (end=1529): setlocal
[BaselineOp] Analyzing op @ 300 (end=1529): pop
[BaselineOp] Analyzing op @ 301 (end=1529): getgname
[BaselineOp] Analyzing op @ 306 (end=1529): undefined
[BaselineOp] Analyzing op @ 307 (end=1529): notearg
[BaselineOp] Analyzing op @ 308 (end=1529): getlocal
[BaselineOp] Analyzing op @ 311 (end=1529): notearg
[BaselineOp] Analyzing op @ 312 (end=1529): getlocal
[BaselineOp] Analyzing op @ 315 (end=1529): notearg
[BaselineOp] Analyzing op @ 316 (end=1529): getlocal
[BaselineOp] Analyzing op @ 319 (end=1529): notearg
[BaselineOp] Analyzing op @ 320 (end=1529): new
[BaselineOp] Analyzing op @ 323 (end=1529): setelem
[BaselineOp] Analyzing op @ 324 (end=1529): pop
[BaselineOp] Analyzing op @ 325 (end=1529): getlocal
[BaselineOp] Analyzing op @ 328 (end=1529): getlocal
[BaselineOp] Analyzing op @ 331 (end=1529): pos
[BaselineOp] Analyzing op @ 332 (end=1529): dup
[BaselineOp] Analyzing op @ 333 (end=1529): one
[BaselineOp] Analyzing op @ 334 (end=1529): add
[BaselineOp] Analyzing op @ 335 (end=1529): setlocal
[BaselineOp] Analyzing op @ 338 (end=1529): pop
[BaselineOp] Analyzing op @ 339 (end=1529): getgname
[BaselineOp] Analyzing op @ 344 (end=1529): undefined
[BaselineOp] Analyzing op @ 345 (end=1529): notearg
[BaselineOp] Analyzing op @ 346 (end=1529): getlocal
[BaselineOp] Analyzing op @ 349 (end=1529): notearg
[BaselineOp] Analyzing op @ 350 (end=1529): getlocal
[BaselineOp] Analyzing op @ 353 (end=1529): notearg
[BaselineOp] Analyzing op @ 354 (end=1529): getlocal
[BaselineOp] Analyzing op @ 357 (end=1529): notearg
[BaselineOp] Analyzing op @ 358 (end=1529): new
[BaselineOp] Analyzing op @ 361 (end=1529): setelem
[BaselineOp] Analyzing op @ 362 (end=1529): pop
[BaselineOp] Analyzing op @ 363 (end=1529): getlocal
[BaselineOp] Analyzing op @ 366 (end=1529): getlocal
[BaselineOp] Analyzing op @ 369 (end=1529): pos
[BaselineOp] Analyzing op @ 370 (end=1529): dup
[BaselineOp] Analyzing op @ 371 (end=1529): one
[BaselineOp] Analyzing op @ 372 (end=1529): add
[BaselineOp] Analyzing op @ 373 (end=1529): setlocal
[BaselineOp] Analyzing op @ 376 (end=1529): pop
[BaselineOp] Analyzing op @ 377 (end=1529): getgname
[BaselineOp] Analyzing op @ 382 (end=1529): undefined
[BaselineOp] Analyzing op @ 383 (end=1529): notearg
[BaselineOp] Analyzing op @ 384 (end=1529): getlocal
[BaselineOp] Analyzing op @ 387 (end=1529): notearg
[BaselineOp] Analyzing op @ 388 (end=1529): getlocal
[BaselineOp] Analyzing op @ 391 (end=1529): notearg
[BaselineOp] Analyzing op @ 392 (end=1529): getlocal
[BaselineOp] Analyzing op @ 395 (end=1529): notearg
[BaselineOp] Analyzing op @ 396 (end=1529): new
[BaselineOp] Analyzing op @ 399 (end=1529): setelem
[BaselineOp] Analyzing op @ 400 (end=1529): pop
[BaselineOp] Analyzing op @ 401 (end=1529): getlocal
[BaselineOp] Analyzing op @ 404 (end=1529): getlocal
[BaselineOp] Analyzing op @ 407 (end=1529): pos
[BaselineOp] Analyzing op @ 408 (end=1529): dup
[BaselineOp] Analyzing op @ 409 (end=1529): one
[BaselineOp] Analyzing op @ 410 (end=1529): add
[BaselineOp] Analyzing op @ 411 (end=1529): setlocal
[BaselineOp] Analyzing op @ 414 (end=1529): pop
[BaselineOp] Analyzing op @ 415 (end=1529): getgname
[BaselineOp] Analyzing op @ 420 (end=1529): undefined
[BaselineOp] Analyzing op @ 421 (end=1529): notearg
[BaselineOp] Analyzing op @ 422 (end=1529): getlocal
[BaselineOp] Analyzing op @ 425 (end=1529): notearg
[BaselineOp] Analyzing op @ 426 (end=1529): getlocal
[BaselineOp] Analyzing op @ 429 (end=1529): notearg
[BaselineOp] Analyzing op @ 430 (end=1529): getlocal
[BaselineOp] Analyzing op @ 433 (end=1529): notearg
[BaselineOp] Analyzing op @ 434 (end=1529): new
[BaselineOp] Analyzing op @ 437 (end=1529): setelem
[BaselineOp] Analyzing op @ 438 (end=1529): pop
[BaselineOp] Analyzing op @ 439 (end=1529): getlocal
[BaselineOp] Analyzing op @ 442 (end=1529): getlocal
[BaselineOp] Analyzing op @ 445 (end=1529): pos
[BaselineOp] Analyzing op @ 446 (end=1529): dup
[BaselineOp] Analyzing op @ 447 (end=1529): one
[BaselineOp] Analyzing op @ 448 (end=1529): add
[BaselineOp] Analyzing op @ 449 (end=1529): setlocal
[BaselineOp] Analyzing op @ 452 (end=1529): pop
[BaselineOp] Analyzing op @ 453 (end=1529): getgname
[BaselineOp] Analyzing op @ 458 (end=1529): undefined
[BaselineOp] Analyzing op @ 459 (end=1529): notearg
[BaselineOp] Analyzing op @ 460 (end=1529): getlocal
[BaselineOp] Analyzing op @ 463 (end=1529): notearg
[BaselineOp] Analyzing op @ 464 (end=1529): getlocal
[BaselineOp] Analyzing op @ 467 (end=1529): notearg
[BaselineOp] Analyzing op @ 468 (end=1529): getlocal
[BaselineOp] Analyzing op @ 471 (end=1529): notearg
[BaselineOp] Analyzing op @ 472 (end=1529): new
[BaselineOp] Analyzing op @ 475 (end=1529): setelem
[BaselineOp] Analyzing op @ 476 (end=1529): pop
[BaselineOp] Analyzing op @ 477 (end=1529): getlocal
[BaselineOp] Analyzing op @ 480 (end=1529): getlocal
[BaselineOp] Analyzing op @ 483 (end=1529): pos
[BaselineOp] Analyzing op @ 484 (end=1529): dup
[BaselineOp] Analyzing op @ 485 (end=1529): one
[BaselineOp] Analyzing op @ 486 (end=1529): add
[BaselineOp] Analyzing op @ 487 (end=1529): setlocal
[BaselineOp] Analyzing op @ 490 (end=1529): pop
[BaselineOp] Analyzing op @ 491 (end=1529): getgname
[BaselineOp] Analyzing op @ 496 (end=1529): undefined
[BaselineOp] Analyzing op @ 497 (end=1529): notearg
[BaselineOp] Analyzing op @ 498 (end=1529): getlocal
[BaselineOp] Analyzing op @ 501 (end=1529): notearg
[BaselineOp] Analyzing op @ 502 (end=1529): getlocal
[BaselineOp] Analyzing op @ 505 (end=1529): notearg
[BaselineOp] Analyzing op @ 506 (end=1529): getlocal
[BaselineOp] Analyzing op @ 509 (end=1529): notearg
[BaselineOp] Analyzing op @ 510 (end=1529): new
[BaselineOp] Analyzing op @ 513 (end=1529): setelem
[BaselineOp] Analyzing op @ 514 (end=1529): pop
[BaselineOp] Analyzing op @ 515 (end=1529): getlocal
[BaselineOp] Analyzing op @ 518 (end=1529): getlocal
[BaselineOp] Analyzing op @ 521 (end=1529): pos
[BaselineOp] Analyzing op @ 522 (end=1529): dup
[BaselineOp] Analyzing op @ 523 (end=1529): one
[BaselineOp] Analyzing op @ 524 (end=1529): add
[BaselineOp] Analyzing op @ 525 (end=1529): setlocal
[BaselineOp] Analyzing op @ 528 (end=1529): pop
[BaselineOp] Analyzing op @ 529 (end=1529): getgname
[BaselineOp] Analyzing op @ 534 (end=1529): undefined
[BaselineOp] Analyzing op @ 535 (end=1529): notearg
[BaselineOp] Analyzing op @ 536 (end=1529): getlocal
[BaselineOp] Analyzing op @ 539 (end=1529): notearg
[BaselineOp] Analyzing op @ 540 (end=1529): getlocal
[BaselineOp] Analyzing op @ 543 (end=1529): notearg
[BaselineOp] Analyzing op @ 544 (end=1529): getlocal
[BaselineOp] Analyzing op @ 547 (end=1529): notearg
[BaselineOp] Analyzing op @ 548 (end=1529): new
[BaselineOp] Analyzing op @ 551 (end=1529): setelem
[BaselineOp] Analyzing op @ 552 (end=1529): pop
[BaselineOp] Analyzing op @ 553 (end=1529): getlocal
[BaselineOp] Analyzing op @ 556 (end=1529): getlocal
[BaselineOp] Analyzing op @ 559 (end=1529): pos
[BaselineOp] Analyzing op @ 560 (end=1529): dup
[BaselineOp] Analyzing op @ 561 (end=1529): one
[BaselineOp] Analyzing op @ 562 (end=1529): add
[BaselineOp] Analyzing op @ 563 (end=1529): setlocal
[BaselineOp] Analyzing op @ 566 (end=1529): pop
[BaselineOp] Analyzing op @ 567 (end=1529): getgname
[BaselineOp] Analyzing op @ 572 (end=1529): undefined
[BaselineOp] Analyzing op @ 573 (end=1529): notearg
[BaselineOp] Analyzing op @ 574 (end=1529): getlocal
[BaselineOp] Analyzing op @ 577 (end=1529): notearg
[BaselineOp] Analyzing op @ 578 (end=1529): getlocal
[BaselineOp] Analyzing op @ 581 (end=1529): notearg
[BaselineOp] Analyzing op @ 582 (end=1529): getlocal
[BaselineOp] Analyzing op @ 585 (end=1529): notearg
[BaselineOp] Analyzing op @ 586 (end=1529): new
[BaselineOp] Analyzing op @ 589 (end=1529): setelem
[BaselineOp] Analyzing op @ 590 (end=1529): pop
[BaselineOp] Analyzing op @ 591 (end=1529): getlocal
[BaselineOp] Analyzing op @ 594 (end=1529): getlocal
[BaselineOp] Analyzing op @ 597 (end=1529): pos
[BaselineOp] Analyzing op @ 598 (end=1529): dup
[BaselineOp] Analyzing op @ 599 (end=1529): one
[BaselineOp] Analyzing op @ 600 (end=1529): add
[BaselineOp] Analyzing op @ 601 (end=1529): setlocal
[BaselineOp] Analyzing op @ 604 (end=1529): pop
[BaselineOp] Analyzing op @ 605 (end=1529): getgname
[BaselineOp] Analyzing op @ 610 (end=1529): undefined
[BaselineOp] Analyzing op @ 611 (end=1529): notearg
[BaselineOp] Analyzing op @ 612 (end=1529): getlocal
[BaselineOp] Analyzing op @ 615 (end=1529): notearg
[BaselineOp] Analyzing op @ 616 (end=1529): getlocal
[BaselineOp] Analyzing op @ 619 (end=1529): notearg
[BaselineOp] Analyzing op @ 620 (end=1529): getlocal
[BaselineOp] Analyzing op @ 623 (end=1529): notearg
[BaselineOp] Analyzing op @ 624 (end=1529): new
[BaselineOp] Analyzing op @ 627 (end=1529): setelem
[BaselineOp] Analyzing op @ 628 (end=1529): pop
[BaselineOp] Analyzing op @ 629 (end=1529): getlocal
[BaselineOp] Analyzing op @ 632 (end=1529): getlocal
[BaselineOp] Analyzing op @ 635 (end=1529): pos
[BaselineOp] Analyzing op @ 636 (end=1529): dup
[BaselineOp] Analyzing op @ 637 (end=1529): one
[BaselineOp] Analyzing op @ 638 (end=1529): add
[BaselineOp] Analyzing op @ 639 (end=1529): setlocal
[BaselineOp] Analyzing op @ 642 (end=1529): pop
[BaselineOp] Analyzing op @ 643 (end=1529): getgname
[BaselineOp] Analyzing op @ 648 (end=1529): undefined
[BaselineOp] Analyzing op @ 649 (end=1529): notearg
[BaselineOp] Analyzing op @ 650 (end=1529): getlocal
[BaselineOp] Analyzing op @ 653 (end=1529): notearg
[BaselineOp] Analyzing op @ 654 (end=1529): getlocal
[BaselineOp] Analyzing op @ 657 (end=1529): notearg
[BaselineOp] Analyzing op @ 658 (end=1529): getlocal
[BaselineOp] Analyzing op @ 661 (end=1529): notearg
[BaselineOp] Analyzing op @ 662 (end=1529): new
[BaselineOp] Analyzing op @ 665 (end=1529): setelem
[BaselineOp] Analyzing op @ 666 (end=1529): pop
[BaselineOp] Analyzing op @ 667 (end=1529): getlocal
[BaselineOp] Analyzing op @ 670 (end=1529): getlocal
[BaselineOp] Analyzing op @ 673 (end=1529): pos
[BaselineOp] Analyzing op @ 674 (end=1529): dup
[BaselineOp] Analyzing op @ 675 (end=1529): one
[BaselineOp] Analyzing op @ 676 (end=1529): add
[BaselineOp] Analyzing op @ 677 (end=1529): setlocal
[BaselineOp] Analyzing op @ 680 (end=1529): pop
[BaselineOp] Analyzing op @ 681 (end=1529): getgname
[BaselineOp] Analyzing op @ 686 (end=1529): undefined
[BaselineOp] Analyzing op @ 687 (end=1529): notearg
[BaselineOp] Analyzing op @ 688 (end=1529): getlocal
[BaselineOp] Analyzing op @ 691 (end=1529): notearg
[BaselineOp] Analyzing op @ 692 (end=1529): getlocal
[BaselineOp] Analyzing op @ 695 (end=1529): notearg
[BaselineOp] Analyzing op @ 696 (end=1529): getlocal
[BaselineOp] Analyzing op @ 699 (end=1529): notearg
[BaselineOp] Analyzing op @ 700 (end=1529): new
[BaselineOp] Analyzing op @ 703 (end=1529): setelem
[BaselineOp] Analyzing op @ 704 (end=1529): pop
[BaselineOp] Analyzing op @ 705 (end=1529): callgname
[BaselineOp] Analyzing op @ 710 (end=1529): undefined
[BaselineOp] Analyzing op @ 711 (end=1529): notearg
[BaselineOp] Analyzing op @ 712 (end=1529): zero
[BaselineOp] Analyzing op @ 713 (end=1529): notearg
[BaselineOp] Analyzing op @ 714 (end=1529): double
[BaselineOp] Analyzing op @ 719 (end=1529): notearg
[BaselineOp] Analyzing op @ 720 (end=1529): zero
[BaselineOp] Analyzing op @ 721 (end=1529): notearg
[BaselineOp] Analyzing op @ 722 (end=1529): call
[BaselineOp] Analyzing op @ 725 (end=1529): setaliasedvar
[BaselineOp] Analyzing op @ 734 (end=1529): pop
[BaselineOp] Analyzing op @ 735 (end=1529): callgname
[BaselineOp] Analyzing op @ 740 (end=1529): undefined
[BaselineOp] Analyzing op @ 741 (end=1529): notearg
[BaselineOp] Analyzing op @ 742 (end=1529): double
[BaselineOp] Analyzing op @ 747 (end=1529): notearg
[BaselineOp] Analyzing op @ 748 (end=1529): double
[BaselineOp] Analyzing op @ 753 (end=1529): notearg
[BaselineOp] Analyzing op @ 754 (end=1529): double
[BaselineOp] Analyzing op @ 759 (end=1529): notearg
[BaselineOp] Analyzing op @ 760 (end=1529): call
[BaselineOp] Analyzing op @ 763 (end=1529): setaliasedvar
[BaselineOp] Analyzing op @ 772 (end=1529): pop
[BaselineOp] Analyzing op @ 773 (end=1529): getaliasedvar
[BaselineOp] Analyzing op @ 782 (end=1529): one
[BaselineOp] Analyzing op @ 783 (end=1529): setprop
[BaselineOp] Analyzing op @ 788 (end=1529): pop
[BaselineOp] Analyzing op @ 789 (end=1529): lambda
[BaselineOp] Analyzing op @ 794 (end=1529): setlocal
[BaselineOp] Analyzing op @ 797 (end=1529): pop
[BaselineOp] Analyzing op @ 798 (end=1529): callgname
[BaselineOp] Analyzing op @ 803 (end=1529): undefined
[BaselineOp] Analyzing op @ 804 (end=1529): notearg
[BaselineOp] Analyzing op @ 805 (end=1529): uint16
[BaselineOp] Analyzing op @ 808 (end=1529): neg
[BaselineOp] Analyzing op @ 809 (end=1529): notearg
[BaselineOp] Analyzing op @ 810 (end=1529): int8
[BaselineOp] Analyzing op @ 812 (end=1529): neg
[BaselineOp] Analyzing op @ 813 (end=1529): notearg
[BaselineOp] Analyzing op @ 814 (end=1529): uint16
[BaselineOp] Analyzing op @ 817 (end=1529): neg
[BaselineOp] Analyzing op @ 818 (end=1529): notearg
[BaselineOp] Analyzing op @ 819 (end=1529): call
[BaselineOp] Analyzing op @ 822 (end=1529): setlocal
[BaselineOp] Analyzing op @ 825 (end=1529): pop
[BaselineOp] Analyzing op @ 826 (end=1529): callgname
[BaselineOp] Analyzing op @ 831 (end=1529): undefined
[BaselineOp] Analyzing op @ 832 (end=1529): notearg
[BaselineOp] Analyzing op @ 833 (end=1529): uint16
[BaselineOp] Analyzing op @ 836 (end=1529): notearg
[BaselineOp] Analyzing op @ 837 (end=1529): int8
[BaselineOp] Analyzing op @ 839 (end=1529): neg
[BaselineOp] Analyzing op @ 840 (end=1529): notearg
[BaselineOp] Analyzing op @ 841 (end=1529): uint16
[BaselineOp] Analyzing op @ 844 (end=1529): neg
[BaselineOp] Analyzing op @ 845 (end=1529): notearg
[BaselineOp] Analyzing op @ 846 (end=1529): call
[BaselineOp] Analyzing op @ 849 (end=1529): setlocal
[BaselineOp] Analyzing op @ 852 (end=1529): pop
[BaselineOp] Analyzing op @ 853 (end=1529): callgname
[BaselineOp] Analyzing op @ 858 (end=1529): undefined
[BaselineOp] Analyzing op @ 859 (end=1529): notearg
[BaselineOp] Analyzing op @ 860 (end=1529): uint16
[BaselineOp] Analyzing op @ 863 (end=1529): neg
[BaselineOp] Analyzing op @ 864 (end=1529): notearg
[BaselineOp] Analyzing op @ 865 (end=1529): int8
[BaselineOp] Analyzing op @ 867 (end=1529): neg
[BaselineOp] Analyzing op @ 868 (end=1529): notearg
[BaselineOp] Analyzing op @ 869 (end=1529): uint16
[BaselineOp] Analyzing op @ 872 (end=1529): notearg
[BaselineOp] Analyzing op @ 873 (end=1529): call
[BaselineOp] Analyzing op @ 876 (end=1529): setlocal
[BaselineOp] Analyzing op @ 879 (end=1529): pop
[BaselineOp] Analyzing op @ 880 (end=1529): callgname
[BaselineOp] Analyzing op @ 885 (end=1529): undefined
[BaselineOp] Analyzing op @ 886 (end=1529): notearg
[BaselineOp] Analyzing op @ 887 (end=1529): uint16
[BaselineOp] Analyzing op @ 890 (end=1529): notearg
[BaselineOp] Analyzing op @ 891 (end=1529): int8
[BaselineOp] Analyzing op @ 893 (end=1529): neg
[BaselineOp] Analyzing op @ 894 (end=1529): notearg
[BaselineOp] Analyzing op @ 895 (end=1529): uint16
[BaselineOp] Analyzing op @ 898 (end=1529): notearg
[BaselineOp] Analyzing op @ 899 (end=1529): call
[BaselineOp] Analyzing op @ 902 (end=1529): setlocal
[BaselineOp] Analyzing op @ 905 (end=1529): pop
[BaselineOp] Analyzing op @ 906 (end=1529): getlocal
[BaselineOp] Analyzing op @ 909 (end=1529): getlocal
[BaselineOp] Analyzing op @ 912 (end=1529): pos
[BaselineOp] Analyzing op @ 913 (end=1529): dup
[BaselineOp] Analyzing op @ 914 (end=1529): one
[BaselineOp] Analyzing op @ 915 (end=1529): add
[BaselineOp] Analyzing op @ 916 (end=1529): setlocal
[BaselineOp] Analyzing op @ 919 (end=1529): pop
[BaselineOp] Analyzing op @ 920 (end=1529): getgname
[BaselineOp] Analyzing op @ 925 (end=1529): undefined
[BaselineOp] Analyzing op @ 926 (end=1529): notearg
[BaselineOp] Analyzing op @ 927 (end=1529): getlocal
[BaselineOp] Analyzing op @ 930 (end=1529): notearg
[BaselineOp] Analyzing op @ 931 (end=1529): getlocal
[BaselineOp] Analyzing op @ 934 (end=1529): notearg
[BaselineOp] Analyzing op @ 935 (end=1529): getlocal
[BaselineOp] Analyzing op @ 938 (end=1529): notearg
[BaselineOp] Analyzing op @ 939 (end=1529): new
[BaselineOp] Analyzing op @ 942 (end=1529): setelem
[BaselineOp] Analyzing op @ 943 (end=1529): pop
[BaselineOp] Analyzing op @ 944 (end=1529): getlocal
[BaselineOp] Analyzing op @ 947 (end=1529): getlocal
[BaselineOp] Analyzing op @ 950 (end=1529): one
[BaselineOp] Analyzing op @ 951 (end=1529): sub
[BaselineOp] Analyzing op @ 952 (end=1529): getelem
[BaselineOp] Analyzing op @ 953 (end=1529): getlocal
[BaselineOp] Analyzing op @ 956 (end=1529): setprop
[BaselineOp] Analyzing op @ 961 (end=1529): pop
[BaselineOp] Analyzing op @ 962 (end=1529): getlocal
[BaselineOp] Analyzing op @ 965 (end=1529): getlocal
[BaselineOp] Analyzing op @ 968 (end=1529): pos
[BaselineOp] Analyzing op @ 969 (end=1529): dup
[BaselineOp] Analyzing op @ 970 (end=1529): one
[BaselineOp] Analyzing op @ 971 (end=1529): add
[BaselineOp] Analyzing op @ 972 (end=1529): setlocal
[BaselineOp] Analyzing op @ 975 (end=1529): pop
[BaselineOp] Analyzing op @ 976 (end=1529): getgname
[BaselineOp] Analyzing op @ 981 (end=1529): undefined
[BaselineOp] Analyzing op @ 982 (end=1529): notearg
[BaselineOp] Analyzing op @ 983 (end=1529): getlocal
[BaselineOp] Analyzing op @ 986 (end=1529): notearg
[BaselineOp] Analyzing op @ 987 (end=1529): getlocal
[BaselineOp] Analyzing op @ 990 (end=1529): notearg
[BaselineOp] Analyzing op @ 991 (end=1529): getlocal
[BaselineOp] Analyzing op @ 994 (end=1529): notearg
[BaselineOp] Analyzing op @ 995 (end=1529): new
[BaselineOp] Analyzing op @ 998 (end=1529): setelem
[BaselineOp] Analyzing op @ 999 (end=1529): pop
[BaselineOp] Analyzing op @ 1000 (end=1529): getlocal
[BaselineOp] Analyzing op @ 1003 (end=1529): getlocal
[BaselineOp] Analyzing op @ 1006 (end=1529): one
[BaselineOp] Analyzing op @ 1007 (end=1529): sub
[BaselineOp] Analyzing op @ 1008 (end=1529): getelem
[BaselineOp] Analyzing op @ 1009 (end=1529): getlocal
[BaselineOp] Analyzing op @ 1012 (end=1529): setprop
[BaselineOp] Analyzing op @ 1017 (end=1529): pop
[BaselineOp] Analyzing op @ 1018 (end=1529): getgname
[BaselineOp] Analyzing op @ 1023 (end=1529): undefined
[BaselineOp] Analyzing op @ 1024 (end=1529): notearg
[BaselineOp] Analyzing op @ 1025 (end=1529): getlocal
[BaselineOp] Analyzing op @ 1028 (end=1529): notearg
[BaselineOp] Analyzing op @ 1029 (end=1529): new
[BaselineOp] Analyzing op @ 1032 (end=1529): setlocal
[BaselineOp] Analyzing op @ 1035 (end=1529): pop
[BaselineOp] Analyzing op @ 1036 (end=1529): getlocal
[BaselineOp] Analyzing op @ 1039 (end=1529): getprop
[BaselineOp] Analyzing op @ 1044 (end=1529): zero
[BaselineOp] Analyzing op @ 1045 (end=1529): callgname
[BaselineOp] Analyzing op @ 1050 (end=1529): undefined
[BaselineOp] Analyzing op @ 1051 (end=1529): notearg
[BaselineOp] Analyzing op @ 1052 (end=1529): int8
[BaselineOp] Analyzing op @ 1054 (end=1529): notearg
[BaselineOp] Analyzing op @ 1055 (end=1529): int8
[BaselineOp] Analyzing op @ 1057 (end=1529): notearg
[BaselineOp] Analyzing op @ 1058 (end=1529): int8
[BaselineOp] Analyzing op @ 1060 (end=1529): neg
[BaselineOp] Analyzing op @ 1061 (end=1529): notearg
[BaselineOp] Analyzing op @ 1062 (end=1529): call
[BaselineOp] Analyzing op @ 1065 (end=1529): setelem
[BaselineOp] Analyzing op @ 1066 (end=1529): pop
[BaselineOp] Analyzing op @ 1067 (end=1529): getlocal
[BaselineOp] Analyzing op @ 1070 (end=1529): getprop
[BaselineOp] Analyzing op @ 1075 (end=1529): zero
[BaselineOp] Analyzing op @ 1076 (end=1529): getelem
[BaselineOp] Analyzing op @ 1077 (end=1529): callgname
[BaselineOp] Analyzing op @ 1082 (end=1529): undefined
[BaselineOp] Analyzing op @ 1083 (end=1529): notearg
[BaselineOp] Analyzing op @ 1084 (end=1529): double
[BaselineOp] Analyzing op @ 1089 (end=1529): notearg
[BaselineOp] Analyzing op @ 1090 (end=1529): double
[BaselineOp] Analyzing op @ 1095 (end=1529): notearg
[BaselineOp] Analyzing op @ 1096 (end=1529): double
[BaselineOp] Analyzing op @ 1101 (end=1529): notearg
[BaselineOp] Analyzing op @ 1102 (end=1529): call
[BaselineOp] Analyzing op @ 1105 (end=1529): setprop
[BaselineOp] Analyzing op @ 1110 (end=1529): pop
[BaselineOp] Analyzing op @ 1111 (end=1529): getlocal
[BaselineOp] Analyzing op @ 1114 (end=1529): getprop
[BaselineOp] Analyzing op @ 1119 (end=1529): one
[BaselineOp] Analyzing op @ 1120 (end=1529): callgname
[BaselineOp] Analyzing op @ 1125 (end=1529): undefined
[BaselineOp] Analyzing op @ 1126 (end=1529): notearg
[BaselineOp] Analyzing op @ 1127 (end=1529): int8
[BaselineOp] Analyzing op @ 1129 (end=1529): neg
[BaselineOp] Analyzing op @ 1130 (end=1529): notearg
[BaselineOp] Analyzing op @ 1131 (end=1529): int8
[BaselineOp] Analyzing op @ 1133 (end=1529): notearg
[BaselineOp] Analyzing op @ 1134 (end=1529): int8
[BaselineOp] Analyzing op @ 1136 (end=1529): notearg
[BaselineOp] Analyzing op @ 1137 (end=1529): call
[BaselineOp] Analyzing op @ 1140 (end=1529): setelem
[BaselineOp] Analyzing op @ 1141 (end=1529): pop
[BaselineOp] Analyzing op @ 1142 (end=1529): getlocal
[BaselineOp] Analyzing op @ 1145 (end=1529): getprop
[BaselineOp] Analyzing op @ 1150 (end=1529): one
[BaselineOp] Analyzing op @ 1151 (end=1529): getelem
[BaselineOp] Analyzing op @ 1152 (end=1529): callgname
[BaselineOp] Analyzing op @ 1157 (end=1529): undefined
[BaselineOp] Analyzing op @ 1158 (end=1529): notearg
[BaselineOp] Analyzing op @ 1159 (end=1529): double
[BaselineOp] Analyzing op @ 1164 (end=1529): notearg
[BaselineOp] Analyzing op @ 1165 (end=1529): double
[BaselineOp] Analyzing op @ 1170 (end=1529): notearg
[BaselineOp] Analyzing op @ 1171 (end=1529): double
[BaselineOp] Analyzing op @ 1176 (end=1529): notearg
[BaselineOp] Analyzing op @ 1177 (end=1529): call
[BaselineOp] Analyzing op @ 1180 (end=1529): setprop
[BaselineOp] Analyzing op @ 1185 (end=1529): pop
[BaselineOp] Analyzing op @ 1186 (end=1529): getlocal
[BaselineOp] Analyzing op @ 1189 (end=1529): getprop
[BaselineOp] Analyzing op @ 1194 (end=1529): int8
[BaselineOp] Analyzing op @ 1196 (end=1529): callgname
[BaselineOp] Analyzing op @ 1201 (end=1529): undefined
[BaselineOp] Analyzing op @ 1202 (end=1529): notearg
[BaselineOp] Analyzing op @ 1203 (end=1529): int8
[BaselineOp] Analyzing op @ 1205 (end=1529): notearg
[BaselineOp] Analyzing op @ 1206 (end=1529): int8
[BaselineOp] Analyzing op @ 1208 (end=1529): notearg
[BaselineOp] Analyzing op @ 1209 (end=1529): int8
[BaselineOp] Analyzing op @ 1211 (end=1529): notearg
[BaselineOp] Analyzing op @ 1212 (end=1529): call
[BaselineOp] Analyzing op @ 1215 (end=1529): setelem
[BaselineOp] Analyzing op @ 1216 (end=1529): pop
[BaselineOp] Analyzing op @ 1217 (end=1529): getlocal
[BaselineOp] Analyzing op @ 1220 (end=1529): getprop
[BaselineOp] Analyzing op @ 1225 (end=1529): int8
[BaselineOp] Analyzing op @ 1227 (end=1529): getelem
[BaselineOp] Analyzing op @ 1228 (end=1529): callgname
[BaselineOp] Analyzing op @ 1233 (end=1529): undefined
[BaselineOp] Analyzing op @ 1234 (end=1529): notearg
[BaselineOp] Analyzing op @ 1235 (end=1529): double
[BaselineOp] Analyzing op @ 1240 (end=1529): notearg
[BaselineOp] Analyzing op @ 1241 (end=1529): double
[BaselineOp] Analyzing op @ 1246 (end=1529): notearg
[BaselineOp] Analyzing op @ 1247 (end=1529): double
[BaselineOp] Analyzing op @ 1252 (end=1529): notearg
[BaselineOp] Analyzing op @ 1253 (end=1529): call
[BaselineOp] Analyzing op @ 1256 (end=1529): setprop
[BaselineOp] Analyzing op @ 1261 (end=1529): pop
[BaselineOp] Analyzing op @ 1262 (end=1529): getlocal
[BaselineOp] Analyzing op @ 1265 (end=1529): callgname
[BaselineOp] Analyzing op @ 1270 (end=1529): undefined
[BaselineOp] Analyzing op @ 1271 (end=1529): notearg
[BaselineOp] Analyzing op @ 1272 (end=1529): double
[BaselineOp] Analyzing op @ 1277 (end=1529): notearg
[BaselineOp] Analyzing op @ 1278 (end=1529): double
[BaselineOp] Analyzing op @ 1283 (end=1529): notearg
[BaselineOp] Analyzing op @ 1284 (end=1529): double
[BaselineOp] Analyzing op @ 1289 (end=1529): notearg
[BaselineOp] Analyzing op @ 1290 (end=1529): call
[BaselineOp] Analyzing op @ 1293 (end=1529): setprop
[BaselineOp] Analyzing op @ 1298 (end=1529): pop
[BaselineOp] Analyzing op @ 1299 (end=1529): int8
[BaselineOp] Analyzing op @ 1301 (end=1529): setlocal
[BaselineOp] Analyzing op @ 1304 (end=1529): pop
[BaselineOp] Analyzing op @ 1305 (end=1529): getgname
[BaselineOp] Analyzing op @ 1310 (end=1529): undefined
[BaselineOp] Analyzing op @ 1311 (end=1529): notearg
[BaselineOp] Analyzing op @ 1312 (end=1529): new
[BaselineOp] Analyzing op @ 1315 (end=1529): setlocal
[BaselineOp] Analyzing op @ 1318 (end=1529): pop
[BaselineOp] Analyzing op @ 1319 (end=1529): zero
[BaselineOp] Analyzing op @ 1320 (end=1529): setlocal
[BaselineOp] Analyzing op @ 1323 (end=1529): pop
[BaselineOp] Analyzing op @ 1324 (end=1529): goto
[BaselineOp] Analyzing op @ 1329 (end=1529): loophead
[BaselineOp] Analyzing op @ 1330 (end=1529): getlocal
[BaselineOp] Analyzing op @ 1333 (end=1529): getlocal
[BaselineOp] Analyzing op @ 1336 (end=1529): getgname
[BaselineOp] Analyzing op @ 1341 (end=1529): undefined
[BaselineOp] Analyzing op @ 1342 (end=1529): notearg
[BaselineOp] Analyzing op @ 1343 (end=1529): new
[BaselineOp] Analyzing op @ 1346 (end=1529): setelem
[BaselineOp] Analyzing op @ 1347 (end=1529): pop
[BaselineOp] Analyzing op @ 1348 (end=1529): zero
[BaselineOp] Analyzing op @ 1349 (end=1529): setlocal
[BaselineOp] Analyzing op @ 1352 (end=1529): pop
[BaselineOp] Analyzing op @ 1353 (end=1529): goto
[BaselineOp] Analyzing op @ 1358 (end=1529): loophead
[BaselineOp] Analyzing op @ 1359 (end=1529): getlocal
[BaselineOp] Analyzing op @ 1362 (end=1529): getlocal
[BaselineOp] Analyzing op @ 1365 (end=1529): getelem
[BaselineOp] Analyzing op @ 1366 (end=1529): getlocal
[BaselineOp] Analyzing op @ 1369 (end=1529): zero
[BaselineOp] Analyzing op @ 1370 (end=1529): setelem
[BaselineOp] Analyzing op @ 1371 (end=1529): pop
[BaselineOp] Analyzing op @ 1372 (end=1529): getlocal
[BaselineOp] Analyzing op @ 1375 (end=1529): pos
[BaselineOp] Analyzing op @ 1376 (end=1529): dup
[BaselineOp] Analyzing op @ 1377 (end=1529): one
[BaselineOp] Analyzing op @ 1378 (end=1529): add
[BaselineOp] Analyzing op @ 1379 (end=1529): setlocal
[BaselineOp] Analyzing op @ 1382 (end=1529): pop
[BaselineOp] Analyzing op @ 1383 (end=1529): pop
[BaselineOp] Analyzing op @ 1384 (end=1529): loopentry
[BaselineOp] Analyzing op @ 1386 (end=1529): getlocal
[BaselineOp] Analyzing op @ 1389 (end=1529): getlocal
[BaselineOp] Analyzing op @ 1392 (end=1529): lt
[BaselineOp] Analyzing op @ 1393 (end=1529): ifne
[BaselineOp] Analyzing op @ 1398 (end=1529): getlocal
[BaselineOp] Analyzing op @ 1401 (end=1529): pos
[BaselineOp] Analyzing op @ 1402 (end=1529): dup
[BaselineOp] Analyzing op @ 1403 (end=1529): one
[BaselineOp] Analyzing op @ 1404 (end=1529): add
[BaselineOp] Analyzing op @ 1405 (end=1529): setlocal
[BaselineOp] Analyzing op @ 1408 (end=1529): pop
[BaselineOp] Analyzing op @ 1409 (end=1529): pop
[BaselineOp] Analyzing op @ 1410 (end=1529): loopentry
[BaselineOp] Analyzing op @ 1412 (end=1529): getlocal
[BaselineOp] Analyzing op @ 1415 (end=1529): getlocal
[BaselineOp] Analyzing op @ 1418 (end=1529): lt
[BaselineOp] Analyzing op @ 1419 (end=1529): ifne
[BaselineOp] Analyzing op @ 1330 (end=1529): getlocal
[BaselineOp] Analyzing op @ 1333 (end=1529): getlocal
[BaselineOp] Analyzing op @ 1336 (end=1529): getgname
[BaselineOp] Analyzing op @ 1341 (end=1529): undefined
[BaselineOp] Analyzing op @ 1342 (end=1529): notearg
[BaselineOp] Analyzing op @ 1343 (end=1529): new
[BaselineOp] Analyzing op @ 1346 (end=1529): setelem
[BaselineOp] Analyzing op @ 1347 (end=1529): pop
[BaselineOp] Analyzing op @ 1348 (end=1529): zero
[BaselineOp] Analyzing op @ 1349 (end=1529): setlocal
[BaselineOp] Analyzing op @ 1352 (end=1529): pop
[BaselineOp] Analyzing op @ 1353 (end=1529): goto
[BaselineOp] Analyzing op @ 1358 (end=1529): loophead
[BaselineOp] Analyzing op @ 1359 (end=1529): getlocal
[BaselineOp] Analyzing op @ 1362 (end=1529): getlocal
[BaselineOp] Analyzing op @ 1365 (end=1529): getelem
[BaselineOp] Analyzing op @ 1366 (end=1529): getlocal
[BaselineOp] Analyzing op @ 1369 (end=1529): zero
[BaselineOp] Analyzing op @ 1370 (end=1529): setelem
[BaselineOp] Analyzing op @ 1371 (end=1529): pop
[BaselineOp] Analyzing op @ 1372 (end=1529): getlocal
[BaselineOp] Analyzing op @ 1375 (end=1529): pos
[BaselineOp] Analyzing op @ 1376 (end=1529): dup
[BaselineOp] Analyzing op @ 1377 (end=1529): one
[BaselineOp] Analyzing op @ 1378 (end=1529): add
[BaselineOp] Analyzing op @ 1379 (end=1529): setlocal
[BaselineOp] Analyzing op @ 1382 (end=1529): pop
[BaselineOp] Analyzing op @ 1383 (end=1529): pop
[BaselineOp] Analyzing op @ 1384 (end=1529): loopentry
[BaselineOp] Analyzing op @ 1386 (end=1529): getlocal
[BaselineOp] Analyzing op @ 1389 (end=1529): getlocal
[BaselineOp] Analyzing op @ 1392 (end=1529): lt
[BaselineOp] Analyzing op @ 1393 (end=1529): ifne
[BaselineOp] Analyzing op @ 1359 (end=1529): getlocal
[BaselineOp] Analyzing op @ 1362 (end=1529): getlocal
[BaselineOp] Analyzing op @ 1365 (end=1529): getelem
[BaselineOp] Analyzing op @ 1366 (end=1529): getlocal
[BaselineOp] Analyzing op @ 1369 (end=1529): zero
[BaselineOp] Analyzing op @ 1370 (end=1529): setelem
[BaselineOp] Analyzing op @ 1371 (end=1529): pop
[BaselineOp] Analyzing op @ 1372 (end=1529): getlocal
[BaselineOp] Analyzing op @ 1375 (end=1529): pos
[BaselineOp] Analyzing op @ 1376 (end=1529): dup
[BaselineOp] Analyzing op @ 1377 (end=1529): one
[BaselineOp] Analyzing op @ 1378 (end=1529): add
[BaselineOp] Analyzing op @ 1379 (end=1529): setlocal
[BaselineOp] Analyzing op @ 1382 (end=1529): pop
[BaselineOp] Analyzing op @ 1383 (end=1529): pop
[BaselineOp] Analyzing op @ 1384 (end=1529): loopentry
[BaselineOp] Analyzing op @ 1386 (end=1529): getlocal
[BaselineOp] Analyzing op @ 1389 (end=1529): getlocal
[BaselineOp] Analyzing op @ 1392 (end=1529): lt
[BaselineOp] Analyzing op @ 1393 (end=1529): ifne
[BaselineOp] Analyzing op @ 1398 (end=1529): getlocal
[BaselineOp] Analyzing op @ 1401 (end=1529): pos
[BaselineOp] Analyzing op @ 1402 (end=1529): dup
[BaselineOp] Analyzing op @ 1403 (end=1529): one
[BaselineOp] Analyzing op @ 1404 (end=1529): add
[BaselineOp] Analyzing op @ 1405 (end=1529): setlocal
[BaselineOp] Analyzing op @ 1408 (end=1529): pop
[BaselineOp] Analyzing op @ 1409 (end=1529): pop
[BaselineOp] Analyzing op @ 1410 (end=1529): loopentry
[BaselineOp] Analyzing op @ 1412 (end=1529): getlocal
[BaselineOp] Analyzing op @ 1415 (end=1529): getlocal
[BaselineOp] Analyzing op @ 1418 (end=1529): lt
[BaselineOp] Analyzing op @ 1419 (end=1529): ifne
[BaselineOp] Analyzing op @ 1424 (end=1529): getgname
[BaselineOp] Analyzing op @ 1429 (end=1529): undefined
[BaselineOp] Analyzing op @ 1430 (end=1529): notearg
[BaselineOp] Analyzing op @ 1431 (end=1529): callgname
[BaselineOp] Analyzing op @ 1436 (end=1529): undefined
[BaselineOp] Analyzing op @ 1437 (end=1529): notearg
[BaselineOp] Analyzing op @ 1438 (end=1529): int8
[BaselineOp] Analyzing op @ 1440 (end=1529): neg
[BaselineOp] Analyzing op @ 1441 (end=1529): notearg
[BaselineOp] Analyzing op @ 1442 (end=1529): int8
[BaselineOp] Analyzing op @ 1444 (end=1529): notearg
[BaselineOp] Analyzing op @ 1445 (end=1529): int8
[BaselineOp] Analyzing op @ 1447 (end=1529): notearg
[BaselineOp] Analyzing op @ 1448 (end=1529): call
[BaselineOp] Analyzing op @ 1451 (end=1529): notearg
[BaselineOp] Analyzing op @ 1452 (end=1529): callgname
[BaselineOp] Analyzing op @ 1457 (end=1529): undefined
[BaselineOp] Analyzing op @ 1458 (end=1529): notearg
[BaselineOp] Analyzing op @ 1459 (end=1529): zero
[BaselineOp] Analyzing op @ 1460 (end=1529): notearg
[BaselineOp] Analyzing op @ 1461 (end=1529): zero
[BaselineOp] Analyzing op @ 1462 (end=1529): notearg
[BaselineOp] Analyzing op @ 1463 (end=1529): zero
[BaselineOp] Analyzing op @ 1464 (end=1529): notearg
[BaselineOp] Analyzing op @ 1465 (end=1529): call
[BaselineOp] Analyzing op @ 1468 (end=1529): notearg
[BaselineOp] Analyzing op @ 1469 (end=1529): callgname
[BaselineOp] Analyzing op @ 1474 (end=1529): undefined
[BaselineOp] Analyzing op @ 1475 (end=1529): notearg
[BaselineOp] Analyzing op @ 1476 (end=1529): zero
[BaselineOp] Analyzing op @ 1477 (end=1529): notearg
[BaselineOp] Analyzing op @ 1478 (end=1529): one
[BaselineOp] Analyzing op @ 1479 (end=1529): notearg
[BaselineOp] Analyzing op @ 1480 (end=1529): zero
[BaselineOp] Analyzing op @ 1481 (end=1529): notearg
[BaselineOp] Analyzing op @ 1482 (end=1529): call
[BaselineOp] Analyzing op @ 1485 (end=1529): notearg
[BaselineOp] Analyzing op @ 1486 (end=1529): new
[BaselineOp] Analyzing op @ 1489 (end=1529): setlocal
[BaselineOp] Analyzing op @ 1492 (end=1529): pop
[BaselineOp] Analyzing op @ 1493 (end=1529): getlocal
[BaselineOp] Analyzing op @ 1496 (end=1529): dup
[BaselineOp] Analyzing op @ 1497 (end=1529): callprop
[BaselineOp] Analyzing op @ 1502 (end=1529): swap
[BaselineOp] Analyzing op @ 1503 (end=1529): notearg
[BaselineOp] Analyzing op @ 1504 (end=1529): getlocal
[BaselineOp] Analyzing op @ 1507 (end=1529): notearg
[BaselineOp] Analyzing op @ 1508 (end=1529): getlocal
[BaselineOp] Analyzing op @ 1511 (end=1529): notearg
[BaselineOp] Analyzing op @ 1512 (end=1529): getlocal
[BaselineOp] Analyzing op @ 1515 (end=1529): notearg
[BaselineOp] Analyzing op @ 1516 (end=1529): getlocal
[BaselineOp] Analyzing op @ 1519 (end=1529): notearg
[BaselineOp] Analyzing op @ 1520 (end=1529): call
[BaselineOp] Analyzing op @ 1523 (end=1529): pop
[BaselineOp] Analyzing op @ 1524 (end=1529): getlocal
[BaselineOp] Analyzing op @ 1527 (end=1529): return
[BaselineOp] Analyzing op @ 1528 (end=1529): stop
[BaselineScripts] Baseline compiling script 3d-raytrace.js:313 (0x7f220e8511f0)
[BaselineOp] Compiling op @ 0: getgname
[BaselineOp] Compiling op @ 5: undefined
[BaselineOp] Compiling op @ 6: notearg
[BaselineOp] Compiling op @ 7: new
[BaselineOp] Compiling op @ 10: dup
[BaselineOp] Compiling op @ 11: callprop
[BaselineOp] Compiling op @ 16: swap
[BaselineOp] Compiling op @ 17: notearg
[BaselineOp] Compiling op @ 18: call
[BaselineOp] Compiling op @ 21: setlocal
[BaselineOp] Compiling op @ 24: pop
[BaselineOp] Compiling op @ 25: int8
[BaselineOp] Compiling op @ 27: int8
[BaselineOp] Compiling op @ 29: mul
[BaselineOp] Compiling op @ 30: setlocal
[BaselineOp] Compiling op @ 33: pop
[BaselineOp] Compiling op @ 34: getgname
[BaselineOp] Compiling op @ 39: undefined
[BaselineOp] Compiling op @ 40: notearg
[BaselineOp] Compiling op @ 41: new
[BaselineOp] Compiling op @ 44: setlocal
[BaselineOp] Compiling op @ 47: pop
[BaselineOp] Compiling op @ 48: callgname
[BaselineOp] Compiling op @ 53: undefined
[BaselineOp] Compiling op @ 54: notearg
[BaselineOp] Compiling op @ 55: int8
[BaselineOp] Compiling op @ 57: neg
[BaselineOp] Compiling op @ 58: notearg
[BaselineOp] Compiling op @ 59: int8
[BaselineOp] Compiling op @ 61: notearg
[BaselineOp] Compiling op @ 62: int8
[BaselineOp] Compiling op @ 64: neg
[BaselineOp] Compiling op @ 65: notearg
[BaselineOp] Compiling op @ 66: call
[BaselineOp] Compiling op @ 69: setlocal
[BaselineOp] Compiling op @ 72: pop
[BaselineOp] Compiling op @ 73: callgname
[BaselineOp] Compiling op @ 78: undefined
[BaselineOp] Compiling op @ 79: notearg
[BaselineOp] Compiling op @ 80: int8
[BaselineOp] Compiling op @ 82: notearg
[BaselineOp] Compiling op @ 83: int8
[BaselineOp] Compiling op @ 85: notearg
[BaselineOp] Compiling op @ 86: int8
[BaselineOp] Compiling op @ 88: neg
[BaselineOp] Compiling op @ 89: notearg
[BaselineOp] Compiling op @ 90: call
[BaselineOp] Compiling op @ 93: setlocal
[BaselineOp] Compiling op @ 96: pop
[BaselineOp] Compiling op @ 97: callgname
[BaselineOp] Compiling op @ 102: undefined
[BaselineOp] Compiling op @ 103: notearg
[BaselineOp] Compiling op @ 104: int8
[BaselineOp] Compiling op @ 106: neg
[BaselineOp] Compiling op @ 107: notearg
[BaselineOp] Compiling op @ 108: int8
[BaselineOp] Compiling op @ 110: notearg
[BaselineOp] Compiling op @ 111: int8
[BaselineOp] Compiling op @ 113: notearg
[BaselineOp] Compiling op @ 114: call
[BaselineOp] Compiling op @ 117: setlocal
[BaselineOp] Compiling op @ 120: pop
[BaselineOp] Compiling op @ 121: callgname
[BaselineOp] Compiling op @ 126: undefined
[BaselineOp] Compiling op @ 127: notearg
[BaselineOp] Compiling op @ 128: int8
[BaselineOp] Compiling op @ 130: notearg
[BaselineOp] Compiling op @ 131: int8
[BaselineOp] Compiling op @ 133: notearg
[BaselineOp] Compiling op @ 134: int8
[BaselineOp] Compiling op @ 136: notearg
[BaselineOp] Compiling op @ 137: call
[BaselineOp] Compiling op @ 140: setlocal
[BaselineOp] Compiling op @ 143: pop
[BaselineOp] Compiling op @ 144: callgname
[BaselineOp] Compiling op @ 149: undefined
[BaselineOp] Compiling op @ 150: notearg
[BaselineOp] Compiling op @ 151: int8
[BaselineOp] Compiling op @ 153: neg
[BaselineOp] Compiling op @ 154: notearg
[BaselineOp] Compiling op @ 155: int8
[BaselineOp] Compiling op @ 157: neg
[BaselineOp] Compiling op @ 158: notearg
[BaselineOp] Compiling op @ 159: int8
[BaselineOp] Compiling op @ 161: neg
[BaselineOp] Compiling op @ 162: notearg
[BaselineOp] Compiling op @ 163: call
[BaselineOp] Compiling op @ 166: setlocal
[BaselineOp] Compiling op @ 169: pop
[BaselineOp] Compiling op @ 170: callgname
[BaselineOp] Compiling op @ 175: undefined
[BaselineOp] Compiling op @ 176: notearg
[BaselineOp] Compiling op @ 177: int8
[BaselineOp] Compiling op @ 179: notearg
[BaselineOp] Compiling op @ 180: int8
[BaselineOp] Compiling op @ 182: neg
[BaselineOp] Compiling op @ 183: notearg
[BaselineOp] Compiling op @ 184: int8
[BaselineOp] Compiling op @ 186: neg
[BaselineOp] Compiling op @ 187: notearg
[BaselineOp] Compiling op @ 188: call
[BaselineOp] Compiling op @ 191: setlocal
[BaselineOp] Compiling op @ 194: pop
[BaselineOp] Compiling op @ 195: callgname
[BaselineOp] Compiling op @ 200: undefined
[BaselineOp] Compiling op @ 201: notearg
[BaselineOp] Compiling op @ 202: int8
[BaselineOp] Compiling op @ 204: neg
[BaselineOp] Compiling op @ 205: notearg
[BaselineOp] Compiling op @ 206: int8
[BaselineOp] Compiling op @ 208: neg
[BaselineOp] Compiling op @ 209: notearg
[BaselineOp] Compiling op @ 210: int8
[BaselineOp] Compiling op @ 212: notearg
[BaselineOp] Compiling op @ 213: call
[BaselineOp] Compiling op @ 216: setlocal
[BaselineOp] Compiling op @ 219: pop
[BaselineOp] Compiling op @ 220: callgname
[BaselineOp] Compiling op @ 225: undefined
[BaselineOp] Compiling op @ 226: notearg
[BaselineOp] Compiling op @ 227: int8
[BaselineOp] Compiling op @ 229: notearg
[BaselineOp] Compiling op @ 230: int8
[BaselineOp] Compiling op @ 232: neg
[BaselineOp] Compiling op @ 233: notearg
[BaselineOp] Compiling op @ 234: int8
[BaselineOp] Compiling op @ 236: notearg
[BaselineOp] Compiling op @ 237: call
[BaselineOp] Compiling op @ 240: setlocal
[BaselineOp] Compiling op @ 243: pop
[BaselineOp] Compiling op @ 244: zero
[BaselineOp] Compiling op @ 245: setlocal
[BaselineOp] Compiling op @ 248: pop
[BaselineOp] Compiling op @ 249: getlocal
[BaselineOp] Compiling op @ 252: getlocal
[BaselineOp] Compiling op @ 255: pos
[BaselineOp] Compiling op @ 256: dup
[BaselineOp] Compiling op @ 257: one
[BaselineOp] Compiling op @ 258: add
[BaselineOp] Compiling op @ 259: setlocal
[BaselineOp] Compiling op @ 262: pop
[BaselineOp] Compiling op @ 263: getgname
[BaselineOp] Compiling op @ 268: undefined
[BaselineOp] Compiling op @ 269: notearg
[BaselineOp] Compiling op @ 270: getlocal
[BaselineOp] Compiling op @ 273: notearg
[BaselineOp] Compiling op @ 274: getlocal
[BaselineOp] Compiling op @ 277: notearg
[BaselineOp] Compiling op @ 278: getlocal
[BaselineOp] Compiling op @ 281: notearg
[BaselineOp] Compiling op @ 282: new
[BaselineOp] Compiling op @ 285: setelem
[BaselineOp] Compiling op @ 286: pop
[BaselineOp] Compiling op @ 287: getlocal
[BaselineOp] Compiling op @ 290: getlocal
[BaselineOp] Compiling op @ 293: pos
[BaselineOp] Compiling op @ 294: dup
[BaselineOp] Compiling op @ 295: one
[BaselineOp] Compiling op @ 296: add
[BaselineOp] Compiling op @ 297: setlocal
[BaselineOp] Compiling op @ 300: pop
[BaselineOp] Compiling op @ 301: getgname
[BaselineOp] Compiling op @ 306: undefined
[BaselineOp] Compiling op @ 307: notearg
[BaselineOp] Compiling op @ 308: getlocal
[BaselineOp] Compiling op @ 311: notearg
[BaselineOp] Compiling op @ 312: getlocal
[BaselineOp] Compiling op @ 315: notearg
[BaselineOp] Compiling op @ 316: getlocal
[BaselineOp] Compiling op @ 319: notearg
[BaselineOp] Compiling op @ 320: new
[BaselineOp] Compiling op @ 323: setelem
[BaselineOp] Compiling op @ 324: pop
[BaselineOp] Compiling op @ 325: getlocal
[BaselineOp] Compiling op @ 328: getlocal
[BaselineOp] Compiling op @ 331: pos
[BaselineOp] Compiling op @ 332: dup
[BaselineOp] Compiling op @ 333: one
[BaselineOp] Compiling op @ 334: add
[BaselineOp] Compiling op @ 335: setlocal
[BaselineOp] Compiling op @ 338: pop
[BaselineOp] Compiling op @ 339: getgname
[BaselineOp] Compiling op @ 344: undefined
[BaselineOp] Compiling op @ 345: notearg
[BaselineOp] Compiling op @ 346: getlocal
[BaselineOp] Compiling op @ 349: notearg
[BaselineOp] Compiling op @ 350: getlocal
[BaselineOp] Compiling op @ 353: notearg
[BaselineOp] Compiling op @ 354: getlocal
[BaselineOp] Compiling op @ 357: notearg
[BaselineOp] Compiling op @ 358: new
[BaselineOp] Compiling op @ 361: setelem
[BaselineOp] Compiling op @ 362: pop
[BaselineOp] Compiling op @ 363: getlocal
[BaselineOp] Compiling op @ 366: getlocal
[BaselineOp] Compiling op @ 369: pos
[BaselineOp] Compiling op @ 370: dup
[BaselineOp] Compiling op @ 371: one
[BaselineOp] Compiling op @ 372: add
[BaselineOp] Compiling op @ 373: setlocal
[BaselineOp] Compiling op @ 376: pop
[BaselineOp] Compiling op @ 377: getgname
[BaselineOp] Compiling op @ 382: undefined
[BaselineOp] Compiling op @ 383: notearg
[BaselineOp] Compiling op @ 384: getlocal
[BaselineOp] Compiling op @ 387: notearg
[BaselineOp] Compiling op @ 388: getlocal
[BaselineOp] Compiling op @ 391: notearg
[BaselineOp] Compiling op @ 392: getlocal
[BaselineOp] Compiling op @ 395: notearg
[BaselineOp] Compiling op @ 396: new
[BaselineOp] Compiling op @ 399: setelem
[BaselineOp] Compiling op @ 400: pop
[BaselineOp] Compiling op @ 401: getlocal
[BaselineOp] Compiling op @ 404: getlocal
[BaselineOp] Compiling op @ 407: pos
[BaselineOp] Compiling op @ 408: dup
[BaselineOp] Compiling op @ 409: one
[BaselineOp] Compiling op @ 410: add
[BaselineOp] Compiling op @ 411: setlocal
[BaselineOp] Compiling op @ 414: pop
[BaselineOp] Compiling op @ 415: getgname
[BaselineOp] Compiling op @ 420: undefined
[BaselineOp] Compiling op @ 421: notearg
[BaselineOp] Compiling op @ 422: getlocal
[BaselineOp] Compiling op @ 425: notearg
[BaselineOp] Compiling op @ 426: getlocal
[BaselineOp] Compiling op @ 429: notearg
[BaselineOp] Compiling op @ 430: getlocal
[BaselineOp] Compiling op @ 433: notearg
[BaselineOp] Compiling op @ 434: new
[BaselineOp] Compiling op @ 437: setelem
[BaselineOp] Compiling op @ 438: pop
[BaselineOp] Compiling op @ 439: getlocal
[BaselineOp] Compiling op @ 442: getlocal
[BaselineOp] Compiling op @ 445: pos
[BaselineOp] Compiling op @ 446: dup
[BaselineOp] Compiling op @ 447: one
[BaselineOp] Compiling op @ 448: add
[BaselineOp] Compiling op @ 449: setlocal
[BaselineOp] Compiling op @ 452: pop
[BaselineOp] Compiling op @ 453: getgname
[BaselineOp] Compiling op @ 458: undefined
[BaselineOp] Compiling op @ 459: notearg
[BaselineOp] Compiling op @ 460: getlocal
[BaselineOp] Compiling op @ 463: notearg
[BaselineOp] Compiling op @ 464: getlocal
[BaselineOp] Compiling op @ 467: notearg
[BaselineOp] Compiling op @ 468: getlocal
[BaselineOp] Compiling op @ 471: notearg
[BaselineOp] Compiling op @ 472: new
[BaselineOp] Compiling op @ 475: setelem
[BaselineOp] Compiling op @ 476: pop
[BaselineOp] Compiling op @ 477: getlocal
[BaselineOp] Compiling op @ 480: getlocal
[BaselineOp] Compiling op @ 483: pos
[BaselineOp] Compiling op @ 484: dup
[BaselineOp] Compiling op @ 485: one
[BaselineOp] Compiling op @ 486: add
[BaselineOp] Compiling op @ 487: setlocal
[BaselineOp] Compiling op @ 490: pop
[BaselineOp] Compiling op @ 491: getgname
[BaselineOp] Compiling op @ 496: undefined
[BaselineOp] Compiling op @ 497: notearg
[BaselineOp] Compiling op @ 498: getlocal
[BaselineOp] Compiling op @ 501: notearg
[BaselineOp] Compiling op @ 502: getlocal
[BaselineOp] Compiling op @ 505: notearg
[BaselineOp] Compiling op @ 506: getlocal
[BaselineOp] Compiling op @ 509: notearg
[BaselineOp] Compiling op @ 510: new
[BaselineOp] Compiling op @ 513: setelem
[BaselineOp] Compiling op @ 514: pop
[BaselineOp] Compiling op @ 515: getlocal
[BaselineOp] Compiling op @ 518: getlocal
[BaselineOp] Compiling op @ 521: pos
[BaselineOp] Compiling op @ 522: dup
[BaselineOp] Compiling op @ 523: one
[BaselineOp] Compiling op @ 524: add
[BaselineOp] Compiling op @ 525: setlocal
[BaselineOp] Compiling op @ 528: pop
[BaselineOp] Compiling op @ 529: getgname
[BaselineOp] Compiling op @ 534: undefined
[BaselineOp] Compiling op @ 535: notearg
[BaselineOp] Compiling op @ 536: getlocal
[BaselineOp] Compiling op @ 539: notearg
[BaselineOp] Compiling op @ 540: getlocal
[BaselineOp] Compiling op @ 543: notearg
[BaselineOp] Compiling op @ 544: getlocal
[BaselineOp] Compiling op @ 547: notearg
[BaselineOp] Compiling op @ 548: new
[BaselineOp] Compiling op @ 551: setelem
[BaselineOp] Compiling op @ 552: pop
[BaselineOp] Compiling op @ 553: getlocal
[BaselineOp] Compiling op @ 556: getlocal
[BaselineOp] Compiling op @ 559: pos
[BaselineOp] Compiling op @ 560: dup
[BaselineOp] Compiling op @ 561: one
[BaselineOp] Compiling op @ 562: add
[BaselineOp] Compiling op @ 563: setlocal
[BaselineOp] Compiling op @ 566: pop
[BaselineOp] Compiling op @ 567: getgname
[BaselineOp] Compiling op @ 572: undefined
[BaselineOp] Compiling op @ 573: notearg
[BaselineOp] Compiling op @ 574: getlocal
[BaselineOp] Compiling op @ 577: notearg
[BaselineOp] Compiling op @ 578: getlocal
[BaselineOp] Compiling op @ 581: notearg
[BaselineOp] Compiling op @ 582: getlocal
[BaselineOp] Compiling op @ 585: notearg
[BaselineOp] Compiling op @ 586: new
[BaselineOp] Compiling op @ 589: setelem
[BaselineOp] Compiling op @ 590: pop
[BaselineOp] Compiling op @ 591: getlocal
[BaselineOp] Compiling op @ 594: getlocal
[BaselineOp] Compiling op @ 597: pos
[BaselineOp] Compiling op @ 598: dup
[BaselineOp] Compiling op @ 599: one
[BaselineOp] Compiling op @ 600: add
[BaselineOp] Compiling op @ 601: setlocal
[BaselineOp] Compiling op @ 604: pop
[BaselineOp] Compiling op @ 605: getgname
[BaselineOp] Compiling op @ 610: undefined
[BaselineOp] Compiling op @ 611: notearg
[BaselineOp] Compiling op @ 612: getlocal
[BaselineOp] Compiling op @ 615: notearg
[BaselineOp] Compiling op @ 616: getlocal
[BaselineOp] Compiling op @ 619: notearg
[BaselineOp] Compiling op @ 620: getlocal
[BaselineOp] Compiling op @ 623: notearg
[BaselineOp] Compiling op @ 624: new
[BaselineOp] Compiling op @ 627: setelem
[BaselineOp] Compiling op @ 628: pop
[BaselineOp] Compiling op @ 629: getlocal
[BaselineOp] Compiling op @ 632: getlocal
[BaselineOp] Compiling op @ 635: pos
[BaselineOp] Compiling op @ 636: dup
[BaselineOp] Compiling op @ 637: one
[BaselineOp] Compiling op @ 638: add
[BaselineOp] Compiling op @ 639: setlocal
[BaselineOp] Compiling op @ 642: pop
[BaselineOp] Compiling op @ 643: getgname
[BaselineOp] Compiling op @ 648: undefined
[BaselineOp] Compiling op @ 649: notearg
[BaselineOp] Compiling op @ 650: getlocal
[BaselineOp] Compiling op @ 653: notearg
[BaselineOp] Compiling op @ 654: getlocal
[BaselineOp] Compiling op @ 657: notearg
[BaselineOp] Compiling op @ 658: getlocal
[BaselineOp] Compiling op @ 661: notearg
[BaselineOp] Compiling op @ 662: new
[BaselineOp] Compiling op @ 665: setelem
[BaselineOp] Compiling op @ 666: pop
[BaselineOp] Compiling op @ 667: getlocal
[BaselineOp] Compiling op @ 670: getlocal
[BaselineOp] Compiling op @ 673: pos
[BaselineOp] Compiling op @ 674: dup
[BaselineOp] Compiling op @ 675: one
[BaselineOp] Compiling op @ 676: add
[BaselineOp] Compiling op @ 677: setlocal
[BaselineOp] Compiling op @ 680: pop
[BaselineOp] Compiling op @ 681: getgname
[BaselineOp] Compiling op @ 686: undefined
[BaselineOp] Compiling op @ 687: notearg
[BaselineOp] Compiling op @ 688: getlocal
[BaselineOp] Compiling op @ 691: notearg
[BaselineOp] Compiling op @ 692: getlocal
[BaselineOp] Compiling op @ 695: notearg
[BaselineOp] Compiling op @ 696: getlocal
[BaselineOp] Compiling op @ 699: notearg
[BaselineOp] Compiling op @ 700: new
[BaselineOp] Compiling op @ 703: setelem
[BaselineOp] Compiling op @ 704: pop
[BaselineOp] Compiling op @ 705: callgname
[BaselineOp] Compiling op @ 710: undefined
[BaselineOp] Compiling op @ 711: notearg
[BaselineOp] Compiling op @ 712: zero
[BaselineOp] Compiling op @ 713: notearg
[BaselineOp] Compiling op @ 714: double
[BaselineOp] Compiling op @ 719: notearg
[BaselineOp] Compiling op @ 720: zero
[BaselineOp] Compiling op @ 721: notearg
[BaselineOp] Compiling op @ 722: call
[BaselineOp] Compiling op @ 725: setaliasedvar
[BaselineOp] Compiling op @ 734: pop
[BaselineOp] Compiling op @ 735: callgname
[BaselineOp] Compiling op @ 740: undefined
[BaselineOp] Compiling op @ 741: notearg
[BaselineOp] Compiling op @ 742: double
[BaselineOp] Compiling op @ 747: notearg
[BaselineOp] Compiling op @ 748: double
[BaselineOp] Compiling op @ 753: notearg
[BaselineOp] Compiling op @ 754: double
[BaselineOp] Compiling op @ 759: notearg
[BaselineOp] Compiling op @ 760: call
[BaselineOp] Compiling op @ 763: setaliasedvar
[BaselineOp] Compiling op @ 772: pop
[BaselineOp] Compiling op @ 773: getaliasedvar
[BaselineOp] Compiling op @ 782: one
[BaselineOp] Compiling op @ 783: setprop
[BaselineOp] Compiling op @ 788: pop
[BaselineOp] Compiling op @ 789: lambda
[BaselineOp] Compiling op @ 794: setlocal
[BaselineOp] Compiling op @ 797: pop
[BaselineOp] Compiling op @ 798: callgname
[BaselineOp] Compiling op @ 803: undefined
[BaselineOp] Compiling op @ 804: notearg
[BaselineOp] Compiling op @ 805: uint16
[BaselineOp] Compiling op @ 808: neg
[BaselineOp] Compiling op @ 809: notearg
[BaselineOp] Compiling op @ 810: int8
[BaselineOp] Compiling op @ 812: neg
[BaselineOp] Compiling op @ 813: notearg
[BaselineOp] Compiling op @ 814: uint16
[BaselineOp] Compiling op @ 817: neg
[BaselineOp] Compiling op @ 818: notearg
[BaselineOp] Compiling op @ 819: call
[BaselineOp] Compiling op @ 822: setlocal
[BaselineOp] Compiling op @ 825: pop
[BaselineOp] Compiling op @ 826: callgname
[BaselineOp] Compiling op @ 831: undefined
[BaselineOp] Compiling op @ 832: notearg
[BaselineOp] Compiling op @ 833: uint16
[BaselineOp] Compiling op @ 836: notearg
[BaselineOp] Compiling op @ 837: int8
[BaselineOp] Compiling op @ 839: neg
[BaselineOp] Compiling op @ 840: notearg
[BaselineOp] Compiling op @ 841: uint16
[BaselineOp] Compiling op @ 844: neg
[BaselineOp] Compiling op @ 845: notearg
[BaselineOp] Compiling op @ 846: call
[BaselineOp] Compiling op @ 849: setlocal
[BaselineOp] Compiling op @ 852: pop
[BaselineOp] Compiling op @ 853: callgname
[BaselineOp] Compiling op @ 858: undefined
[BaselineOp] Compiling op @ 859: notearg
[BaselineOp] Compiling op @ 860: uint16
[BaselineOp] Compiling op @ 863: neg
[BaselineOp] Compiling op @ 864: notearg
[BaselineOp] Compiling op @ 865: int8
[BaselineOp] Compiling op @ 867: neg
[BaselineOp] Compiling op @ 868: notearg
[BaselineOp] Compiling op @ 869: uint16
[BaselineOp] Compiling op @ 872: notearg
[BaselineOp] Compiling op @ 873: call
[BaselineOp] Compiling op @ 876: setlocal
[BaselineOp] Compiling op @ 879: pop
[BaselineOp] Compiling op @ 880: callgname
[BaselineOp] Compiling op @ 885: undefined
[BaselineOp] Compiling op @ 886: notearg
[BaselineOp] Compiling op @ 887: uint16
[BaselineOp] Compiling op @ 890: notearg
[BaselineOp] Compiling op @ 891: int8
[BaselineOp] Compiling op @ 893: neg
[BaselineOp] Compiling op @ 894: notearg
[BaselineOp] Compiling op @ 895: uint16
[BaselineOp] Compiling op @ 898: notearg
[BaselineOp] Compiling op @ 899: call
[BaselineOp] Compiling op @ 902: setlocal
[BaselineOp] Compiling op @ 905: pop
[BaselineOp] Compiling op @ 906: getlocal
[BaselineOp] Compiling op @ 909: getlocal
[BaselineOp] Compiling op @ 912: pos
[BaselineOp] Compiling op @ 913: dup
[BaselineOp] Compiling op @ 914: one
[BaselineOp] Compiling op @ 915: add
[BaselineOp] Compiling op @ 916: setlocal
[BaselineOp] Compiling op @ 919: pop
[BaselineOp] Compiling op @ 920: getgname
[BaselineOp] Compiling op @ 925: undefined
[BaselineOp] Compiling op @ 926: notearg
[BaselineOp] Compiling op @ 927: getlocal
[BaselineOp] Compiling op @ 930: notearg
[BaselineOp] Compiling op @ 931: getlocal
[BaselineOp] Compiling op @ 934: notearg
[BaselineOp] Compiling op @ 935: getlocal
[BaselineOp] Compiling op @ 938: notearg
[BaselineOp] Compiling op @ 939: new
[BaselineOp] Compiling op @ 942: setelem
[BaselineOp] Compiling op @ 943: pop
[BaselineOp] Compiling op @ 944: getlocal
[BaselineOp] Compiling op @ 947: getlocal
[BaselineOp] Compiling op @ 950: one
[BaselineOp] Compiling op @ 951: sub
[BaselineOp] Compiling op @ 952: getelem
[BaselineOp] Compiling op @ 953: getlocal
[BaselineOp] Compiling op @ 956: setprop
[BaselineOp] Compiling op @ 961: pop
[BaselineOp] Compiling op @ 962: getlocal
[BaselineOp] Compiling op @ 965: getlocal
[BaselineOp] Compiling op @ 968: pos
[BaselineOp] Compiling op @ 969: dup
[BaselineOp] Compiling op @ 970: one
[BaselineOp] Compiling op @ 971: add
[BaselineOp] Compiling op @ 972: setlocal
[BaselineOp] Compiling op @ 975: pop
[BaselineOp] Compiling op @ 976: getgname
[BaselineOp] Compiling op @ 981: undefined
[BaselineOp] Compiling op @ 982: notearg
[BaselineOp] Compiling op @ 983: getlocal
[BaselineOp] Compiling op @ 986: notearg
[BaselineOp] Compiling op @ 987: getlocal
[BaselineOp] Compiling op @ 990: notearg
[BaselineOp] Compiling op @ 991: getlocal
[BaselineOp] Compiling op @ 994: notearg
[BaselineOp] Compiling op @ 995: new
[BaselineOp] Compiling op @ 998: setelem
[BaselineOp] Compiling op @ 999: pop
[BaselineOp] Compiling op @ 1000: getlocal
[BaselineOp] Compiling op @ 1003: getlocal
[BaselineOp] Compiling op @ 1006: one
[BaselineOp] Compiling op @ 1007: sub
[BaselineOp] Compiling op @ 1008: getelem
[BaselineOp] Compiling op @ 1009: getlocal
[BaselineOp] Compiling op @ 1012: setprop
[BaselineOp] Compiling op @ 1017: pop
[BaselineOp] Compiling op @ 1018: getgname
[BaselineOp] Compiling op @ 1023: undefined
[BaselineOp] Compiling op @ 1024: notearg
[BaselineOp] Compiling op @ 1025: getlocal
[BaselineOp] Compiling op @ 1028: notearg
[BaselineOp] Compiling op @ 1029: new
[BaselineOp] Compiling op @ 1032: setlocal
[BaselineOp] Compiling op @ 1035: pop
[BaselineOp] Compiling op @ 1036: getlocal
[BaselineOp] Compiling op @ 1039: getprop
[BaselineOp] Compiling op @ 1044: zero
[BaselineOp] Compiling op @ 1045: callgname
[BaselineOp] Compiling op @ 1050: undefined
[BaselineOp] Compiling op @ 1051: notearg
[BaselineOp] Compiling op @ 1052: int8
[BaselineOp] Compiling op @ 1054: notearg
[BaselineOp] Compiling op @ 1055: int8
[BaselineOp] Compiling op @ 1057: notearg
[BaselineOp] Compiling op @ 1058: int8
[BaselineOp] Compiling op @ 1060: neg
[BaselineOp] Compiling op @ 1061: notearg
[BaselineOp] Compiling op @ 1062: call
[BaselineOp] Compiling op @ 1065: setelem
[BaselineOp] Compiling op @ 1066: pop
[BaselineOp] Compiling op @ 1067: getlocal
[BaselineOp] Compiling op @ 1070: getprop
[BaselineOp] Compiling op @ 1075: zero
[BaselineOp] Compiling op @ 1076: getelem
[BaselineOp] Compiling op @ 1077: callgname
[BaselineOp] Compiling op @ 1082: undefined
[BaselineOp] Compiling op @ 1083: notearg
[BaselineOp] Compiling op @ 1084: double
[BaselineOp] Compiling op @ 1089: notearg
[BaselineOp] Compiling op @ 1090: double
[BaselineOp] Compiling op @ 1095: notearg
[BaselineOp] Compiling op @ 1096: double
[BaselineOp] Compiling op @ 1101: notearg
[BaselineOp] Compiling op @ 1102: call
[BaselineOp] Compiling op @ 1105: setprop
[BaselineOp] Compiling op @ 1110: pop
[BaselineOp] Compiling op @ 1111: getlocal
[BaselineOp] Compiling op @ 1114: getprop
[BaselineOp] Compiling op @ 1119: one
[BaselineOp] Compiling op @ 1120: callgname
[BaselineOp] Compiling op @ 1125: undefined
[BaselineOp] Compiling op @ 1126: notearg
[BaselineOp] Compiling op @ 1127: int8
[BaselineOp] Compiling op @ 1129: neg
[BaselineOp] Compiling op @ 1130: notearg
[BaselineOp] Compiling op @ 1131: int8
[BaselineOp] Compiling op @ 1133: notearg
[BaselineOp] Compiling op @ 1134: int8
[BaselineOp] Compiling op @ 1136: notearg
[BaselineOp] Compiling op @ 1137: call
[BaselineOp] Compiling op @ 1140: setelem
[BaselineOp] Compiling op @ 1141: pop
[BaselineOp] Compiling op @ 1142: getlocal
[BaselineOp] Compiling op @ 1145: getprop
[BaselineOp] Compiling op @ 1150: one
[BaselineOp] Compiling op @ 1151: getelem
[BaselineOp] Compiling op @ 1152: callgname
[BaselineOp] Compiling op @ 1157: undefined
[BaselineOp] Compiling op @ 1158: notearg
[BaselineOp] Compiling op @ 1159: double
[BaselineOp] Compiling op @ 1164: notearg
[BaselineOp] Compiling op @ 1165: double
[BaselineOp] Compiling op @ 1170: notearg
[BaselineOp] Compiling op @ 1171: double
[BaselineOp] Compiling op @ 1176: notearg
[BaselineOp] Compiling op @ 1177: call
[BaselineOp] Compiling op @ 1180: setprop
[BaselineOp] Compiling op @ 1185: pop
[BaselineOp] Compiling op @ 1186: getlocal
[BaselineOp] Compiling op @ 1189: getprop
[BaselineOp] Compiling op @ 1194: int8
[BaselineOp] Compiling op @ 1196: callgname
[BaselineOp] Compiling op @ 1201: undefined
[BaselineOp] Compiling op @ 1202: notearg
[BaselineOp] Compiling op @ 1203: int8
[BaselineOp] Compiling op @ 1205: notearg
[BaselineOp] Compiling op @ 1206: int8
[BaselineOp] Compiling op @ 1208: notearg
[BaselineOp] Compiling op @ 1209: int8
[BaselineOp] Compiling op @ 1211: notearg
[BaselineOp] Compiling op @ 1212: call
[BaselineOp] Compiling op @ 1215: setelem
[BaselineOp] Compiling op @ 1216: pop
[BaselineOp] Compiling op @ 1217: getlocal
[BaselineOp] Compiling op @ 1220: getprop
[BaselineOp] Compiling op @ 1225: int8
[BaselineOp] Compiling op @ 1227: getelem
[BaselineOp] Compiling op @ 1228: callgname
[BaselineOp] Compiling op @ 1233: undefined
[BaselineOp] Compiling op @ 1234: notearg
[BaselineOp] Compiling op @ 1235: double
[BaselineOp] Compiling op @ 1240: notearg
[BaselineOp] Compiling op @ 1241: double
[BaselineOp] Compiling op @ 1246: notearg
[BaselineOp] Compiling op @ 1247: double
[BaselineOp] Compiling op @ 1252: notearg
[BaselineOp] Compiling op @ 1253: call
[BaselineOp] Compiling op @ 1256: setprop
[BaselineOp] Compiling op @ 1261: pop
[BaselineOp] Compiling op @ 1262: getlocal
[BaselineOp] Compiling op @ 1265: callgname
[BaselineOp] Compiling op @ 1270: undefined
[BaselineOp] Compiling op @ 1271: notearg
[BaselineOp] Compiling op @ 1272: double
[BaselineOp] Compiling op @ 1277: notearg
[BaselineOp] Compiling op @ 1278: double
[BaselineOp] Compiling op @ 1283: notearg
[BaselineOp] Compiling op @ 1284: double
[BaselineOp] Compiling op @ 1289: notearg
[BaselineOp] Compiling op @ 1290: call
[BaselineOp] Compiling op @ 1293: setprop
[BaselineOp] Compiling op @ 1298: pop
[BaselineOp] Compiling op @ 1299: int8
[BaselineOp] Compiling op @ 1301: setlocal
[BaselineOp] Compiling op @ 1304: pop
[BaselineOp] Compiling op @ 1305: getgname
[BaselineOp] Compiling op @ 1310: undefined
[BaselineOp] Compiling op @ 1311: notearg
[BaselineOp] Compiling op @ 1312: new
[BaselineOp] Compiling op @ 1315: setlocal
[BaselineOp] Compiling op @ 1318: pop
[BaselineOp] Compiling op @ 1319: zero
[BaselineOp] Compiling op @ 1320: setlocal
[BaselineOp] Compiling op @ 1323: pop
[BaselineOp] Compiling op @ 1324: goto
[BaselineOp] Compiling op @ 1329: loophead
[BaselineOp] [block counter] Emitting a block counter for op @ 1329: loophead (lineno: 393 column: 0)
[BaselineOp] Compiling op @ 1330: getlocal
[BaselineOp] [block counter] Emitting a block counter for op @ 1330: getlocal (lineno: 393 column: 8)
[BaselineOp] Compiling op @ 1333: getlocal
[BaselineOp] Compiling op @ 1336: getgname
[BaselineOp] Compiling op @ 1341: undefined
[BaselineOp] Compiling op @ 1342: notearg
[BaselineOp] Compiling op @ 1343: new
[BaselineOp] Compiling op @ 1346: setelem
[BaselineOp] Compiling op @ 1347: pop
[BaselineOp] Compiling op @ 1348: zero
[BaselineOp] Compiling op @ 1349: setlocal
[BaselineOp] Compiling op @ 1352: pop
[BaselineOp] Compiling op @ 1353: goto
[BaselineOp] Compiling op @ 1358: loophead
[BaselineOp] [block counter] Emitting a block counter for op @ 1358: loophead (lineno: 395 column: 0)
[BaselineOp] Compiling op @ 1359: getlocal
[BaselineOp] [block counter] Emitting a block counter for op @ 1359: getlocal (lineno: 395 column: 12)
[BaselineOp] Compiling op @ 1362: getlocal
[BaselineOp] Compiling op @ 1365: getelem
[BaselineOp] Compiling op @ 1366: getlocal
[BaselineOp] Compiling op @ 1369: zero
[BaselineOp] Compiling op @ 1370: setelem
[BaselineOp] Compiling op @ 1371: pop
[BaselineOp] Compiling op @ 1372: getlocal
[BaselineOp] Compiling op @ 1375: pos
[BaselineOp] Compiling op @ 1376: dup
[BaselineOp] Compiling op @ 1377: one
[BaselineOp] Compiling op @ 1378: add
[BaselineOp] Compiling op @ 1379: setlocal
[BaselineOp] Compiling op @ 1382: pop
[BaselineOp] Compiling op @ 1383: pop
[BaselineOp] Compiling op @ 1384: loopentry
[BaselineOp] [block counter] Emitting a block counter for op @ 1384: loopentry (lineno: 394 column: 24)
[BaselineOp] Compiling op @ 1386: getlocal
[BaselineOp] Compiling op @ 1389: getlocal
[BaselineOp] Compiling op @ 1392: lt
[BaselineOp] Compiling op @ 1393: ifne
[BaselineOp] Compiling op @ 1398: getlocal
[BaselineOp] [block counter] Emitting a block counter for op @ 1398: getlocal (lineno: 392 column: 30)
[BaselineOp] Compiling op @ 1401: pos
[BaselineOp] Compiling op @ 1402: dup
[BaselineOp] Compiling op @ 1403: one
[BaselineOp] Compiling op @ 1404: add
[BaselineOp] Compiling op @ 1405: setlocal
[BaselineOp] Compiling op @ 1408: pop
[BaselineOp] Compiling op @ 1409: pop
[BaselineOp] Compiling op @ 1410: loopentry
[BaselineOp] [block counter] Emitting a block counter for op @ 1410: loopentry (lineno: 392 column: 20)
[BaselineOp] Compiling op @ 1412: getlocal
[BaselineOp] Compiling op @ 1415: getlocal
[BaselineOp] Compiling op @ 1418: lt
[BaselineOp] Compiling op @ 1419: ifne
[BaselineOp] Compiling op @ 1424: getgname
[BaselineOp] [block counter] Emitting a block counter for op @ 1424: getgname (lineno: 399 column: 0)
[BaselineOp] Compiling op @ 1429: undefined
[BaselineOp] Compiling op @ 1430: notearg
[BaselineOp] Compiling op @ 1431: callgname
[BaselineOp] Compiling op @ 1436: undefined
[BaselineOp] Compiling op @ 1437: notearg
[BaselineOp] Compiling op @ 1438: int8
[BaselineOp] Compiling op @ 1440: neg
[BaselineOp] Compiling op @ 1441: notearg
[BaselineOp] Compiling op @ 1442: int8
[BaselineOp] Compiling op @ 1444: notearg
[BaselineOp] Compiling op @ 1445: int8
[BaselineOp] Compiling op @ 1447: notearg
[BaselineOp] Compiling op @ 1448: call
[BaselineOp] Compiling op @ 1451: notearg
[BaselineOp] Compiling op @ 1452: callgname
[BaselineOp] Compiling op @ 1457: undefined
[BaselineOp] Compiling op @ 1458: notearg
[BaselineOp] Compiling op @ 1459: zero
[BaselineOp] Compiling op @ 1460: notearg
[BaselineOp] Compiling op @ 1461: zero
[BaselineOp] Compiling op @ 1462: notearg
[BaselineOp] Compiling op @ 1463: zero
[BaselineOp] Compiling op @ 1464: notearg
[BaselineOp] Compiling op @ 1465: call
[BaselineOp] Compiling op @ 1468: notearg
[BaselineOp] Compiling op @ 1469: callgname
[BaselineOp] Compiling op @ 1474: undefined
[BaselineOp] Compiling op @ 1475: notearg
[BaselineOp] Compiling op @ 1476: zero
[BaselineOp] Compiling op @ 1477: notearg
[BaselineOp] Compiling op @ 1478: one
[BaselineOp] Compiling op @ 1479: notearg
[BaselineOp] Compiling op @ 1480: zero
[BaselineOp] Compiling op @ 1481: notearg
[BaselineOp] Compiling op @ 1482: call
[BaselineOp] Compiling op @ 1485: notearg
[BaselineOp] Compiling op @ 1486: new
[BaselineOp] Compiling op @ 1489: setlocal
[BaselineOp] Compiling op @ 1492: pop
[BaselineOp] Compiling op @ 1493: getlocal
[BaselineOp] Compiling op @ 1496: dup
[BaselineOp] Compiling op @ 1497: callprop
[BaselineOp] Compiling op @ 1502: swap
[BaselineOp] Compiling op @ 1503: notearg
[BaselineOp] Compiling op @ 1504: getlocal
[BaselineOp] Compiling op @ 1507: notearg
[BaselineOp] Compiling op @ 1508: getlocal
[BaselineOp] Compiling op @ 1511: notearg
[BaselineOp] Compiling op @ 1512: getlocal
[BaselineOp] Compiling op @ 1515: notearg
[BaselineOp] Compiling op @ 1516: getlocal
[BaselineOp] Compiling op @ 1519: notearg
[BaselineOp] Compiling op @ 1520: call
[BaselineOp] Compiling op @ 1523: pop
[BaselineOp] Compiling op @ 1524: getlocal
[BaselineOp] Compiling op @ 1527: return
[BaselineOp] Compiling op @ 1528: stop
[BaselineScripts] Created BaselineScript 0x2afaf00 (raw 0x7f22105227e0) for 3d-raytrace.js:313
[BaselineScripts] [block counter] 8 block counters were emitted for script 3d-raytrace.js:313 (0x2afaf00) (lineno: 402 column: 18)
[BaselineOp] Analyzing op @ 0 (end=397): getgname
[BaselineOp] Analyzing op @ 5 (end=397): undefined
[BaselineOp] Analyzing op @ 6 (end=397): notearg
[BaselineOp] Analyzing op @ 7 (end=397): int8
[BaselineOp] Analyzing op @ 9 (end=397): notearg
[BaselineOp] Analyzing op @ 10 (end=397): new
[BaselineOp] Analyzing op @ 13 (end=397): setlocal
[BaselineOp] Analyzing op @ 16 (end=397): pop
[BaselineOp] Analyzing op @ 17 (end=397): getarg
[BaselineOp] Analyzing op @ 20 (end=397): int8
[BaselineOp] Analyzing op @ 22 (end=397): getelem
[BaselineOp] Analyzing op @ 23 (end=397): neg
[BaselineOp] Analyzing op @ 24 (end=397): setlocal
[BaselineOp] Analyzing op @ 27 (end=397): pop
[BaselineOp] Analyzing op @ 28 (end=397): getarg
[BaselineOp] Analyzing op @ 31 (end=397): int8
[BaselineOp] Analyzing op @ 33 (end=397): getelem
[BaselineOp] Analyzing op @ 34 (end=397): neg
[BaselineOp] Analyzing op @ 35 (end=397): setlocal
[BaselineOp] Analyzing op @ 38 (end=397): pop
[BaselineOp] Analyzing op @ 39 (end=397): getarg
[BaselineOp] Analyzing op @ 42 (end=397): int8
[BaselineOp] Analyzing op @ 44 (end=397): getelem
[BaselineOp] Analyzing op @ 45 (end=397): neg
[BaselineOp] Analyzing op @ 46 (end=397): setlocal
[BaselineOp] Analyzing op @ 49 (end=397): pop
[BaselineOp] Analyzing op @ 50 (end=397): bindgname
[BaselineOp] Analyzing op @ 55 (end=397): zero
[BaselineOp] Analyzing op @ 56 (end=397): setgname
[BaselineOp] Analyzing op @ 61 (end=397): pop
[BaselineOp] Analyzing op @ 62 (end=397): goto
[BaselineOp] Analyzing op @ 67 (end=397): loophead
[BaselineOp] Analyzing op @ 68 (end=397): bindgname
[BaselineOp] Analyzing op @ 73 (end=397): zero
[BaselineOp] Analyzing op @ 74 (end=397): setgname
[BaselineOp] Analyzing op @ 79 (end=397): pop
[BaselineOp] Analyzing op @ 80 (end=397): goto
[BaselineOp] Analyzing op @ 85 (end=397): loophead
[BaselineOp] Analyzing op @ 86 (end=397): getlocal
[BaselineOp] Analyzing op @ 89 (end=397): getgname
[BaselineOp] Analyzing op @ 94 (end=397): getgname
[BaselineOp] Analyzing op @ 99 (end=397): int8
[BaselineOp] Analyzing op @ 101 (end=397): mul
[BaselineOp] Analyzing op @ 102 (end=397): add
[BaselineOp] Analyzing op @ 103 (end=397): getarg
[BaselineOp] Analyzing op @ 106 (end=397): getgname
[BaselineOp] Analyzing op @ 111 (end=397): getgname
[BaselineOp] Analyzing op @ 116 (end=397): int8
[BaselineOp] Analyzing op @ 118 (end=397): mul
[BaselineOp] Analyzing op @ 119 (end=397): add
[BaselineOp] Analyzing op @ 120 (end=397): getelem
[BaselineOp] Analyzing op @ 121 (end=397): setelem
[BaselineOp] Analyzing op @ 122 (end=397): pop
[BaselineOp] Analyzing op @ 123 (end=397): bindgname
[BaselineOp] Analyzing op @ 128 (end=397): getgname
[BaselineOp] Analyzing op @ 133 (end=397): pos
[BaselineOp] Analyzing op @ 134 (end=397): dup
[BaselineOp] Analyzing op @ 135 (end=397): one
[BaselineOp] Analyzing op @ 136 (end=397): add
[BaselineOp] Analyzing op @ 137 (end=397): pick
[BaselineOp] Analyzing op @ 139 (end=397): swap
[BaselineOp] Analyzing op @ 140 (end=397): setgname
[BaselineOp] Analyzing op @ 145 (end=397): pop
[BaselineOp] Analyzing op @ 146 (end=397): pop
[BaselineOp] Analyzing op @ 147 (end=397): loopentry
[BaselineOp] Analyzing op @ 149 (end=397): getgname
[BaselineOp] Analyzing op @ 154 (end=397): int8
[BaselineOp] Analyzing op @ 156 (end=397): lt
[BaselineOp] Analyzing op @ 157 (end=397): ifne
[BaselineOp] Analyzing op @ 162 (end=397): bindgname
[BaselineOp] Analyzing op @ 167 (end=397): getgname
[BaselineOp] Analyzing op @ 172 (end=397): pos
[BaselineOp] Analyzing op @ 173 (end=397): dup
[BaselineOp] Analyzing op @ 174 (end=397): one
[BaselineOp] Analyzing op @ 175 (end=397): add
[BaselineOp] Analyzing op @ 176 (end=397): pick
[BaselineOp] Analyzing op @ 178 (end=397): swap
[BaselineOp] Analyzing op @ 179 (end=397): setgname
[BaselineOp] Analyzing op @ 184 (end=397): pop
[BaselineOp] Analyzing op @ 185 (end=397): pop
[BaselineOp] Analyzing op @ 186 (end=397): loopentry
[BaselineOp] Analyzing op @ 188 (end=397): getgname
[BaselineOp] Analyzing op @ 193 (end=397): int8
[BaselineOp] Analyzing op @ 195 (end=397): lt
[BaselineOp] Analyzing op @ 196 (end=397): ifne
[BaselineOp] Analyzing op @ 68 (end=397): bindgname
[BaselineOp] Analyzing op @ 73 (end=397): zero
[BaselineOp] Analyzing op @ 74 (end=397): setgname
[BaselineOp] Analyzing op @ 79 (end=397): pop
[BaselineOp] Analyzing op @ 80 (end=397): goto
[BaselineOp] Analyzing op @ 85 (end=397): loophead
[BaselineOp] Analyzing op @ 86 (end=397): getlocal
[BaselineOp] Analyzing op @ 89 (end=397): getgname
[BaselineOp] Analyzing op @ 94 (end=397): getgname
[BaselineOp] Analyzing op @ 99 (end=397): int8
[BaselineOp] Analyzing op @ 101 (end=397): mul
[BaselineOp] Analyzing op @ 102 (end=397): add
[BaselineOp] Analyzing op @ 103 (end=397): getarg
[BaselineOp] Analyzing op @ 106 (end=397): getgname
[BaselineOp] Analyzing op @ 111 (end=397): getgname
[BaselineOp] Analyzing op @ 116 (end=397): int8
[BaselineOp] Analyzing op @ 118 (end=397): mul
[BaselineOp] Analyzing op @ 119 (end=397): add
[BaselineOp] Analyzing op @ 120 (end=397): getelem
[BaselineOp] Analyzing op @ 121 (end=397): setelem
[BaselineOp] Analyzing op @ 122 (end=397): pop
[BaselineOp] Analyzing op @ 123 (end=397): bindgname
[BaselineOp] Analyzing op @ 128 (end=397): getgname
[BaselineOp] Analyzing op @ 133 (end=397): pos
[BaselineOp] Analyzing op @ 134 (end=397): dup
[BaselineOp] Analyzing op @ 135 (end=397): one
[BaselineOp] Analyzing op @ 136 (end=397): add
[BaselineOp] Analyzing op @ 137 (end=397): pick
[BaselineOp] Analyzing op @ 139 (end=397): swap
[BaselineOp] Analyzing op @ 140 (end=397): setgname
[BaselineOp] Analyzing op @ 145 (end=397): pop
[BaselineOp] Analyzing op @ 146 (end=397): pop
[BaselineOp] Analyzing op @ 147 (end=397): loopentry
[BaselineOp] Analyzing op @ 149 (end=397): getgname
[BaselineOp] Analyzing op @ 154 (end=397): int8
[BaselineOp] Analyzing op @ 156 (end=397): lt
[BaselineOp] Analyzing op @ 157 (end=397): ifne
[BaselineOp] Analyzing op @ 86 (end=397): getlocal
[BaselineOp] Analyzing op @ 89 (end=397): getgname
[BaselineOp] Analyzing op @ 94 (end=397): getgname
[BaselineOp] Analyzing op @ 99 (end=397): int8
[BaselineOp] Analyzing op @ 101 (end=397): mul
[BaselineOp] Analyzing op @ 102 (end=397): add
[BaselineOp] Analyzing op @ 103 (end=397): getarg
[BaselineOp] Analyzing op @ 106 (end=397): getgname
[BaselineOp] Analyzing op @ 111 (end=397): getgname
[BaselineOp] Analyzing op @ 116 (end=397): int8
[BaselineOp] Analyzing op @ 118 (end=397): mul
[BaselineOp] Analyzing op @ 119 (end=397): add
[BaselineOp] Analyzing op @ 120 (end=397): getelem
[BaselineOp] Analyzing op @ 121 (end=397): setelem
[BaselineOp] Analyzing op @ 122 (end=397): pop
[BaselineOp] Analyzing op @ 123 (end=397): bindgname
[BaselineOp] Analyzing op @ 128 (end=397): getgname
[BaselineOp] Analyzing op @ 133 (end=397): pos
[BaselineOp] Analyzing op @ 134 (end=397): dup
[BaselineOp] Analyzing op @ 135 (end=397): one
[BaselineOp] Analyzing op @ 136 (end=397): add
[BaselineOp] Analyzing op @ 137 (end=397): pick
[BaselineOp] Analyzing op @ 139 (end=397): swap
[BaselineOp] Analyzing op @ 140 (end=397): setgname
[BaselineOp] Analyzing op @ 145 (end=397): pop
[BaselineOp] Analyzing op @ 146 (end=397): pop
[BaselineOp] Analyzing op @ 147 (end=397): loopentry
[BaselineOp] Analyzing op @ 149 (end=397): getgname
[BaselineOp] Analyzing op @ 154 (end=397): int8
[BaselineOp] Analyzing op @ 156 (end=397): lt
[BaselineOp] Analyzing op @ 157 (end=397): ifne
[BaselineOp] Analyzing op @ 162 (end=397): bindgname
[BaselineOp] Analyzing op @ 167 (end=397): getgname
[BaselineOp] Analyzing op @ 172 (end=397): pos
[BaselineOp] Analyzing op @ 173 (end=397): dup
[BaselineOp] Analyzing op @ 174 (end=397): one
[BaselineOp] Analyzing op @ 175 (end=397): add
[BaselineOp] Analyzing op @ 176 (end=397): pick
[BaselineOp] Analyzing op @ 178 (end=397): swap
[BaselineOp] Analyzing op @ 179 (end=397): setgname
[BaselineOp] Analyzing op @ 184 (end=397): pop
[BaselineOp] Analyzing op @ 185 (end=397): pop
[BaselineOp] Analyzing op @ 186 (end=397): loopentry
[BaselineOp] Analyzing op @ 188 (end=397): getgname
[BaselineOp] Analyzing op @ 193 (end=397): int8
[BaselineOp] Analyzing op @ 195 (end=397): lt
[BaselineOp] Analyzing op @ 196 (end=397): ifne
[BaselineOp] Analyzing op @ 201 (end=397): bindgname
[BaselineOp] Analyzing op @ 206 (end=397): zero
[BaselineOp] Analyzing op @ 207 (end=397): setgname
[BaselineOp] Analyzing op @ 212 (end=397): pop
[BaselineOp] Analyzing op @ 213 (end=397): goto
[BaselineOp] Analyzing op @ 218 (end=397): loophead
[BaselineOp] Analyzing op @ 219 (end=397): getarg
[BaselineOp] Analyzing op @ 222 (end=397): getgname
[BaselineOp] Analyzing op @ 227 (end=397): getlocal
[BaselineOp] Analyzing op @ 230 (end=397): getgname
[BaselineOp] Analyzing op @ 235 (end=397): getelem
[BaselineOp] Analyzing op @ 236 (end=397): setelem
[BaselineOp] Analyzing op @ 237 (end=397): pop
[BaselineOp] Analyzing op @ 238 (end=397): bindgname
[BaselineOp] Analyzing op @ 243 (end=397): getgname
[BaselineOp] Analyzing op @ 248 (end=397): pos
[BaselineOp] Analyzing op @ 249 (end=397): dup
[BaselineOp] Analyzing op @ 250 (end=397): one
[BaselineOp] Analyzing op @ 251 (end=397): add
[BaselineOp] Analyzing op @ 252 (end=397): pick
[BaselineOp] Analyzing op @ 254 (end=397): swap
[BaselineOp] Analyzing op @ 255 (end=397): setgname
[BaselineOp] Analyzing op @ 260 (end=397): pop
[BaselineOp] Analyzing op @ 261 (end=397): pop
[BaselineOp] Analyzing op @ 262 (end=397): loopentry
[BaselineOp] Analyzing op @ 264 (end=397): getgname
[BaselineOp] Analyzing op @ 269 (end=397): int8
[BaselineOp] Analyzing op @ 271 (end=397): lt
[BaselineOp] Analyzing op @ 272 (end=397): ifne
[BaselineOp] Analyzing op @ 219 (end=397): getarg
[BaselineOp] Analyzing op @ 222 (end=397): getgname
[BaselineOp] Analyzing op @ 227 (end=397): getlocal
[BaselineOp] Analyzing op @ 230 (end=397): getgname
[BaselineOp] Analyzing op @ 235 (end=397): getelem
[BaselineOp] Analyzing op @ 236 (end=397): setelem
[BaselineOp] Analyzing op @ 237 (end=397): pop
[BaselineOp] Analyzing op @ 238 (end=397): bindgname
[BaselineOp] Analyzing op @ 243 (end=397): getgname
[BaselineOp] Analyzing op @ 248 (end=397): pos
[BaselineOp] Analyzing op @ 249 (end=397): dup
[BaselineOp] Analyzing op @ 250 (end=397): one
[BaselineOp] Analyzing op @ 251 (end=397): add
[BaselineOp] Analyzing op @ 252 (end=397): pick
[BaselineOp] Analyzing op @ 254 (end=397): swap
[BaselineOp] Analyzing op @ 255 (end=397): setgname
[BaselineOp] Analyzing op @ 260 (end=397): pop
[BaselineOp] Analyzing op @ 261 (end=397): pop
[BaselineOp] Analyzing op @ 262 (end=397): loopentry
[BaselineOp] Analyzing op @ 264 (end=397): getgname
[BaselineOp] Analyzing op @ 269 (end=397): int8
[BaselineOp] Analyzing op @ 271 (end=397): lt
[BaselineOp] Analyzing op @ 272 (end=397): ifne
[BaselineOp] Analyzing op @ 277 (end=397): getarg
[BaselineOp] Analyzing op @ 280 (end=397): int8
[BaselineOp] Analyzing op @ 282 (end=397): getlocal
[BaselineOp] Analyzing op @ 285 (end=397): getarg
[BaselineOp] Analyzing op @ 288 (end=397): zero
[BaselineOp] Analyzing op @ 289 (end=397): getelem
[BaselineOp] Analyzing op @ 290 (end=397): mul
[BaselineOp] Analyzing op @ 291 (end=397): getlocal
[BaselineOp] Analyzing op @ 294 (end=397): getarg
[BaselineOp] Analyzing op @ 297 (end=397): one
[BaselineOp] Analyzing op @ 298 (end=397): getelem
[BaselineOp] Analyzing op @ 299 (end=397): mul
[BaselineOp] Analyzing op @ 300 (end=397): add
[BaselineOp] Analyzing op @ 301 (end=397): getlocal
[BaselineOp] Analyzing op @ 304 (end=397): getarg
[BaselineOp] Analyzing op @ 307 (end=397): int8
[BaselineOp] Analyzing op @ 309 (end=397): getelem
[BaselineOp] Analyzing op @ 310 (end=397): mul
[BaselineOp] Analyzing op @ 311 (end=397): add
[BaselineOp] Analyzing op @ 312 (end=397): setelem
[BaselineOp] Analyzing op @ 313 (end=397): pop
[BaselineOp] Analyzing op @ 314 (end=397): getarg
[BaselineOp] Analyzing op @ 317 (end=397): int8
[BaselineOp] Analyzing op @ 319 (end=397): getlocal
[BaselineOp] Analyzing op @ 322 (end=397): getarg
[BaselineOp] Analyzing op @ 325 (end=397): int8
[BaselineOp] Analyzing op @ 327 (end=397): getelem
[BaselineOp] Analyzing op @ 328 (end=397): mul
[BaselineOp] Analyzing op @ 329 (end=397): getlocal
[BaselineOp] Analyzing op @ 332 (end=397): getarg
[BaselineOp] Analyzing op @ 335 (end=397): int8
[BaselineOp] Analyzing op @ 337 (end=397): getelem
[BaselineOp] Analyzing op @ 338 (end=397): mul
[BaselineOp] Analyzing op @ 339 (end=397): add
[BaselineOp] Analyzing op @ 340 (end=397): getlocal
[BaselineOp] Analyzing op @ 343 (end=397): getarg
[BaselineOp] Analyzing op @ 346 (end=397): int8
[BaselineOp] Analyzing op @ 348 (end=397): getelem
[BaselineOp] Analyzing op @ 349 (end=397): mul
[BaselineOp] Analyzing op @ 350 (end=397): add
[BaselineOp] Analyzing op @ 351 (end=397): setelem
[BaselineOp] Analyzing op @ 352 (end=397): pop
[BaselineOp] Analyzing op @ 353 (end=397): getarg
[BaselineOp] Analyzing op @ 356 (end=397): int8
[BaselineOp] Analyzing op @ 358 (end=397): getlocal
[BaselineOp] Analyzing op @ 361 (end=397): getarg
[BaselineOp] Analyzing op @ 364 (end=397): int8
[BaselineOp] Analyzing op @ 366 (end=397): getelem
[BaselineOp] Analyzing op @ 367 (end=397): mul
[BaselineOp] Analyzing op @ 368 (end=397): getlocal
[BaselineOp] Analyzing op @ 371 (end=397): getarg
[BaselineOp] Analyzing op @ 374 (end=397): int8
[BaselineOp] Analyzing op @ 376 (end=397): getelem
[BaselineOp] Analyzing op @ 377 (end=397): mul
[BaselineOp] Analyzing op @ 378 (end=397): add
[BaselineOp] Analyzing op @ 379 (end=397): getlocal
[BaselineOp] Analyzing op @ 382 (end=397): getarg
[BaselineOp] Analyzing op @ 385 (end=397): int8
[BaselineOp] Analyzing op @ 387 (end=397): getelem
[BaselineOp] Analyzing op @ 388 (end=397): mul
[BaselineOp] Analyzing op @ 389 (end=397): add
[BaselineOp] Analyzing op @ 390 (end=397): setelem
[BaselineOp] Analyzing op @ 391 (end=397): pop
[BaselineOp] Analyzing op @ 392 (end=397): getarg
[BaselineOp] Analyzing op @ 395 (end=397): return
[BaselineOp] Analyzing op @ 396 (end=397): stop
[BaselineScripts] Baseline compiling script 3d-raytrace.js:107 (0x7f220e851b50)
[BaselineOp] Compiling op @ 0: getgname
[BaselineOp] Compiling op @ 5: undefined
[BaselineOp] Compiling op @ 6: notearg
[BaselineOp] Compiling op @ 7: int8
[BaselineOp] Compiling op @ 9: notearg
[BaselineOp] Compiling op @ 10: new
[BaselineOp] Compiling op @ 13: setlocal
[BaselineOp] Compiling op @ 16: pop
[BaselineOp] Compiling op @ 17: getarg
[BaselineOp] Compiling op @ 20: int8
[BaselineOp] Compiling op @ 22: getelem
[BaselineOp] Compiling op @ 23: neg
[BaselineOp] Compiling op @ 24: setlocal
[BaselineOp] Compiling op @ 27: pop
[BaselineOp] Compiling op @ 28: getarg
[BaselineOp] Compiling op @ 31: int8
[BaselineOp] Compiling op @ 33: getelem
[BaselineOp] Compiling op @ 34: neg
[BaselineOp] Compiling op @ 35: setlocal
[BaselineOp] Compiling op @ 38: pop
[BaselineOp] Compiling op @ 39: getarg
[BaselineOp] Compiling op @ 42: int8
[BaselineOp] Compiling op @ 44: getelem
[BaselineOp] Compiling op @ 45: neg
[BaselineOp] Compiling op @ 46: setlocal
[BaselineOp] Compiling op @ 49: pop
[BaselineOp] Compiling op @ 50: bindgname
[BaselineOp] Compiling op @ 55: zero
[BaselineOp] Compiling op @ 56: setgname
[BaselineOp] Compiling op @ 61: pop
[BaselineOp] Compiling op @ 62: goto
[BaselineOp] Compiling op @ 67: loophead
[BaselineOp] [block counter] Emitting a block counter for op @ 67: loophead (lineno: 113 column: 8)
[BaselineOp] Compiling op @ 68: bindgname
[BaselineOp] [block counter] Emitting a block counter for op @ 68: bindgname (lineno: 113 column: 13)
[BaselineOp] Compiling op @ 73: zero
[BaselineOp] Compiling op @ 74: setgname
[BaselineOp] Compiling op @ 79: pop
[BaselineOp] Compiling op @ 80: goto
[BaselineOp] Compiling op @ 85: loophead
[BaselineOp] [block counter] Emitting a block counter for op @ 85: loophead (lineno: 114 column: 12)
[BaselineOp] Compiling op @ 86: getlocal
[BaselineOp] [block counter] Emitting a block counter for op @ 86: getlocal (lineno: 114 column: 12)
[BaselineOp] Compiling op @ 89: getgname
[BaselineOp] Compiling op @ 94: getgname
[BaselineOp] Compiling op @ 99: int8
[BaselineOp] Compiling op @ 101: mul
[BaselineOp] Compiling op @ 102: add
[BaselineOp] Compiling op @ 103: getarg
[BaselineOp] Compiling op @ 106: getgname
[BaselineOp] Compiling op @ 111: getgname
[BaselineOp] Compiling op @ 116: int8
[BaselineOp] Compiling op @ 118: mul
[BaselineOp] Compiling op @ 119: add
[BaselineOp] Compiling op @ 120: getelem
[BaselineOp] Compiling op @ 121: setelem
[BaselineOp] Compiling op @ 122: pop
[BaselineOp] Compiling op @ 123: bindgname
[BaselineOp] Compiling op @ 128: getgname
[BaselineOp] Compiling op @ 133: pos
[BaselineOp] Compiling op @ 134: dup
[BaselineOp] Compiling op @ 135: one
[BaselineOp] Compiling op @ 136: add
[BaselineOp] Compiling op @ 137: pick
[BaselineOp] Compiling op @ 139: swap
[BaselineOp] Compiling op @ 140: setgname
[BaselineOp] Compiling op @ 145: pop
[BaselineOp] Compiling op @ 146: pop
[BaselineOp] Compiling op @ 147: loopentry
[BaselineOp] [block counter] Emitting a block counter for op @ 147: loopentry (lineno: 113 column: 20)
[BaselineOp] Compiling op @ 149: getgname
[BaselineOp] Compiling op @ 154: int8
[BaselineOp] Compiling op @ 156: lt
[BaselineOp] Compiling op @ 157: ifne
[BaselineOp] Compiling op @ 162: bindgname
[BaselineOp] [block counter] Emitting a block counter for op @ 162: bindgname (lineno: 112 column: 23)
[BaselineOp] Compiling op @ 167: getgname
[BaselineOp] Compiling op @ 172: pos
[BaselineOp] Compiling op @ 173: dup
[BaselineOp] Compiling op @ 174: one
[BaselineOp] Compiling op @ 175: add
[BaselineOp] Compiling op @ 176: pick
[BaselineOp] Compiling op @ 178: swap
[BaselineOp] Compiling op @ 179: setgname
[BaselineOp] Compiling op @ 184: pop
[BaselineOp] Compiling op @ 185: pop
[BaselineOp] Compiling op @ 186: loopentry
[BaselineOp] [block counter] Emitting a block counter for op @ 186: loopentry (lineno: 112 column: 16)
[BaselineOp] Compiling op @ 188: getgname
[BaselineOp] Compiling op @ 193: int8
[BaselineOp] Compiling op @ 195: lt
[BaselineOp] Compiling op @ 196: ifne
[BaselineOp] Compiling op @ 201: bindgname
[BaselineOp] [block counter] Emitting a block counter for op @ 201: bindgname (lineno: 115 column: 9)
[BaselineOp] Compiling op @ 206: zero
[BaselineOp] Compiling op @ 207: setgname
[BaselineOp] Compiling op @ 212: pop
[BaselineOp] Compiling op @ 213: goto
[BaselineOp] Compiling op @ 218: loophead
[BaselineOp] [block counter] Emitting a block counter for op @ 218: loophead (lineno: 116 column: 8)
[BaselineOp] Compiling op @ 219: getarg
[BaselineOp] [block counter] Emitting a block counter for op @ 219: getarg (lineno: 116 column: 8)
[BaselineOp] Compiling op @ 222: getgname
[BaselineOp] Compiling op @ 227: getlocal
[BaselineOp] Compiling op @ 230: getgname
[BaselineOp] Compiling op @ 235: getelem
[BaselineOp] Compiling op @ 236: setelem
[BaselineOp] Compiling op @ 237: pop
[BaselineOp] Compiling op @ 238: bindgname
[BaselineOp] Compiling op @ 243: getgname
[BaselineOp] Compiling op @ 248: pos
[BaselineOp] Compiling op @ 249: dup
[BaselineOp] Compiling op @ 250: one
[BaselineOp] Compiling op @ 251: add
[BaselineOp] Compiling op @ 252: pick
[BaselineOp] Compiling op @ 254: swap
[BaselineOp] Compiling op @ 255: setgname
[BaselineOp] Compiling op @ 260: pop
[BaselineOp] Compiling op @ 261: pop
[BaselineOp] Compiling op @ 262: loopentry
[BaselineOp] [block counter] Emitting a block counter for op @ 262: loopentry (lineno: 115 column: 16)
[BaselineOp] Compiling op @ 264: getgname
[BaselineOp] Compiling op @ 269: int8
[BaselineOp] Compiling op @ 271: lt
[BaselineOp] Compiling op @ 272: ifne
[BaselineOp] Compiling op @ 277: getarg
[BaselineOp] [block counter] Emitting a block counter for op @ 277: getarg (lineno: 117 column: 4)
[BaselineOp] Compiling op @ 280: int8
[BaselineOp] Compiling op @ 282: getlocal
[BaselineOp] Compiling op @ 285: getarg
[BaselineOp] Compiling op @ 288: zero
[BaselineOp] Compiling op @ 289: getelem
[BaselineOp] Compiling op @ 290: mul
[BaselineOp] Compiling op @ 291: getlocal
[BaselineOp] Compiling op @ 294: getarg
[BaselineOp] Compiling op @ 297: one
[BaselineOp] Compiling op @ 298: getelem
[BaselineOp] Compiling op @ 299: mul
[BaselineOp] Compiling op @ 300: add
[BaselineOp] Compiling op @ 301: getlocal
[BaselineOp] Compiling op @ 304: getarg
[BaselineOp] Compiling op @ 307: int8
[BaselineOp] Compiling op @ 309: getelem
[BaselineOp] Compiling op @ 310: mul
[BaselineOp] Compiling op @ 311: add
[BaselineOp] Compiling op @ 312: setelem
[BaselineOp] Compiling op @ 313: pop
[BaselineOp] Compiling op @ 314: getarg
[BaselineOp] Compiling op @ 317: int8
[BaselineOp] Compiling op @ 319: getlocal
[BaselineOp] Compiling op @ 322: getarg
[BaselineOp] Compiling op @ 325: int8
[BaselineOp] Compiling op @ 327: getelem
[BaselineOp] Compiling op @ 328: mul
[BaselineOp] Compiling op @ 329: getlocal
[BaselineOp] Compiling op @ 332: getarg
[BaselineOp] Compiling op @ 335: int8
[BaselineOp] Compiling op @ 337: getelem
[BaselineOp] Compiling op @ 338: mul
[BaselineOp] Compiling op @ 339: add
[BaselineOp] Compiling op @ 340: getlocal
[BaselineOp] Compiling op @ 343: getarg
[BaselineOp] Compiling op @ 346: int8
[BaselineOp] Compiling op @ 348: getelem
[BaselineOp] Compiling op @ 349: mul
[BaselineOp] Compiling op @ 350: add
[BaselineOp] Compiling op @ 351: setelem
[BaselineOp] Compiling op @ 352: pop
[BaselineOp] Compiling op @ 353: getarg
[BaselineOp] Compiling op @ 356: int8
[BaselineOp] Compiling op @ 358: getlocal
[BaselineOp] Compiling op @ 361: getarg
[BaselineOp] Compiling op @ 364: int8
[BaselineOp] Compiling op @ 366: getelem
[BaselineOp] Compiling op @ 367: mul
[BaselineOp] Compiling op @ 368: getlocal
[BaselineOp] Compiling op @ 371: getarg
[BaselineOp] Compiling op @ 374: int8
[BaselineOp] Compiling op @ 376: getelem
[BaselineOp] Compiling op @ 377: mul
[BaselineOp] Compiling op @ 378: add
[BaselineOp] Compiling op @ 379: getlocal
[BaselineOp] Compiling op @ 382: getarg
[BaselineOp] Compiling op @ 385: int8
[BaselineOp] Compiling op @ 387: getelem
[BaselineOp] Compiling op @ 388: mul
[BaselineOp] Compiling op @ 389: add
[BaselineOp] Compiling op @ 390: setelem
[BaselineOp] Compiling op @ 391: pop
[BaselineOp] Compiling op @ 392: getarg
[BaselineOp] Compiling op @ 395: return
[BaselineOp] Compiling op @ 396: stop
[BaselineScripts] Created BaselineScript 0x2b10080 (raw 0x7f2210524908) for 3d-raytrace.js:107
[BaselineScripts] [block counter] 12 block counters were emitted for script 3d-raytrace.js:107 (0x2b10080) (lineno: 120 column: 16)
[BaselineOp] Analyzing op @ 0 (end=905): null
[BaselineOp] Analyzing op @ 1 (end=905): setlocal
[BaselineOp] Analyzing op @ 4 (end=905): pop
[BaselineOp] Analyzing op @ 5 (end=905): zero
[BaselineOp] Analyzing op @ 6 (end=905): setlocal
[BaselineOp] Analyzing op @ 9 (end=905): pop
[BaselineOp] Analyzing op @ 10 (end=905): goto
[BaselineOp] Analyzing op @ 15 (end=905): loophead
[BaselineOp] Analyzing op @ 16 (end=905): this
[BaselineOp] Analyzing op @ 17 (end=905): getprop
[BaselineOp] Analyzing op @ 22 (end=905): getlocal
[BaselineOp] Analyzing op @ 25 (end=905): getelem
[BaselineOp] Analyzing op @ 26 (end=905): setlocal
[BaselineOp] Analyzing op @ 29 (end=905): pop
[BaselineOp] Analyzing op @ 30 (end=905): getlocal
[BaselineOp] Analyzing op @ 33 (end=905): dup
[BaselineOp] Analyzing op @ 34 (end=905): callprop
[BaselineOp] Analyzing op @ 39 (end=905): swap
[BaselineOp] Analyzing op @ 40 (end=905): notearg
[BaselineOp] Analyzing op @ 41 (end=905): getarg
[BaselineOp] Analyzing op @ 44 (end=905): notearg
[BaselineOp] Analyzing op @ 45 (end=905): getarg
[BaselineOp] Analyzing op @ 48 (end=905): notearg
[BaselineOp] Analyzing op @ 49 (end=905): getarg
[BaselineOp] Analyzing op @ 52 (end=905): notearg
[BaselineOp] Analyzing op @ 53 (end=905): getarg
[BaselineOp] Analyzing op @ 56 (end=905): notearg
[BaselineOp] Analyzing op @ 57 (end=905): call
[BaselineOp] Analyzing op @ 60 (end=905): setlocal
[BaselineOp] Analyzing op @ 63 (end=905): pop
[BaselineOp] Analyzing op @ 64 (end=905): getlocal
[BaselineOp] Analyzing op @ 67 (end=905): null
[BaselineOp] Analyzing op @ 68 (end=905): eq
[BaselineOp] Analyzing op @ 69 (end=905): or
[BaselineOp] Analyzing op @ 74 (end=905): pop
[BaselineOp] Analyzing op @ 75 (end=905): getlocal
[BaselineOp] Analyzing op @ 78 (end=905): getarg
[BaselineOp] Analyzing op @ 81 (end=905): gt
[BaselineOp] Analyzing op @ 82 (end=905): or
[BaselineOp] Analyzing op @ 87 (end=905): pop
[BaselineOp] Analyzing op @ 88 (end=905): getlocal
[BaselineOp] Analyzing op @ 91 (end=905): getarg
[BaselineOp] Analyzing op @ 94 (end=905): lt
[BaselineOp] Analyzing op @ 95 (end=905): ifeq
[BaselineOp] Analyzing op @ 100 (end=905): goto
[BaselineOp] Analyzing op @ 105 (end=905): getlocal
[BaselineOp] Analyzing op @ 108 (end=905): setarg
[BaselineOp] Analyzing op @ 111 (end=905): pop
[BaselineOp] Analyzing op @ 112 (end=905): getlocal
[BaselineOp] Analyzing op @ 115 (end=905): setlocal
[BaselineOp] Analyzing op @ 118 (end=905): pop
[BaselineOp] Analyzing op @ 119 (end=905): getlocal
[BaselineOp] Analyzing op @ 122 (end=905): pos
[BaselineOp] Analyzing op @ 123 (end=905): dup
[BaselineOp] Analyzing op @ 124 (end=905): one
[BaselineOp] Analyzing op @ 125 (end=905): add
[BaselineOp] Analyzing op @ 126 (end=905): setlocal
[BaselineOp] Analyzing op @ 129 (end=905): pop
[BaselineOp] Analyzing op @ 130 (end=905): pop
[BaselineOp] Analyzing op @ 131 (end=905): loopentry
[BaselineOp] Analyzing op @ 133 (end=905): getlocal
[BaselineOp] Analyzing op @ 136 (end=905): this
[BaselineOp] Analyzing op @ 137 (end=905): getprop
[BaselineOp] Analyzing op @ 142 (end=905): length
[BaselineOp] Analyzing op @ 147 (end=905): lt
[BaselineOp] Analyzing op @ 148 (end=905): ifne
[BaselineOp] Analyzing op @ 16 (end=905): this
[BaselineOp] Analyzing op @ 17 (end=905): getprop
[BaselineOp] Analyzing op @ 22 (end=905): getlocal
[BaselineOp] Analyzing op @ 25 (end=905): getelem
[BaselineOp] Analyzing op @ 26 (end=905): setlocal
[BaselineOp] Analyzing op @ 29 (end=905): pop
[BaselineOp] Analyzing op @ 30 (end=905): getlocal
[BaselineOp] Analyzing op @ 33 (end=905): dup
[BaselineOp] Analyzing op @ 34 (end=905): callprop
[BaselineOp] Analyzing op @ 39 (end=905): swap
[BaselineOp] Analyzing op @ 40 (end=905): notearg
[BaselineOp] Analyzing op @ 41 (end=905): getarg
[BaselineOp] Analyzing op @ 44 (end=905): notearg
[BaselineOp] Analyzing op @ 45 (end=905): getarg
[BaselineOp] Analyzing op @ 48 (end=905): notearg
[BaselineOp] Analyzing op @ 49 (end=905): getarg
[BaselineOp] Analyzing op @ 52 (end=905): notearg
[BaselineOp] Analyzing op @ 53 (end=905): getarg
[BaselineOp] Analyzing op @ 56 (end=905): notearg
[BaselineOp] Analyzing op @ 57 (end=905): call
[BaselineOp] Analyzing op @ 60 (end=905): setlocal
[BaselineOp] Analyzing op @ 63 (end=905): pop
[BaselineOp] Analyzing op @ 64 (end=905): getlocal
[BaselineOp] Analyzing op @ 67 (end=905): null
[BaselineOp] Analyzing op @ 68 (end=905): eq
[BaselineOp] Analyzing op @ 69 (end=905): or
[BaselineOp] Analyzing op @ 74 (end=905): pop
[BaselineOp] Analyzing op @ 75 (end=905): getlocal
[BaselineOp] Analyzing op @ 78 (end=905): getarg
[BaselineOp] Analyzing op @ 81 (end=905): gt
[BaselineOp] Analyzing op @ 82 (end=905): or
[BaselineOp] Analyzing op @ 87 (end=905): pop
[BaselineOp] Analyzing op @ 88 (end=905): getlocal
[BaselineOp] Analyzing op @ 91 (end=905): getarg
[BaselineOp] Analyzing op @ 94 (end=905): lt
[BaselineOp] Analyzing op @ 95 (end=905): ifeq
[BaselineOp] Analyzing op @ 100 (end=905): goto
[BaselineOp] Analyzing op @ 105 (end=905): getlocal
[BaselineOp] Analyzing op @ 108 (end=905): setarg
[BaselineOp] Analyzing op @ 111 (end=905): pop
[BaselineOp] Analyzing op @ 112 (end=905): getlocal
[BaselineOp] Analyzing op @ 115 (end=905): setlocal
[BaselineOp] Analyzing op @ 118 (end=905): pop
[BaselineOp] Analyzing op @ 119 (end=905): getlocal
[BaselineOp] Analyzing op @ 122 (end=905): pos
[BaselineOp] Analyzing op @ 123 (end=905): dup
[BaselineOp] Analyzing op @ 124 (end=905): one
[BaselineOp] Analyzing op @ 125 (end=905): add
[BaselineOp] Analyzing op @ 126 (end=905): setlocal
[BaselineOp] Analyzing op @ 129 (end=905): pop
[BaselineOp] Analyzing op @ 130 (end=905): pop
[BaselineOp] Analyzing op @ 131 (end=905): loopentry
[BaselineOp] Analyzing op @ 133 (end=905): getlocal
[BaselineOp] Analyzing op @ 136 (end=905): this
[BaselineOp] Analyzing op @ 137 (end=905): getprop
[BaselineOp] Analyzing op @ 142 (end=905): length
[BaselineOp] Analyzing op @ 147 (end=905): lt
[BaselineOp] Analyzing op @ 148 (end=905): ifne
[BaselineOp] Analyzing op @ 153 (end=905): getlocal
[BaselineOp] Analyzing op @ 156 (end=905): not
[BaselineOp] Analyzing op @ 157 (end=905): ifeq
[BaselineOp] Analyzing op @ 162 (end=905): newarray
[BaselineOp] Analyzing op @ 166 (end=905): this
[BaselineOp] Analyzing op @ 167 (end=905): getprop
[BaselineOp] Analyzing op @ 172 (end=905): zero
[BaselineOp] Analyzing op @ 173 (end=905): getelem
[BaselineOp] Analyzing op @ 174 (end=905): initelem_array
[BaselineOp] Analyzing op @ 178 (end=905): this
[BaselineOp] Analyzing op @ 179 (end=905): getprop
[BaselineOp] Analyzing op @ 184 (end=905): one
[BaselineOp] Analyzing op @ 185 (end=905): getelem
[BaselineOp] Analyzing op @ 186 (end=905): initelem_array
[BaselineOp] Analyzing op @ 190 (end=905): this
[BaselineOp] Analyzing op @ 191 (end=905): getprop
[BaselineOp] Analyzing op @ 196 (end=905): int8
[BaselineOp] Analyzing op @ 198 (end=905): getelem
[BaselineOp] Analyzing op @ 199 (end=905): initelem_array
[BaselineOp] Analyzing op @ 203 (end=905): endinit
[BaselineOp] Analyzing op @ 204 (end=905): return
[BaselineOp] Analyzing op @ 205 (end=905): getlocal
[BaselineOp] Analyzing op @ 208 (end=905): getprop
[BaselineOp] Analyzing op @ 213 (end=905): setlocal
[BaselineOp] Analyzing op @ 216 (end=905): pop
[BaselineOp] Analyzing op @ 217 (end=905): callgname
[BaselineOp] Analyzing op @ 222 (end=905): undefined
[BaselineOp] Analyzing op @ 223 (end=905): notearg
[BaselineOp] Analyzing op @ 224 (end=905): getarg
[BaselineOp] Analyzing op @ 227 (end=905): notearg
[BaselineOp] Analyzing op @ 228 (end=905): callgname
[BaselineOp] Analyzing op @ 233 (end=905): undefined
[BaselineOp] Analyzing op @ 234 (end=905): notearg
[BaselineOp] Analyzing op @ 235 (end=905): getarg
[BaselineOp] Analyzing op @ 238 (end=905): notearg
[BaselineOp] Analyzing op @ 239 (end=905): getarg
[BaselineOp] Analyzing op @ 242 (end=905): notearg
[BaselineOp] Analyzing op @ 243 (end=905): call
[BaselineOp] Analyzing op @ 246 (end=905): notearg
[BaselineOp] Analyzing op @ 247 (end=905): call
[BaselineOp] Analyzing op @ 250 (end=905): setlocal
[BaselineOp] Analyzing op @ 253 (end=905): pop
[BaselineOp] Analyzing op @ 254 (end=905): callgname
[BaselineOp] Analyzing op @ 259 (end=905): undefined
[BaselineOp] Analyzing op @ 260 (end=905): notearg
[BaselineOp] Analyzing op @ 261 (end=905): getarg
[BaselineOp] Analyzing op @ 264 (end=905): notearg
[BaselineOp] Analyzing op @ 265 (end=905): getlocal
[BaselineOp] Analyzing op @ 268 (end=905): notearg
[BaselineOp] Analyzing op @ 269 (end=905): call
[BaselineOp] Analyzing op @ 272 (end=905): zero
[BaselineOp] Analyzing op @ 273 (end=905): gt
[BaselineOp] Analyzing op @ 274 (end=905): ifeq
[BaselineOp] Analyzing op @ 279 (end=905): newarray
[BaselineOp] Analyzing op @ 283 (end=905): getlocal
[BaselineOp] Analyzing op @ 286 (end=905): zero
[BaselineOp] Analyzing op @ 287 (end=905): getelem
[BaselineOp] Analyzing op @ 288 (end=905): neg
[BaselineOp] Analyzing op @ 289 (end=905): initelem_array
[BaselineOp] Analyzing op @ 293 (end=905): getlocal
[BaselineOp] Analyzing op @ 296 (end=905): one
[BaselineOp] Analyzing op @ 297 (end=905): getelem
[BaselineOp] Analyzing op @ 298 (end=905): neg
[BaselineOp] Analyzing op @ 299 (end=905): initelem_array
[BaselineOp] Analyzing op @ 303 (end=905): getlocal
[BaselineOp] Analyzing op @ 306 (end=905): int8
[BaselineOp] Analyzing op @ 308 (end=905): getelem
[BaselineOp] Analyzing op @ 309 (end=905): neg
[BaselineOp] Analyzing op @ 310 (end=905): initelem_array
[BaselineOp] Analyzing op @ 314 (end=905): endinit
[BaselineOp] Analyzing op @ 315 (end=905): setlocal
[BaselineOp] Analyzing op @ 318 (end=905): pop
[BaselineOp] Analyzing op @ 319 (end=905): null
[BaselineOp] Analyzing op @ 320 (end=905): setlocal
[BaselineOp] Analyzing op @ 323 (end=905): pop
[BaselineOp] Analyzing op @ 324 (end=905): getlocal
[BaselineOp] Analyzing op @ 327 (end=905): getprop
[BaselineOp] Analyzing op @ 332 (end=905): ifeq
[BaselineOp] Analyzing op @ 337 (end=905): getlocal
[BaselineOp] Analyzing op @ 340 (end=905): dup
[BaselineOp] Analyzing op @ 341 (end=905): callprop
[BaselineOp] Analyzing op @ 346 (end=905): swap
[BaselineOp] Analyzing op @ 347 (end=905): notearg
[BaselineOp] Analyzing op @ 348 (end=905): getlocal
[BaselineOp] Analyzing op @ 351 (end=905): notearg
[BaselineOp] Analyzing op @ 352 (end=905): getlocal
[BaselineOp] Analyzing op @ 355 (end=905): notearg
[BaselineOp] Analyzing op @ 356 (end=905): getarg
[BaselineOp] Analyzing op @ 359 (end=905): notearg
[BaselineOp] Analyzing op @ 360 (end=905): call
[BaselineOp] Analyzing op @ 363 (end=905): setlocal
[BaselineOp] Analyzing op @ 366 (end=905): pop
[BaselineOp] Analyzing op @ 367 (end=905): goto
[BaselineOp] Analyzing op @ 372 (end=905): getlocal
[BaselineOp] Analyzing op @ 375 (end=905): getprop
[BaselineOp] Analyzing op @ 380 (end=905): setlocal
[BaselineOp] Analyzing op @ 383 (end=905): pop
[BaselineOp] Analyzing op @ 384 (end=905): null
[BaselineOp] Analyzing op @ 385 (end=905): setlocal
[BaselineOp] Analyzing op @ 388 (end=905): pop
[BaselineOp] Analyzing op @ 389 (end=905): getlocal
[BaselineOp] Analyzing op @ 392 (end=905): getprop
[BaselineOp] Analyzing op @ 397 (end=905): double
[BaselineOp] Analyzing op @ 402 (end=905): gt
[BaselineOp] Analyzing op @ 403 (end=905): ifeq
[BaselineOp] Analyzing op @ 408 (end=905): callgname
[BaselineOp] Analyzing op @ 413 (end=905): undefined
[BaselineOp] Analyzing op @ 414 (end=905): notearg
[BaselineOp] Analyzing op @ 415 (end=905): callgname
[BaselineOp] Analyzing op @ 420 (end=905): undefined
[BaselineOp] Analyzing op @ 421 (end=905): notearg
[BaselineOp] Analyzing op @ 422 (end=905): getlocal
[BaselineOp] Analyzing op @ 425 (end=905): notearg
[BaselineOp] Analyzing op @ 426 (end=905): int8
[BaselineOp] Analyzing op @ 428 (end=905): neg
[BaselineOp] Analyzing op @ 429 (end=905): callgname
[BaselineOp] Analyzing op @ 434 (end=905): undefined
[BaselineOp] Analyzing op @ 435 (end=905): notearg
[BaselineOp] Analyzing op @ 436 (end=905): getarg
[BaselineOp] Analyzing op @ 439 (end=905): notearg
[BaselineOp] Analyzing op @ 440 (end=905): getlocal
[BaselineOp] Analyzing op @ 443 (end=905): notearg
[BaselineOp] Analyzing op @ 444 (end=905): call
[BaselineOp] Analyzing op @ 447 (end=905): mul
[BaselineOp] Analyzing op @ 448 (end=905): notearg
[BaselineOp] Analyzing op @ 449 (end=905): call
[BaselineOp] Analyzing op @ 452 (end=905): notearg
[BaselineOp] Analyzing op @ 453 (end=905): getarg
[BaselineOp] Analyzing op @ 456 (end=905): notearg
[BaselineOp] Analyzing op @ 457 (end=905): call
[BaselineOp] Analyzing op @ 460 (end=905): setlocal
[BaselineOp] Analyzing op @ 463 (end=905): pop
[BaselineOp] Analyzing op @ 464 (end=905): this
[BaselineOp] Analyzing op @ 465 (end=905): dup
[BaselineOp] Analyzing op @ 466 (end=905): callprop
[BaselineOp] Analyzing op @ 471 (end=905): swap
[BaselineOp] Analyzing op @ 472 (end=905): notearg
[BaselineOp] Analyzing op @ 473 (end=905): getlocal
[BaselineOp] Analyzing op @ 476 (end=905): notearg
[BaselineOp] Analyzing op @ 477 (end=905): getlocal
[BaselineOp] Analyzing op @ 480 (end=905): notearg
[BaselineOp] Analyzing op @ 481 (end=905): double
[BaselineOp] Analyzing op @ 486 (end=905): notearg
[BaselineOp] Analyzing op @ 487 (end=905): uint24
[BaselineOp] Analyzing op @ 491 (end=905): notearg
[BaselineOp] Analyzing op @ 492 (end=905): call
[BaselineOp] Analyzing op @ 495 (end=905): setlocal
[BaselineOp] Analyzing op @ 498 (end=905): pop
[BaselineOp] Analyzing op @ 499 (end=905): getlocal
[BaselineOp] Analyzing op @ 502 (end=905): getprop
[BaselineOp] Analyzing op @ 507 (end=905): double
[BaselineOp] Analyzing op @ 512 (end=905): ge
[BaselineOp] Analyzing op @ 513 (end=905): ifeq
[BaselineOp] Analyzing op @ 518 (end=905): getlocal
[BaselineOp] Analyzing op @ 521 (end=905): return
[BaselineOp] Analyzing op @ 522 (end=905): newarray
[BaselineOp] Analyzing op @ 526 (end=905): this
[BaselineOp] Analyzing op @ 527 (end=905): getprop
[BaselineOp] Analyzing op @ 532 (end=905): zero
[BaselineOp] Analyzing op @ 533 (end=905): getelem
[BaselineOp] Analyzing op @ 534 (end=905): initelem_array
[BaselineOp] Analyzing op @ 538 (end=905): this
[BaselineOp] Analyzing op @ 539 (end=905): getprop
[BaselineOp] Analyzing op @ 544 (end=905): one
[BaselineOp] Analyzing op @ 545 (end=905): getelem
[BaselineOp] Analyzing op @ 546 (end=905): initelem_array
[BaselineOp] Analyzing op @ 550 (end=905): this
[BaselineOp] Analyzing op @ 551 (end=905): getprop
[BaselineOp] Analyzing op @ 556 (end=905): int8
[BaselineOp] Analyzing op @ 558 (end=905): getelem
[BaselineOp] Analyzing op @ 559 (end=905): initelem_array
[BaselineOp] Analyzing op @ 563 (end=905): endinit
[BaselineOp] Analyzing op @ 564 (end=905): setlocal
[BaselineOp] Analyzing op @ 567 (end=905): pop
[BaselineOp] Analyzing op @ 568 (end=905): zero
[BaselineOp] Analyzing op @ 569 (end=905): setlocal
[BaselineOp] Analyzing op @ 572 (end=905): pop
[BaselineOp] Analyzing op @ 573 (end=905): goto
[BaselineOp] Analyzing op @ 578 (end=905): loophead
[BaselineOp] Analyzing op @ 579 (end=905): this
[BaselineOp] Analyzing op @ 580 (end=905): getprop
[BaselineOp] Analyzing op @ 585 (end=905): getlocal
[BaselineOp] Analyzing op @ 588 (end=905): getelem
[BaselineOp] Analyzing op @ 589 (end=905): setlocal
[BaselineOp] Analyzing op @ 592 (end=905): pop
[BaselineOp] Analyzing op @ 593 (end=905): callgname
[BaselineOp] Analyzing op @ 598 (end=905): undefined
[BaselineOp] Analyzing op @ 599 (end=905): notearg
[BaselineOp] Analyzing op @ 600 (end=905): getlocal
[BaselineOp] Analyzing op @ 603 (end=905): notearg
[BaselineOp] Analyzing op @ 604 (end=905): getlocal
[BaselineOp] Analyzing op @ 607 (end=905): notearg
[BaselineOp] Analyzing op @ 608 (end=905): call
[BaselineOp] Analyzing op @ 611 (end=905): setlocal
[BaselineOp] Analyzing op @ 614 (end=905): pop
[BaselineOp] Analyzing op @ 615 (end=905): callgname
[BaselineOp] Analyzing op @ 620 (end=905): undefined
[BaselineOp] Analyzing op @ 621 (end=905): notearg
[BaselineOp] Analyzing op @ 622 (end=905): getlocal
[BaselineOp] Analyzing op @ 625 (end=905): notearg
[BaselineOp] Analyzing op @ 626 (end=905): call
[BaselineOp] Analyzing op @ 629 (end=905): setlocal
[BaselineOp] Analyzing op @ 632 (end=905): pop
[BaselineOp] Analyzing op @ 633 (end=905): callgname
[BaselineOp] Analyzing op @ 638 (end=905): undefined
[BaselineOp] Analyzing op @ 639 (end=905): notearg
[BaselineOp] Analyzing op @ 640 (end=905): getlocal
[BaselineOp] Analyzing op @ 643 (end=905): notearg
[BaselineOp] Analyzing op @ 644 (end=905): one
[BaselineOp] Analyzing op @ 645 (end=905): getlocal
[BaselineOp] Analyzing op @ 648 (end=905): div
[BaselineOp] Analyzing op @ 649 (end=905): notearg
[BaselineOp] Analyzing op @ 650 (end=905): call
[BaselineOp] Analyzing op @ 653 (end=905): pop
[BaselineOp] Analyzing op @ 654 (end=905): getlocal
[BaselineOp] Analyzing op @ 657 (end=905): double
[BaselineOp] Analyzing op @ 662 (end=905): sub
[BaselineOp] Analyzing op @ 663 (end=905): setlocal
[BaselineOp] Analyzing op @ 666 (end=905): pop
[BaselineOp] Analyzing op @ 667 (end=905): this
[BaselineOp] Analyzing op @ 668 (end=905): dup
[BaselineOp] Analyzing op @ 669 (end=905): callprop
[BaselineOp] Analyzing op @ 674 (end=905): swap
[BaselineOp] Analyzing op @ 675 (end=905): notearg
[BaselineOp] Analyzing op @ 676 (end=905): getlocal
[BaselineOp] Analyzing op @ 679 (end=905): notearg
[BaselineOp] Analyzing op @ 680 (end=905): getlocal
[BaselineOp] Analyzing op @ 683 (end=905): notearg
[BaselineOp] Analyzing op @ 684 (end=905): getlocal
[BaselineOp] Analyzing op @ 687 (end=905): notearg
[BaselineOp] Analyzing op @ 688 (end=905): call
[BaselineOp] Analyzing op @ 691 (end=905): ifeq
[BaselineOp] Analyzing op @ 696 (end=905): goto
[BaselineOp] Analyzing op @ 701 (end=905): callgname
[BaselineOp] Analyzing op @ 706 (end=905): undefined
[BaselineOp] Analyzing op @ 707 (end=905): notearg
[BaselineOp] Analyzing op @ 708 (end=905): getlocal
[BaselineOp] Analyzing op @ 711 (end=905): notearg
[BaselineOp] Analyzing op @ 712 (end=905): getlocal
[BaselineOp] Analyzing op @ 715 (end=905): notearg
[BaselineOp] Analyzing op @ 716 (end=905): call
[BaselineOp] Analyzing op @ 719 (end=905): setlocal
[BaselineOp] Analyzing op @ 722 (end=905): pop
[BaselineOp] Analyzing op @ 723 (end=905): getlocal
[BaselineOp] Analyzing op @ 726 (end=905): zero
[BaselineOp] Analyzing op @ 727 (end=905): gt
[BaselineOp] Analyzing op @ 728 (end=905): ifeq
[BaselineOp] Analyzing op @ 733 (end=905): callgname
[BaselineOp] Analyzing op @ 738 (end=905): undefined
[BaselineOp] Analyzing op @ 739 (end=905): notearg
[BaselineOp] Analyzing op @ 740 (end=905): getlocal
[BaselineOp] Analyzing op @ 743 (end=905): notearg
[BaselineOp] Analyzing op @ 744 (end=905): callgname
[BaselineOp] Analyzing op @ 749 (end=905): undefined
[BaselineOp] Analyzing op @ 750 (end=905): notearg
[BaselineOp] Analyzing op @ 751 (end=905): getlocal
[BaselineOp] Analyzing op @ 754 (end=905): getprop
[BaselineOp] Analyzing op @ 759 (end=905): notearg
[BaselineOp] Analyzing op @ 760 (end=905): getlocal
[BaselineOp] Analyzing op @ 763 (end=905): notearg
[BaselineOp] Analyzing op @ 764 (end=905): call
[BaselineOp] Analyzing op @ 767 (end=905): notearg
[BaselineOp] Analyzing op @ 768 (end=905): call
[BaselineOp] Analyzing op @ 771 (end=905): pop
[BaselineOp] Analyzing op @ 772 (end=905): getlocal
[BaselineOp] Analyzing op @ 775 (end=905): pos
[BaselineOp] Analyzing op @ 776 (end=905): dup
[BaselineOp] Analyzing op @ 777 (end=905): one
[BaselineOp] Analyzing op @ 778 (end=905): add
[BaselineOp] Analyzing op @ 779 (end=905): setlocal
[BaselineOp] Analyzing op @ 782 (end=905): pop
[BaselineOp] Analyzing op @ 783 (end=905): pop
[BaselineOp] Analyzing op @ 784 (end=905): loopentry
[BaselineOp] Analyzing op @ 786 (end=905): getlocal
[BaselineOp] Analyzing op @ 789 (end=905): this
[BaselineOp] Analyzing op @ 790 (end=905): getprop
[BaselineOp] Analyzing op @ 795 (end=905): length
[BaselineOp] Analyzing op @ 800 (end=905): lt
[BaselineOp] Analyzing op @ 801 (end=905): ifne
[BaselineOp] Analyzing op @ 579 (end=905): this
[BaselineOp] Analyzing op @ 580 (end=905): getprop
[BaselineOp] Analyzing op @ 585 (end=905): getlocal
[BaselineOp] Analyzing op @ 588 (end=905): getelem
[BaselineOp] Analyzing op @ 589 (end=905): setlocal
[BaselineOp] Analyzing op @ 592 (end=905): pop
[BaselineOp] Analyzing op @ 593 (end=905): callgname
[BaselineOp] Analyzing op @ 598 (end=905): undefined
[BaselineOp] Analyzing op @ 599 (end=905): notearg
[BaselineOp] Analyzing op @ 600 (end=905): getlocal
[BaselineOp] Analyzing op @ 603 (end=905): notearg
[BaselineOp] Analyzing op @ 604 (end=905): getlocal
[BaselineOp] Analyzing op @ 607 (end=905): notearg
[BaselineOp] Analyzing op @ 608 (end=905): call
[BaselineOp] Analyzing op @ 611 (end=905): setlocal
[BaselineOp] Analyzing op @ 614 (end=905): pop
[BaselineOp] Analyzing op @ 615 (end=905): callgname
[BaselineOp] Analyzing op @ 620 (end=905): undefined
[BaselineOp] Analyzing op @ 621 (end=905): notearg
[BaselineOp] Analyzing op @ 622 (end=905): getlocal
[BaselineOp] Analyzing op @ 625 (end=905): notearg
[BaselineOp] Analyzing op @ 626 (end=905): call
[BaselineOp] Analyzing op @ 629 (end=905): setlocal
[BaselineOp] Analyzing op @ 632 (end=905): pop
[BaselineOp] Analyzing op @ 633 (end=905): callgname
[BaselineOp] Analyzing op @ 638 (end=905): undefined
[BaselineOp] Analyzing op @ 639 (end=905): notearg
[BaselineOp] Analyzing op @ 640 (end=905): getlocal
[BaselineOp] Analyzing op @ 643 (end=905): notearg
[BaselineOp] Analyzing op @ 644 (end=905): one
[BaselineOp] Analyzing op @ 645 (end=905): getlocal
[BaselineOp] Analyzing op @ 648 (end=905): div
[BaselineOp] Analyzing op @ 649 (end=905): notearg
[BaselineOp] Analyzing op @ 650 (end=905): call
[BaselineOp] Analyzing op @ 653 (end=905): pop
[BaselineOp] Analyzing op @ 654 (end=905): getlocal
[BaselineOp] Analyzing op @ 657 (end=905): double
[BaselineOp] Analyzing op @ 662 (end=905): sub
[BaselineOp] Analyzing op @ 663 (end=905): setlocal
[BaselineOp] Analyzing op @ 666 (end=905): pop
[BaselineOp] Analyzing op @ 667 (end=905): this
[BaselineOp] Analyzing op @ 668 (end=905): dup
[BaselineOp] Analyzing op @ 669 (end=905): callprop
[BaselineOp] Analyzing op @ 674 (end=905): swap
[BaselineOp] Analyzing op @ 675 (end=905): notearg
[BaselineOp] Analyzing op @ 676 (end=905): getlocal
[BaselineOp] Analyzing op @ 679 (end=905): notearg
[BaselineOp] Analyzing op @ 680 (end=905): getlocal
[BaselineOp] Analyzing op @ 683 (end=905): notearg
[BaselineOp] Analyzing op @ 684 (end=905): getlocal
[BaselineOp] Analyzing op @ 687 (end=905): notearg
[BaselineOp] Analyzing op @ 688 (end=905): call
[BaselineOp] Analyzing op @ 691 (end=905): ifeq
[BaselineOp] Analyzing op @ 696 (end=905): goto
[BaselineOp] Analyzing op @ 701 (end=905): callgname
[BaselineOp] Analyzing op @ 706 (end=905): undefined
[BaselineOp] Analyzing op @ 707 (end=905): notearg
[BaselineOp] Analyzing op @ 708 (end=905): getlocal
[BaselineOp] Analyzing op @ 711 (end=905): notearg
[BaselineOp] Analyzing op @ 712 (end=905): getlocal
[BaselineOp] Analyzing op @ 715 (end=905): notearg
[BaselineOp] Analyzing op @ 716 (end=905): call
[BaselineOp] Analyzing op @ 719 (end=905): setlocal
[BaselineOp] Analyzing op @ 722 (end=905): pop
[BaselineOp] Analyzing op @ 723 (end=905): getlocal
[BaselineOp] Analyzing op @ 726 (end=905): zero
[BaselineOp] Analyzing op @ 727 (end=905): gt
[BaselineOp] Analyzing op @ 728 (end=905): ifeq
[BaselineOp] Analyzing op @ 733 (end=905): callgname
[BaselineOp] Analyzing op @ 738 (end=905): undefined
[BaselineOp] Analyzing op @ 739 (end=905): notearg
[BaselineOp] Analyzing op @ 740 (end=905): getlocal
[BaselineOp] Analyzing op @ 743 (end=905): notearg
[BaselineOp] Analyzing op @ 744 (end=905): callgname
[BaselineOp] Analyzing op @ 749 (end=905): undefined
[BaselineOp] Analyzing op @ 750 (end=905): notearg
[BaselineOp] Analyzing op @ 751 (end=905): getlocal
[BaselineOp] Analyzing op @ 754 (end=905): getprop
[BaselineOp] Analyzing op @ 759 (end=905): notearg
[BaselineOp] Analyzing op @ 760 (end=905): getlocal
[BaselineOp] Analyzing op @ 763 (end=905): notearg
[BaselineOp] Analyzing op @ 764 (end=905): call
[BaselineOp] Analyzing op @ 767 (end=905): notearg
[BaselineOp] Analyzing op @ 768 (end=905): call
[BaselineOp] Analyzing op @ 771 (end=905): pop
[BaselineOp] Analyzing op @ 772 (end=905): getlocal
[BaselineOp] Analyzing op @ 775 (end=905): pos
[BaselineOp] Analyzing op @ 776 (end=905): dup
[BaselineOp] Analyzing op @ 777 (end=905): one
[BaselineOp] Analyzing op @ 778 (end=905): add
[BaselineOp] Analyzing op @ 779 (end=905): setlocal
[BaselineOp] Analyzing op @ 782 (end=905): pop
[BaselineOp] Analyzing op @ 783 (end=905): pop
[BaselineOp] Analyzing op @ 784 (end=905): loopentry
[BaselineOp] Analyzing op @ 786 (end=905): getlocal
[BaselineOp] Analyzing op @ 789 (end=905): this
[BaselineOp] Analyzing op @ 790 (end=905): getprop
[BaselineOp] Analyzing op @ 795 (end=905): length
[BaselineOp] Analyzing op @ 800 (end=905): lt
[BaselineOp] Analyzing op @ 801 (end=905): ifne
[BaselineOp] Analyzing op @ 806 (end=905): callgname
[BaselineOp] Analyzing op @ 811 (end=905): undefined
[BaselineOp] Analyzing op @ 812 (end=905): notearg
[BaselineOp] Analyzing op @ 813 (end=905): getlocal
[BaselineOp] Analyzing op @ 816 (end=905): notearg
[BaselineOp] Analyzing op @ 817 (end=905): getlocal
[BaselineOp] Analyzing op @ 820 (end=905): notearg
[BaselineOp] Analyzing op @ 821 (end=905): call
[BaselineOp] Analyzing op @ 824 (end=905): setlocal
[BaselineOp] Analyzing op @ 827 (end=905): pop
[BaselineOp] Analyzing op @ 828 (end=905): getlocal
[BaselineOp] Analyzing op @ 831 (end=905): ifeq
[BaselineOp] Analyzing op @ 836 (end=905): callgname
[BaselineOp] Analyzing op @ 841 (end=905): undefined
[BaselineOp] Analyzing op @ 842 (end=905): notearg
[BaselineOp] Analyzing op @ 843 (end=905): callgname
[BaselineOp] Analyzing op @ 848 (end=905): undefined
[BaselineOp] Analyzing op @ 849 (end=905): notearg
[BaselineOp] Analyzing op @ 850 (end=905): getlocal
[BaselineOp] Analyzing op @ 853 (end=905): notearg
[BaselineOp] Analyzing op @ 854 (end=905): one
[BaselineOp] Analyzing op @ 855 (end=905): getlocal
[BaselineOp] Analyzing op @ 858 (end=905): getprop
[BaselineOp] Analyzing op @ 863 (end=905): sub
[BaselineOp] Analyzing op @ 864 (end=905): notearg
[BaselineOp] Analyzing op @ 865 (end=905): call
[BaselineOp] Analyzing op @ 868 (end=905): notearg
[BaselineOp] Analyzing op @ 869 (end=905): callgname
[BaselineOp] Analyzing op @ 874 (end=905): undefined
[BaselineOp] Analyzing op @ 875 (end=905): notearg
[BaselineOp] Analyzing op @ 876 (end=905): getlocal
[BaselineOp] Analyzing op @ 879 (end=905): notearg
[BaselineOp] Analyzing op @ 880 (end=905): getlocal
[BaselineOp] Analyzing op @ 883 (end=905): getprop
[BaselineOp] Analyzing op @ 888 (end=905): notearg
[BaselineOp] Analyzing op @ 889 (end=905): call
[BaselineOp] Analyzing op @ 892 (end=905): notearg
[BaselineOp] Analyzing op @ 893 (end=905): call
[BaselineOp] Analyzing op @ 896 (end=905): setlocal
[BaselineOp] Analyzing op @ 899 (end=905): pop
[BaselineOp] Analyzing op @ 900 (end=905): getlocal
[BaselineOp] Analyzing op @ 903 (end=905): return
[BaselineOp] Analyzing op @ 904 (end=905): stop
[BaselineScripts] Baseline compiling script 3d-raytrace.js:189 (0x7f220e86e128)
[BaselineOp] Compiling op @ 0: null
[BaselineOp] Compiling op @ 1: setlocal
[BaselineOp] Compiling op @ 4: pop
[BaselineOp] Compiling op @ 5: zero
[BaselineOp] Compiling op @ 6: setlocal
[BaselineOp] Compiling op @ 9: pop
[BaselineOp] Compiling op @ 10: goto
[BaselineOp] Compiling op @ 15: loophead
[BaselineOp] [block counter] Emitting a block counter for op @ 15: loophead (lineno: 192 column: 0)
[BaselineOp] Compiling op @ 16: this
[BaselineOp] [block counter] Emitting a block counter for op @ 16: this (lineno: 192 column: 0)
[BaselineOp] Compiling op @ 17: getprop
[BaselineOp] Compiling op @ 22: getlocal
[BaselineOp] Compiling op @ 25: getelem
[BaselineOp] Compiling op @ 26: setlocal
[BaselineOp] Compiling op @ 29: pop
[BaselineOp] Compiling op @ 30: getlocal
[BaselineOp] Compiling op @ 33: dup
[BaselineOp] Compiling op @ 34: callprop
[BaselineOp] Compiling op @ 39: swap
[BaselineOp] Compiling op @ 40: notearg
[BaselineOp] Compiling op @ 41: getarg
[BaselineOp] Compiling op @ 44: notearg
[BaselineOp] Compiling op @ 45: getarg
[BaselineOp] Compiling op @ 48: notearg
[BaselineOp] Compiling op @ 49: getarg
[BaselineOp] Compiling op @ 52: notearg
[BaselineOp] Compiling op @ 53: getarg
[BaselineOp] Compiling op @ 56: notearg
[BaselineOp] Compiling op @ 57: call
[BaselineOp] Compiling op @ 60: setlocal
[BaselineOp] Compiling op @ 63: pop
[BaselineOp] Compiling op @ 64: getlocal
[BaselineOp] Compiling op @ 67: null
[BaselineOp] Compiling op @ 68: eq
[BaselineOp] Compiling op @ 69: or
[BaselineOp] Compiling op @ 74: pop
[BaselineOp] [block counter] Emitting a block counter for op @ 74: pop (lineno: 194 column: 0)
[BaselineOp] Compiling op @ 75: getlocal
[BaselineOp] Compiling op @ 78: getarg
[BaselineOp] Compiling op @ 81: gt
[BaselineOp] Compiling op @ 82: or
[BaselineOp] Compiling op @ 87: pop
[BaselineOp] [block counter] Emitting a block counter for op @ 87: pop (lineno: 194 column: 0)
[BaselineOp] Compiling op @ 88: getlocal
[BaselineOp] Compiling op @ 91: getarg
[BaselineOp] Compiling op @ 94: lt
[BaselineOp] Compiling op @ 95: ifeq
[BaselineOp] [block counter] Emitting a block counter for op @ 95: ifeq (lineno: 194 column: 0)
[BaselineOp] Compiling op @ 100: goto
[BaselineOp] [block counter] Emitting a block counter for op @ 100: goto (lineno: 195 column: 0)
[BaselineOp] Compiling op @ 105: getlocal
[BaselineOp] [block counter] Emitting a block counter for op @ 105: getlocal (lineno: 196 column: 0)
[BaselineOp] Compiling op @ 108: setarg
[BaselineOp] Compiling op @ 111: pop
[BaselineOp] Compiling op @ 112: getlocal
[BaselineOp] Compiling op @ 115: setlocal
[BaselineOp] Compiling op @ 118: pop
[BaselineOp] Compiling op @ 119: getlocal
[BaselineOp] [block counter] Emitting a block counter for op @ 119: getlocal (lineno: 191 column: 43)
[BaselineOp] Compiling op @ 122: pos
[BaselineOp] Compiling op @ 123: dup
[BaselineOp] Compiling op @ 124: one
[BaselineOp] Compiling op @ 125: add
[BaselineOp] Compiling op @ 126: setlocal
[BaselineOp] Compiling op @ 129: pop
[BaselineOp] Compiling op @ 130: pop
[BaselineOp] Compiling op @ 131: loopentry
[BaselineOp] [block counter] Emitting a block counter for op @ 131: loopentry (lineno: 191 column: 16)
[BaselineOp] Compiling op @ 133: getlocal
[BaselineOp] Compiling op @ 136: this
[BaselineOp] Compiling op @ 137: getprop
[BaselineOp] Compiling op @ 142: length
[BaselineOp] Compiling op @ 147: lt
[BaselineOp] Compiling op @ 148: ifne
[BaselineOp] Compiling op @ 153: getlocal
[BaselineOp] [block counter] Emitting a block counter for op @ 153: getlocal (lineno: 200 column: 8)
[BaselineOp] Compiling op @ 156: not
[BaselineOp] Compiling op @ 157: ifeq
[BaselineOp] Compiling op @ 162: newarray
[BaselineOp] [block counter] Emitting a block counter for op @ 162: newarray (lineno: 201 column: 8)
[BaselineOp] Compiling op @ 166: this
[BaselineOp] Compiling op @ 167: getprop
[BaselineOp] Compiling op @ 172: zero
[BaselineOp] Compiling op @ 173: getelem
[BaselineOp] Compiling op @ 174: initelem_array
[BaselineOp] Compiling op @ 178: this
[BaselineOp] Compiling op @ 179: getprop
[BaselineOp] Compiling op @ 184: one
[BaselineOp] Compiling op @ 185: getelem
[BaselineOp] Compiling op @ 186: initelem_array
[BaselineOp] Compiling op @ 190: this
[BaselineOp] Compiling op @ 191: getprop
[BaselineOp] Compiling op @ 196: int8
[BaselineOp] Compiling op @ 198: getelem
[BaselineOp] Compiling op @ 199: initelem_array
[BaselineOp] Compiling op @ 203: endinit
[BaselineOp] Compiling op @ 204: return
[BaselineOp] Compiling op @ 205: getlocal
[BaselineOp] [block counter] Emitting a block counter for op @ 205: getlocal (lineno: 203 column: 0)
[BaselineOp] Compiling op @ 208: getprop
[BaselineOp] Compiling op @ 213: setlocal
[BaselineOp] Compiling op @ 216: pop
[BaselineOp] Compiling op @ 217: callgname
[BaselineOp] Compiling op @ 222: undefined
[BaselineOp] Compiling op @ 223: notearg
[BaselineOp] Compiling op @ 224: getarg
[BaselineOp] Compiling op @ 227: notearg
[BaselineOp] Compiling op @ 228: callgname
[BaselineOp] Compiling op @ 233: undefined
[BaselineOp] Compiling op @ 234: notearg
[BaselineOp] Compiling op @ 235: getarg
[BaselineOp] Compiling op @ 238: notearg
[BaselineOp] Compiling op @ 239: getarg
[BaselineOp] Compiling op @ 242: notearg
[BaselineOp] Compiling op @ 243: call
[BaselineOp] Compiling op @ 246: notearg
[BaselineOp] Compiling op @ 247: call
[BaselineOp] Compiling op @ 250: setlocal
[BaselineOp] Compiling op @ 253: pop
[BaselineOp] Compiling op @ 254: callgname
[BaselineOp] Compiling op @ 259: undefined
[BaselineOp] Compiling op @ 260: notearg
[BaselineOp] Compiling op @ 261: getarg
[BaselineOp] Compiling op @ 264: notearg
[BaselineOp] Compiling op @ 265: getlocal
[BaselineOp] Compiling op @ 268: notearg
[BaselineOp] Compiling op @ 269: call
[BaselineOp] Compiling op @ 272: zero
[BaselineOp] Compiling op @ 273: gt
[BaselineOp] Compiling op @ 274: ifeq
[BaselineOp] Compiling op @ 279: newarray
[BaselineOp] [block counter] Emitting a block counter for op @ 279: newarray (lineno: 206 column: 8)
[BaselineOp] Compiling op @ 283: getlocal
[BaselineOp] Compiling op @ 286: zero
[BaselineOp] Compiling op @ 287: getelem
[BaselineOp] Compiling op @ 288: neg
[BaselineOp] Compiling op @ 289: initelem_array
[BaselineOp] Compiling op @ 293: getlocal
[BaselineOp] Compiling op @ 296: one
[BaselineOp] Compiling op @ 297: getelem
[BaselineOp] Compiling op @ 298: neg
[BaselineOp] Compiling op @ 299: initelem_array
[BaselineOp] Compiling op @ 303: getlocal
[BaselineOp] Compiling op @ 306: int8
[BaselineOp] Compiling op @ 308: getelem
[BaselineOp] Compiling op @ 309: neg
[BaselineOp] Compiling op @ 310: initelem_array
[BaselineOp] Compiling op @ 314: endinit
[BaselineOp] Compiling op @ 315: setlocal
[BaselineOp] Compiling op @ 318: pop
[BaselineOp] Compiling op @ 319: null
[BaselineOp] [block counter] Emitting a block counter for op @ 319: null (lineno: 208 column: 0)
[BaselineOp] Compiling op @ 320: setlocal
[BaselineOp] Compiling op @ 323: pop
[BaselineOp] Compiling op @ 324: getlocal
[BaselineOp] Compiling op @ 327: getprop
[BaselineOp] Compiling op @ 332: ifeq
[BaselineOp] Compiling op @ 337: getlocal
[BaselineOp] [block counter] Emitting a block counter for op @ 337: getlocal (lineno: 210 column: 8)
[BaselineOp] Compiling op @ 340: dup
[BaselineOp] Compiling op @ 341: callprop
[BaselineOp] Compiling op @ 346: swap
[BaselineOp] Compiling op @ 347: notearg
[BaselineOp] Compiling op @ 348: getlocal
[BaselineOp] Compiling op @ 351: notearg
[BaselineOp] Compiling op @ 352: getlocal
[BaselineOp] Compiling op @ 355: notearg
[BaselineOp] Compiling op @ 356: getarg
[BaselineOp] Compiling op @ 359: notearg
[BaselineOp] Compiling op @ 360: call
[BaselineOp] Compiling op @ 363: setlocal
[BaselineOp] Compiling op @ 366: pop
[BaselineOp] Compiling op @ 367: goto
[BaselineOp] Compiling op @ 372: getlocal
[BaselineOp] [block counter] Emitting a block counter for op @ 372: getlocal (lineno: 212 column: 8)
[BaselineOp] Compiling op @ 375: getprop
[BaselineOp] Compiling op @ 380: setlocal
[BaselineOp] Compiling op @ 383: pop
[BaselineOp] Compiling op @ 384: null
[BaselineOp] [block counter] Emitting a block counter for op @ 384: null (lineno: 216 column: 0)
[BaselineOp] Compiling op @ 385: setlocal
[BaselineOp] Compiling op @ 388: pop
[BaselineOp] Compiling op @ 389: getlocal
[BaselineOp] Compiling op @ 392: getprop
[BaselineOp] Compiling op @ 397: double
[BaselineOp] Compiling op @ 402: gt
[BaselineOp] Compiling op @ 403: ifeq
[BaselineOp] Compiling op @ 408: callgname
[BaselineOp] [block counter] Emitting a block counter for op @ 408: callgname (lineno: 218 column: 0)
[BaselineOp] Compiling op @ 413: undefined
[BaselineOp] Compiling op @ 414: notearg
[BaselineOp] Compiling op @ 415: callgname
[BaselineOp] Compiling op @ 420: undefined
[BaselineOp] Compiling op @ 421: notearg
[BaselineOp] Compiling op @ 422: getlocal
[BaselineOp] Compiling op @ 425: notearg
[BaselineOp] Compiling op @ 426: int8
[BaselineOp] Compiling op @ 428: neg
[BaselineOp] Compiling op @ 429: callgname
[BaselineOp] Compiling op @ 434: undefined
[BaselineOp] Compiling op @ 435: notearg
[BaselineOp] Compiling op @ 436: getarg
[BaselineOp] Compiling op @ 439: notearg
[BaselineOp] Compiling op @ 440: getlocal
[BaselineOp] Compiling op @ 443: notearg
[BaselineOp] Compiling op @ 444: call
[BaselineOp] Compiling op @ 447: mul
[BaselineOp] Compiling op @ 448: notearg
[BaselineOp] Compiling op @ 449: call
[BaselineOp] Compiling op @ 452: notearg
[BaselineOp] Compiling op @ 453: getarg
[BaselineOp] Compiling op @ 456: notearg
[BaselineOp] Compiling op @ 457: call
[BaselineOp] Compiling op @ 460: setlocal
[BaselineOp] Compiling op @ 463: pop
[BaselineOp] Compiling op @ 464: this
[BaselineOp] Compiling op @ 465: dup
[BaselineOp] Compiling op @ 466: callprop
[BaselineOp] Compiling op @ 471: swap
[BaselineOp] Compiling op @ 472: notearg
[BaselineOp] Compiling op @ 473: getlocal
[BaselineOp] Compiling op @ 476: notearg
[BaselineOp] Compiling op @ 477: getlocal
[BaselineOp] Compiling op @ 480: notearg
[BaselineOp] Compiling op @ 481: double
[BaselineOp] Compiling op @ 486: notearg
[BaselineOp] Compiling op @ 487: uint24
[BaselineOp] Compiling op @ 491: notearg
[BaselineOp] Compiling op @ 492: call
[BaselineOp] Compiling op @ 495: setlocal
[BaselineOp] Compiling op @ 498: pop
[BaselineOp] Compiling op @ 499: getlocal
[BaselineOp] Compiling op @ 502: getprop
[BaselineOp] Compiling op @ 507: double
[BaselineOp] Compiling op @ 512: ge
[BaselineOp] Compiling op @ 513: ifeq
[BaselineOp] Compiling op @ 518: getlocal
[BaselineOp] [block counter] Emitting a block counter for op @ 518: getlocal (lineno: 221 column: 0)
[BaselineOp] Compiling op @ 521: return
[BaselineOp] Compiling op @ 522: newarray
[BaselineOp] [block counter] Emitting a block counter for op @ 522: newarray (lineno: 224 column: 0)
[BaselineOp] Compiling op @ 526: this
[BaselineOp] Compiling op @ 527: getprop
[BaselineOp] Compiling op @ 532: zero
[BaselineOp] Compiling op @ 533: getelem
[BaselineOp] Compiling op @ 534: initelem_array
[BaselineOp] Compiling op @ 538: this
[BaselineOp] Compiling op @ 539: getprop
[BaselineOp] Compiling op @ 544: one
[BaselineOp] Compiling op @ 545: getelem
[BaselineOp] Compiling op @ 546: initelem_array
[BaselineOp] Compiling op @ 550: this
[BaselineOp] Compiling op @ 551: getprop
[BaselineOp] Compiling op @ 556: int8
[BaselineOp] Compiling op @ 558: getelem
[BaselineOp] Compiling op @ 559: initelem_array
[BaselineOp] Compiling op @ 563: endinit
[BaselineOp] Compiling op @ 564: setlocal
[BaselineOp] Compiling op @ 567: pop
[BaselineOp] Compiling op @ 568: zero
[BaselineOp] Compiling op @ 569: setlocal
[BaselineOp] Compiling op @ 572: pop
[BaselineOp] Compiling op @ 573: goto
[BaselineOp] Compiling op @ 578: loophead
[BaselineOp] [block counter] Emitting a block counter for op @ 578: loophead (lineno: 226 column: 0)
[BaselineOp] Compiling op @ 579: this
[BaselineOp] [block counter] Emitting a block counter for op @ 579: this (lineno: 226 column: 0)
[BaselineOp] Compiling op @ 580: getprop
[BaselineOp] Compiling op @ 585: getlocal
[BaselineOp] Compiling op @ 588: getelem
[BaselineOp] Compiling op @ 589: setlocal
[BaselineOp] Compiling op @ 592: pop
[BaselineOp] Compiling op @ 593: callgname
[BaselineOp] Compiling op @ 598: undefined
[BaselineOp] Compiling op @ 599: notearg
[BaselineOp] Compiling op @ 600: getlocal
[BaselineOp] Compiling op @ 603: notearg
[BaselineOp] Compiling op @ 604: getlocal
[BaselineOp] Compiling op @ 607: notearg
[BaselineOp] Compiling op @ 608: call
[BaselineOp] Compiling op @ 611: setlocal
[BaselineOp] Compiling op @ 614: pop
[BaselineOp] Compiling op @ 615: callgname
[BaselineOp] Compiling op @ 620: undefined
[BaselineOp] Compiling op @ 621: notearg
[BaselineOp] Compiling op @ 622: getlocal
[BaselineOp] Compiling op @ 625: notearg
[BaselineOp] Compiling op @ 626: call
[BaselineOp] Compiling op @ 629: setlocal
[BaselineOp] Compiling op @ 632: pop
[BaselineOp] Compiling op @ 633: callgname
[BaselineOp] Compiling op @ 638: undefined
[BaselineOp] Compiling op @ 639: notearg
[BaselineOp] Compiling op @ 640: getlocal
[BaselineOp] Compiling op @ 643: notearg
[BaselineOp] Compiling op @ 644: one
[BaselineOp] Compiling op @ 645: getlocal
[BaselineOp] Compiling op @ 648: div
[BaselineOp] Compiling op @ 649: notearg
[BaselineOp] Compiling op @ 650: call
[BaselineOp] Compiling op @ 653: pop
[BaselineOp] Compiling op @ 654: getlocal
[BaselineOp] Compiling op @ 657: double
[BaselineOp] Compiling op @ 662: sub
[BaselineOp] Compiling op @ 663: setlocal
[BaselineOp] Compiling op @ 666: pop
[BaselineOp] Compiling op @ 667: this
[BaselineOp] Compiling op @ 668: dup
[BaselineOp] Compiling op @ 669: callprop
[BaselineOp] Compiling op @ 674: swap
[BaselineOp] Compiling op @ 675: notearg
[BaselineOp] Compiling op @ 676: getlocal
[BaselineOp] Compiling op @ 679: notearg
[BaselineOp] Compiling op @ 680: getlocal
[BaselineOp] Compiling op @ 683: notearg
[BaselineOp] Compiling op @ 684: getlocal
[BaselineOp] Compiling op @ 687: notearg
[BaselineOp] Compiling op @ 688: call
[BaselineOp] Compiling op @ 691: ifeq
[BaselineOp] Compiling op @ 696: goto
[BaselineOp] [block counter] Emitting a block counter for op @ 696: goto (lineno: 232 column: 0)
[BaselineOp] Compiling op @ 701: callgname
[BaselineOp] [block counter] Emitting a block counter for op @ 701: callgname (lineno: 233 column: 0)
[BaselineOp] Compiling op @ 706: undefined
[BaselineOp] Compiling op @ 707: notearg
[BaselineOp] Compiling op @ 708: getlocal
[BaselineOp] Compiling op @ 711: notearg
[BaselineOp] Compiling op @ 712: getlocal
[BaselineOp] Compiling op @ 715: notearg
[BaselineOp] Compiling op @ 716: call
[BaselineOp] Compiling op @ 719: setlocal
[BaselineOp] Compiling op @ 722: pop
[BaselineOp] Compiling op @ 723: getlocal
[BaselineOp] Compiling op @ 726: zero
[BaselineOp] Compiling op @ 727: gt
[BaselineOp] Compiling op @ 728: ifeq
[BaselineOp] Compiling op @ 733: callgname
[BaselineOp] [block counter] Emitting a block counter for op @ 733: callgname (lineno: 235 column: 12)
[BaselineOp] Compiling op @ 738: undefined
[BaselineOp] Compiling op @ 739: notearg
[BaselineOp] Compiling op @ 740: getlocal
[BaselineOp] Compiling op @ 743: notearg
[BaselineOp] Compiling op @ 744: callgname
[BaselineOp] Compiling op @ 749: undefined
[BaselineOp] Compiling op @ 750: notearg
[BaselineOp] Compiling op @ 751: getlocal
[BaselineOp] Compiling op @ 754: getprop
[BaselineOp] Compiling op @ 759: notearg
[BaselineOp] Compiling op @ 760: getlocal
[BaselineOp] Compiling op @ 763: notearg
[BaselineOp] Compiling op @ 764: call
[BaselineOp] Compiling op @ 767: notearg
[BaselineOp] Compiling op @ 768: call
[BaselineOp] Compiling op @ 771: pop
[BaselineOp] Compiling op @ 772: getlocal
[BaselineOp] [block counter] Emitting a block counter for op @ 772: getlocal (lineno: 225 column: 44)
[BaselineOp] Compiling op @ 775: pos
[BaselineOp] Compiling op @ 776: dup
[BaselineOp] Compiling op @ 777: one
[BaselineOp] Compiling op @ 778: add
[BaselineOp] Compiling op @ 779: setlocal
[BaselineOp] Compiling op @ 782: pop
[BaselineOp] Compiling op @ 783: pop
[BaselineOp] Compiling op @ 784: loopentry
[BaselineOp] [block counter] Emitting a block counter for op @ 784: loopentry (lineno: 225 column: 20)
[BaselineOp] Compiling op @ 786: getlocal
[BaselineOp] Compiling op @ 789: this
[BaselineOp] Compiling op @ 790: getprop
[BaselineOp] Compiling op @ 795: length
[BaselineOp] Compiling op @ 800: lt
[BaselineOp] Compiling op @ 801: ifne
[BaselineOp] Compiling op @ 806: callgname
[BaselineOp] [block counter] Emitting a block counter for op @ 806: callgname (lineno: 237 column: 4)
[BaselineOp] Compiling op @ 811: undefined
[BaselineOp] Compiling op @ 812: notearg
[BaselineOp] Compiling op @ 813: getlocal
[BaselineOp] Compiling op @ 816: notearg
[BaselineOp] Compiling op @ 817: getlocal
[BaselineOp] Compiling op @ 820: notearg
[BaselineOp] Compiling op @ 821: call
[BaselineOp] Compiling op @ 824: setlocal
[BaselineOp] Compiling op @ 827: pop
[BaselineOp] Compiling op @ 828: getlocal
[BaselineOp] Compiling op @ 831: ifeq
[BaselineOp] Compiling op @ 836: callgname
[BaselineOp] [block counter] Emitting a block counter for op @ 836: callgname (lineno: 239 column: 8)
[BaselineOp] Compiling op @ 841: undefined
[BaselineOp] Compiling op @ 842: notearg
[BaselineOp] Compiling op @ 843: callgname
[BaselineOp] Compiling op @ 848: undefined
[BaselineOp] Compiling op @ 849: notearg
[BaselineOp] Compiling op @ 850: getlocal
[BaselineOp] Compiling op @ 853: notearg
[BaselineOp] Compiling op @ 854: one
[BaselineOp] Compiling op @ 855: getlocal
[BaselineOp] Compiling op @ 858: getprop
[BaselineOp] Compiling op @ 863: sub
[BaselineOp] Compiling op @ 864: notearg
[BaselineOp] Compiling op @ 865: call
[BaselineOp] Compiling op @ 868: notearg
[BaselineOp] Compiling op @ 869: callgname
[BaselineOp] Compiling op @ 874: undefined
[BaselineOp] Compiling op @ 875: notearg
[BaselineOp] Compiling op @ 876: getlocal
[BaselineOp] Compiling op @ 879: notearg
[BaselineOp] Compiling op @ 880: getlocal
[BaselineOp] Compiling op @ 883: getprop
[BaselineOp] Compiling op @ 888: notearg
[BaselineOp] Compiling op @ 889: call
[BaselineOp] Compiling op @ 892: notearg
[BaselineOp] Compiling op @ 893: call
[BaselineOp] Compiling op @ 896: setlocal
[BaselineOp] Compiling op @ 899: pop
[BaselineOp] Compiling op @ 900: getlocal
[BaselineOp] [block counter] Emitting a block counter for op @ 900: getlocal (lineno: 241 column: 4)
[BaselineOp] Compiling op @ 903: return
[BaselineOp] Compiling op @ 904: stop
[BaselineScripts] Created BaselineScript 0x2b1f880 (raw 0x7f2210525960) for 3d-raytrace.js:189
[BaselineScripts] [block counter] 30 block counters were emitted for script 3d-raytrace.js:189 (0x2b1f880) (lineno: 241 column: 13)
[BaselineOp] Analyzing op @ 0 (end=312): this
[BaselineOp] Analyzing op @ 1 (end=312): getprop
[BaselineOp] Analyzing op @ 6 (end=312): one
[BaselineOp] Analyzing op @ 7 (end=312): add
[BaselineOp] Analyzing op @ 8 (end=312): int8
[BaselineOp] Analyzing op @ 10 (end=312): mod
[BaselineOp] Analyzing op @ 11 (end=312): setlocal
[BaselineOp] Analyzing op @ 14 (end=312): pop
[BaselineOp] Analyzing op @ 15 (end=312): this
[BaselineOp] Analyzing op @ 16 (end=312): getprop
[BaselineOp] Analyzing op @ 21 (end=312): int8
[BaselineOp] Analyzing op @ 23 (end=312): add
[BaselineOp] Analyzing op @ 24 (end=312): int8
[BaselineOp] Analyzing op @ 26 (end=312): mod
[BaselineOp] Analyzing op @ 27 (end=312): setlocal
[BaselineOp] Analyzing op @ 30 (end=312): pop
[BaselineOp] Analyzing op @ 31 (end=312): getarg
[BaselineOp] Analyzing op @ 34 (end=312): this
[BaselineOp] Analyzing op @ 35 (end=312): getprop
[BaselineOp] Analyzing op @ 40 (end=312): getelem
[BaselineOp] Analyzing op @ 41 (end=312): this
[BaselineOp] Analyzing op @ 42 (end=312): getprop
[BaselineOp] Analyzing op @ 47 (end=312): getarg
[BaselineOp] Analyzing op @ 50 (end=312): getlocal
[BaselineOp] Analyzing op @ 53 (end=312): getelem
[BaselineOp] Analyzing op @ 54 (end=312): mul
[BaselineOp] Analyzing op @ 55 (end=312): add
[BaselineOp] Analyzing op @ 56 (end=312): this
[BaselineOp] Analyzing op @ 57 (end=312): getprop
[BaselineOp] Analyzing op @ 62 (end=312): getarg
[BaselineOp] Analyzing op @ 65 (end=312): getlocal
[BaselineOp] Analyzing op @ 68 (end=312): getelem
[BaselineOp] Analyzing op @ 69 (end=312): mul
[BaselineOp] Analyzing op @ 70 (end=312): add
[BaselineOp] Analyzing op @ 71 (end=312): setlocal
[BaselineOp] Analyzing op @ 74 (end=312): pop
[BaselineOp] Analyzing op @ 75 (end=312): this
[BaselineOp] Analyzing op @ 76 (end=312): getprop
[BaselineOp] Analyzing op @ 81 (end=312): getarg
[BaselineOp] Analyzing op @ 84 (end=312): this
[BaselineOp] Analyzing op @ 85 (end=312): getprop
[BaselineOp] Analyzing op @ 90 (end=312): getelem
[BaselineOp] Analyzing op @ 91 (end=312): sub
[BaselineOp] Analyzing op @ 92 (end=312): this
[BaselineOp] Analyzing op @ 93 (end=312): getprop
[BaselineOp] Analyzing op @ 98 (end=312): getarg
[BaselineOp] Analyzing op @ 101 (end=312): getlocal
[BaselineOp] Analyzing op @ 104 (end=312): getelem
[BaselineOp] Analyzing op @ 105 (end=312): mul
[BaselineOp] Analyzing op @ 106 (end=312): sub
[BaselineOp] Analyzing op @ 107 (end=312): this
[BaselineOp] Analyzing op @ 108 (end=312): getprop
[BaselineOp] Analyzing op @ 113 (end=312): getarg
[BaselineOp] Analyzing op @ 116 (end=312): getlocal
[BaselineOp] Analyzing op @ 119 (end=312): getelem
[BaselineOp] Analyzing op @ 120 (end=312): mul
[BaselineOp] Analyzing op @ 121 (end=312): sub
[BaselineOp] Analyzing op @ 122 (end=312): getlocal
[BaselineOp] Analyzing op @ 125 (end=312): div
[BaselineOp] Analyzing op @ 126 (end=312): setlocal
[BaselineOp] Analyzing op @ 129 (end=312): pop
[BaselineOp] Analyzing op @ 130 (end=312): getlocal
[BaselineOp] Analyzing op @ 133 (end=312): getarg
[BaselineOp] Analyzing op @ 136 (end=312): lt
[BaselineOp] Analyzing op @ 137 (end=312): or
[BaselineOp] Analyzing op @ 142 (end=312): pop
[BaselineOp] Analyzing op @ 143 (end=312): getlocal
[BaselineOp] Analyzing op @ 146 (end=312): getarg
[BaselineOp] Analyzing op @ 149 (end=312): gt
[BaselineOp] Analyzing op @ 150 (end=312): ifeq
[BaselineOp] Analyzing op @ 155 (end=312): null
[BaselineOp] Analyzing op @ 156 (end=312): return
[BaselineOp] Analyzing op @ 157 (end=312): getarg
[BaselineOp] Analyzing op @ 160 (end=312): getlocal
[BaselineOp] Analyzing op @ 163 (end=312): getelem
[BaselineOp] Analyzing op @ 164 (end=312): getlocal
[BaselineOp] Analyzing op @ 167 (end=312): getarg
[BaselineOp] Analyzing op @ 170 (end=312): getlocal
[BaselineOp] Analyzing op @ 173 (end=312): getelem
[BaselineOp] Analyzing op @ 174 (end=312): mul
[BaselineOp] Analyzing op @ 175 (end=312): add
[BaselineOp] Analyzing op @ 176 (end=312): this
[BaselineOp] Analyzing op @ 177 (end=312): getprop
[BaselineOp] Analyzing op @ 182 (end=312): sub
[BaselineOp] Analyzing op @ 183 (end=312): setlocal
[BaselineOp] Analyzing op @ 186 (end=312): pop
[BaselineOp] Analyzing op @ 187 (end=312): getarg
[BaselineOp] Analyzing op @ 190 (end=312): getlocal
[BaselineOp] Analyzing op @ 193 (end=312): getelem
[BaselineOp] Analyzing op @ 194 (end=312): getlocal
[BaselineOp] Analyzing op @ 197 (end=312): getarg
[BaselineOp] Analyzing op @ 200 (end=312): getlocal
[BaselineOp] Analyzing op @ 203 (end=312): getelem
[BaselineOp] Analyzing op @ 204 (end=312): mul
[BaselineOp] Analyzing op @ 205 (end=312): add
[BaselineOp] Analyzing op @ 206 (end=312): this
[BaselineOp] Analyzing op @ 207 (end=312): getprop
[BaselineOp] Analyzing op @ 212 (end=312): sub
[BaselineOp] Analyzing op @ 213 (end=312): setlocal
[BaselineOp] Analyzing op @ 216 (end=312): pop
[BaselineOp] Analyzing op @ 217 (end=312): getlocal
[BaselineOp] Analyzing op @ 220 (end=312): this
[BaselineOp] Analyzing op @ 221 (end=312): getprop
[BaselineOp] Analyzing op @ 226 (end=312): mul
[BaselineOp] Analyzing op @ 227 (end=312): getlocal
[BaselineOp] Analyzing op @ 230 (end=312): this
[BaselineOp] Analyzing op @ 231 (end=312): getprop
[BaselineOp] Analyzing op @ 236 (end=312): mul
[BaselineOp] Analyzing op @ 237 (end=312): add
[BaselineOp] Analyzing op @ 238 (end=312): setlocal
[BaselineOp] Analyzing op @ 241 (end=312): pop
[BaselineOp] Analyzing op @ 242 (end=312): getlocal
[BaselineOp] Analyzing op @ 245 (end=312): zero
[BaselineOp] Analyzing op @ 246 (end=312): lt
[BaselineOp] Analyzing op @ 247 (end=312): ifeq
[BaselineOp] Analyzing op @ 252 (end=312): null
[BaselineOp] Analyzing op @ 253 (end=312): return
[BaselineOp] Analyzing op @ 254 (end=312): getlocal
[BaselineOp] Analyzing op @ 257 (end=312): this
[BaselineOp] Analyzing op @ 258 (end=312): getprop
[BaselineOp] Analyzing op @ 263 (end=312): mul
[BaselineOp] Analyzing op @ 264 (end=312): getlocal
[BaselineOp] Analyzing op @ 267 (end=312): this
[BaselineOp] Analyzing op @ 268 (end=312): getprop
[BaselineOp] Analyzing op @ 273 (end=312): mul
[BaselineOp] Analyzing op @ 274 (end=312): add
[BaselineOp] Analyzing op @ 275 (end=312): setlocal
[BaselineOp] Analyzing op @ 278 (end=312): pop
[BaselineOp] Analyzing op @ 279 (end=312): getlocal
[BaselineOp] Analyzing op @ 282 (end=312): zero
[BaselineOp] Analyzing op @ 283 (end=312): lt
[BaselineOp] Analyzing op @ 284 (end=312): ifeq
[BaselineOp] Analyzing op @ 289 (end=312): null
[BaselineOp] Analyzing op @ 290 (end=312): return
[BaselineOp] Analyzing op @ 291 (end=312): getlocal
[BaselineOp] Analyzing op @ 294 (end=312): getlocal
[BaselineOp] Analyzing op @ 297 (end=312): add
[BaselineOp] Analyzing op @ 298 (end=312): one
[BaselineOp] Analyzing op @ 299 (end=312): gt
[BaselineOp] Analyzing op @ 300 (end=312): ifeq
[BaselineOp] Analyzing op @ 305 (end=312): null
[BaselineOp] Analyzing op @ 306 (end=312): return
[BaselineOp] Analyzing op @ 307 (end=312): getlocal
[BaselineOp] Analyzing op @ 310 (end=312): return
[BaselineOp] Analyzing op @ 311 (end=312): stop
[BaselineScripts] Baseline compiling script 3d-raytrace.js:160 (0x7f220e86e1f0)
[BaselineOp] Compiling op @ 0: this
[BaselineOp] Compiling op @ 1: getprop
[BaselineOp] Compiling op @ 6: one
[BaselineOp] Compiling op @ 7: add
[BaselineOp] Compiling op @ 8: int8
[BaselineOp] Compiling op @ 10: mod
[BaselineOp] Compiling op @ 11: setlocal
[BaselineOp] Compiling op @ 14: pop
[BaselineOp] Compiling op @ 15: this
[BaselineOp] Compiling op @ 16: getprop
[BaselineOp] Compiling op @ 21: int8
[BaselineOp] Compiling op @ 23: add
[BaselineOp] Compiling op @ 24: int8
[BaselineOp] Compiling op @ 26: mod
[BaselineOp] Compiling op @ 27: setlocal
[BaselineOp] Compiling op @ 30: pop
[BaselineOp] Compiling op @ 31: getarg
[BaselineOp] Compiling op @ 34: this
[BaselineOp] Compiling op @ 35: getprop
[BaselineOp] Compiling op @ 40: getelem
[BaselineOp] Compiling op @ 41: this
[BaselineOp] Compiling op @ 42: getprop
[BaselineOp] Compiling op @ 47: getarg
[BaselineOp] Compiling op @ 50: getlocal
[BaselineOp] Compiling op @ 53: getelem
[BaselineOp] Compiling op @ 54: mul
[BaselineOp] Compiling op @ 55: add
[BaselineOp] Compiling op @ 56: this
[BaselineOp] Compiling op @ 57: getprop
[BaselineOp] Compiling op @ 62: getarg
[BaselineOp] Compiling op @ 65: getlocal
[BaselineOp] Compiling op @ 68: getelem
[BaselineOp] Compiling op @ 69: mul
[BaselineOp] Compiling op @ 70: add
[BaselineOp] Compiling op @ 71: setlocal
[BaselineOp] Compiling op @ 74: pop
[BaselineOp] Compiling op @ 75: this
[BaselineOp] Compiling op @ 76: getprop
[BaselineOp] Compiling op @ 81: getarg
[BaselineOp] Compiling op @ 84: this
[BaselineOp] Compiling op @ 85: getprop
[BaselineOp] Compiling op @ 90: getelem
[BaselineOp] Compiling op @ 91: sub
[BaselineOp] Compiling op @ 92: this
[BaselineOp] Compiling op @ 93: getprop
[BaselineOp] Compiling op @ 98: getarg
[BaselineOp] Compiling op @ 101: getlocal
[BaselineOp] Compiling op @ 104: getelem
[BaselineOp] Compiling op @ 105: mul
[BaselineOp] Compiling op @ 106: sub
[BaselineOp] Compiling op @ 107: this
[BaselineOp] Compiling op @ 108: getprop
[BaselineOp] Compiling op @ 113: getarg
[BaselineOp] Compiling op @ 116: getlocal
[BaselineOp] Compiling op @ 119: getelem
[BaselineOp] Compiling op @ 120: mul
[BaselineOp] Compiling op @ 121: sub
[BaselineOp] Compiling op @ 122: getlocal
[BaselineOp] Compiling op @ 125: div
[BaselineOp] Compiling op @ 126: setlocal
[BaselineOp] Compiling op @ 129: pop
[BaselineOp] Compiling op @ 130: getlocal
[BaselineOp] Compiling op @ 133: getarg
[BaselineOp] Compiling op @ 136: lt
[BaselineOp] Compiling op @ 137: or
[BaselineOp] Compiling op @ 142: pop
[BaselineOp] [block counter] Emitting a block counter for op @ 142: pop (lineno: 165 column: 0)
[BaselineOp] Compiling op @ 143: getlocal
[BaselineOp] Compiling op @ 146: getarg
[BaselineOp] Compiling op @ 149: gt
[BaselineOp] Compiling op @ 150: ifeq
[BaselineOp] [block counter] Emitting a block counter for op @ 150: ifeq (lineno: 165 column: 0)
[BaselineOp] Compiling op @ 155: null
[BaselineOp] [block counter] Emitting a block counter for op @ 155: null (lineno: 166 column: 0)
[BaselineOp] Compiling op @ 156: return
[BaselineOp] Compiling op @ 157: getarg
[BaselineOp] [block counter] Emitting a block counter for op @ 157: getarg (lineno: 167 column: 0)
[BaselineOp] Compiling op @ 160: getlocal
[BaselineOp] Compiling op @ 163: getelem
[BaselineOp] Compiling op @ 164: getlocal
[BaselineOp] Compiling op @ 167: getarg
[BaselineOp] Compiling op @ 170: getlocal
[BaselineOp] Compiling op @ 173: getelem
[BaselineOp] Compiling op @ 174: mul
[BaselineOp] Compiling op @ 175: add
[BaselineOp] Compiling op @ 176: this
[BaselineOp] Compiling op @ 177: getprop
[BaselineOp] Compiling op @ 182: sub
[BaselineOp] Compiling op @ 183: setlocal
[BaselineOp] Compiling op @ 186: pop
[BaselineOp] Compiling op @ 187: getarg
[BaselineOp] Compiling op @ 190: getlocal
[BaselineOp] Compiling op @ 193: getelem
[BaselineOp] Compiling op @ 194: getlocal
[BaselineOp] Compiling op @ 197: getarg
[BaselineOp] Compiling op @ 200: getlocal
[BaselineOp] Compiling op @ 203: getelem
[BaselineOp] Compiling op @ 204: mul
[BaselineOp] Compiling op @ 205: add
[BaselineOp] Compiling op @ 206: this
[BaselineOp] Compiling op @ 207: getprop
[BaselineOp] Compiling op @ 212: sub
[BaselineOp] Compiling op @ 213: setlocal
[BaselineOp] Compiling op @ 216: pop
[BaselineOp] Compiling op @ 217: getlocal
[BaselineOp] Compiling op @ 220: this
[BaselineOp] Compiling op @ 221: getprop
[BaselineOp] Compiling op @ 226: mul
[BaselineOp] Compiling op @ 227: getlocal
[BaselineOp] Compiling op @ 230: this
[BaselineOp] Compiling op @ 231: getprop
[BaselineOp] Compiling op @ 236: mul
[BaselineOp] Compiling op @ 237: add
[BaselineOp] Compiling op @ 238: setlocal
[BaselineOp] Compiling op @ 241: pop
[BaselineOp] Compiling op @ 242: getlocal
[BaselineOp] Compiling op @ 245: zero
[BaselineOp] Compiling op @ 246: lt
[BaselineOp] Compiling op @ 247: ifeq
[BaselineOp] Compiling op @ 252: null
[BaselineOp] [block counter] Emitting a block counter for op @ 252: null (lineno: 171 column: 0)
[BaselineOp] Compiling op @ 253: return
[BaselineOp] Compiling op @ 254: getlocal
[BaselineOp] [block counter] Emitting a block counter for op @ 254: getlocal (lineno: 172 column: 0)
[BaselineOp] Compiling op @ 257: this
[BaselineOp] Compiling op @ 258: getprop
[BaselineOp] Compiling op @ 263: mul
[BaselineOp] Compiling op @ 264: getlocal
[BaselineOp] Compiling op @ 267: this
[BaselineOp] Compiling op @ 268: getprop
[BaselineOp] Compiling op @ 273: mul
[BaselineOp] Compiling op @ 274: add
[BaselineOp] Compiling op @ 275: setlocal
[BaselineOp] Compiling op @ 278: pop
[BaselineOp] Compiling op @ 279: getlocal
[BaselineOp] Compiling op @ 282: zero
[BaselineOp] Compiling op @ 283: lt
[BaselineOp] Compiling op @ 284: ifeq
[BaselineOp] Compiling op @ 289: null
[BaselineOp] [block counter] Emitting a block counter for op @ 289: null (lineno: 174 column: 0)
[BaselineOp] Compiling op @ 290: return
[BaselineOp] Compiling op @ 291: getlocal
[BaselineOp] [block counter] Emitting a block counter for op @ 291: getlocal (lineno: 176 column: 0)
[BaselineOp] Compiling op @ 294: getlocal
[BaselineOp] Compiling op @ 297: add
[BaselineOp] Compiling op @ 298: one
[BaselineOp] Compiling op @ 299: gt
[BaselineOp] Compiling op @ 300: ifeq
[BaselineOp] Compiling op @ 305: null
[BaselineOp] [block counter] Emitting a block counter for op @ 305: null (lineno: 177 column: 0)
[BaselineOp] Compiling op @ 306: return
[BaselineOp] Compiling op @ 307: getlocal
[BaselineOp] [block counter] Emitting a block counter for op @ 307: getlocal (lineno: 178 column: 4)
[BaselineOp] Compiling op @ 310: return
[BaselineOp] Compiling op @ 311: stop
[BaselineScripts] Created BaselineScript 0x2b09640 (raw 0x7f2210527000) for 3d-raytrace.js:160
[BaselineScripts] [block counter] 10 block counters were emitted for script 3d-raytrace.js:160 (0x2b09640) (lineno: 178 column: 13)
[BaselineOp] Analyzing op @ 0 (end=176): double
[BaselineOp] Analyzing op @ 5 (end=176): setlocal
[BaselineOp] Analyzing op @ 8 (end=176): pop
[BaselineOp] Analyzing op @ 9 (end=176): null
[BaselineOp] Analyzing op @ 10 (end=176): setlocal
[BaselineOp] Analyzing op @ 13 (end=176): pop
[BaselineOp] Analyzing op @ 14 (end=176): bindgname
[BaselineOp] Analyzing op @ 19 (end=176): zero
[BaselineOp] Analyzing op @ 20 (end=176): setgname
[BaselineOp] Analyzing op @ 25 (end=176): pop
[BaselineOp] Analyzing op @ 26 (end=176): goto
[BaselineOp] Analyzing op @ 31 (end=176): loophead
[BaselineOp] Analyzing op @ 32 (end=176): this
[BaselineOp] Analyzing op @ 33 (end=176): getprop
[BaselineOp] Analyzing op @ 38 (end=176): getgname
[BaselineOp] Analyzing op @ 43 (end=176): getelem
[BaselineOp] Analyzing op @ 44 (end=176): setlocal
[BaselineOp] Analyzing op @ 47 (end=176): pop
[BaselineOp] Analyzing op @ 48 (end=176): getlocal
[BaselineOp] Analyzing op @ 51 (end=176): dup
[BaselineOp] Analyzing op @ 52 (end=176): callprop
[BaselineOp] Analyzing op @ 57 (end=176): swap
[BaselineOp] Analyzing op @ 58 (end=176): notearg
[BaselineOp] Analyzing op @ 59 (end=176): getarg
[BaselineOp] Analyzing op @ 62 (end=176): notearg
[BaselineOp] Analyzing op @ 63 (end=176): getarg
[BaselineOp] Analyzing op @ 66 (end=176): notearg
[BaselineOp] Analyzing op @ 67 (end=176): getlocal
[BaselineOp] Analyzing op @ 70 (end=176): notearg
[BaselineOp] Analyzing op @ 71 (end=176): getarg
[BaselineOp] Analyzing op @ 74 (end=176): notearg
[BaselineOp] Analyzing op @ 75 (end=176): call
[BaselineOp] Analyzing op @ 78 (end=176): setlocal
[BaselineOp] Analyzing op @ 81 (end=176): pop
[BaselineOp] Analyzing op @ 82 (end=176): getlocal
[BaselineOp] Analyzing op @ 85 (end=176): null
[BaselineOp] Analyzing op @ 86 (end=176): eq
[BaselineOp] Analyzing op @ 87 (end=176): or
[BaselineOp] Analyzing op @ 92 (end=176): pop
[BaselineOp] Analyzing op @ 93 (end=176): getlocal
[BaselineOp] Analyzing op @ 96 (end=176): getarg
[BaselineOp] Analyzing op @ 99 (end=176): gt
[BaselineOp] Analyzing op @ 100 (end=176): or
[BaselineOp] Analyzing op @ 105 (end=176): pop
[BaselineOp] Analyzing op @ 106 (end=176): getlocal
[BaselineOp] Analyzing op @ 109 (end=176): getlocal
[BaselineOp] Analyzing op @ 112 (end=176): lt
[BaselineOp] Analyzing op @ 113 (end=176): ifeq
[BaselineOp] Analyzing op @ 118 (end=176): goto
[BaselineOp] Analyzing op @ 123 (end=176): true
[BaselineOp] Analyzing op @ 124 (end=176): return
[BaselineOp] Analyzing op @ 125 (end=176): bindgname
[BaselineOp] Analyzing op @ 130 (end=176): getgname
[BaselineOp] Analyzing op @ 135 (end=176): pos
[BaselineOp] Analyzing op @ 136 (end=176): dup
[BaselineOp] Analyzing op @ 137 (end=176): one
[BaselineOp] Analyzing op @ 138 (end=176): add
[BaselineOp] Analyzing op @ 139 (end=176): pick
[BaselineOp] Analyzing op @ 141 (end=176): swap
[BaselineOp] Analyzing op @ 142 (end=176): setgname
[BaselineOp] Analyzing op @ 147 (end=176): pop
[BaselineOp] Analyzing op @ 148 (end=176): pop
[BaselineOp] Analyzing op @ 149 (end=176): loopentry
[BaselineOp] Analyzing op @ 151 (end=176): getgname
[BaselineOp] Analyzing op @ 156 (end=176): this
[BaselineOp] Analyzing op @ 157 (end=176): getprop
[BaselineOp] Analyzing op @ 162 (end=176): length
[BaselineOp] Analyzing op @ 167 (end=176): lt
[BaselineOp] Analyzing op @ 168 (end=176): ifne
[BaselineOp] Analyzing op @ 32 (end=176): this
[BaselineOp] Analyzing op @ 33 (end=176): getprop
[BaselineOp] Analyzing op @ 38 (end=176): getgname
[BaselineOp] Analyzing op @ 43 (end=176): getelem
[BaselineOp] Analyzing op @ 44 (end=176): setlocal
[BaselineOp] Analyzing op @ 47 (end=176): pop
[BaselineOp] Analyzing op @ 48 (end=176): getlocal
[BaselineOp] Analyzing op @ 51 (end=176): dup
[BaselineOp] Analyzing op @ 52 (end=176): callprop
[BaselineOp] Analyzing op @ 57 (end=176): swap
[BaselineOp] Analyzing op @ 58 (end=176): notearg
[BaselineOp] Analyzing op @ 59 (end=176): getarg
[BaselineOp] Analyzing op @ 62 (end=176): notearg
[BaselineOp] Analyzing op @ 63 (end=176): getarg
[BaselineOp] Analyzing op @ 66 (end=176): notearg
[BaselineOp] Analyzing op @ 67 (end=176): getlocal
[BaselineOp] Analyzing op @ 70 (end=176): notearg
[BaselineOp] Analyzing op @ 71 (end=176): getarg
[BaselineOp] Analyzing op @ 74 (end=176): notearg
[BaselineOp] Analyzing op @ 75 (end=176): call
[BaselineOp] Analyzing op @ 78 (end=176): setlocal
[BaselineOp] Analyzing op @ 81 (end=176): pop
[BaselineOp] Analyzing op @ 82 (end=176): getlocal
[BaselineOp] Analyzing op @ 85 (end=176): null
[BaselineOp] Analyzing op @ 86 (end=176): eq
[BaselineOp] Analyzing op @ 87 (end=176): or
[BaselineOp] Analyzing op @ 92 (end=176): pop
[BaselineOp] Analyzing op @ 93 (end=176): getlocal
[BaselineOp] Analyzing op @ 96 (end=176): getarg
[BaselineOp] Analyzing op @ 99 (end=176): gt
[BaselineOp] Analyzing op @ 100 (end=176): or
[BaselineOp] Analyzing op @ 105 (end=176): pop
[BaselineOp] Analyzing op @ 106 (end=176): getlocal
[BaselineOp] Analyzing op @ 109 (end=176): getlocal
[BaselineOp] Analyzing op @ 112 (end=176): lt
[BaselineOp] Analyzing op @ 113 (end=176): ifeq
[BaselineOp] Analyzing op @ 118 (end=176): goto
[BaselineOp] Analyzing op @ 123 (end=176): true
[BaselineOp] Analyzing op @ 124 (end=176): return
[BaselineOp] Analyzing op @ 125 (end=176): bindgname
[BaselineOp] Analyzing op @ 130 (end=176): getgname
[BaselineOp] Analyzing op @ 135 (end=176): pos
[BaselineOp] Analyzing op @ 136 (end=176): dup
[BaselineOp] Analyzing op @ 137 (end=176): one
[BaselineOp] Analyzing op @ 138 (end=176): add
[BaselineOp] Analyzing op @ 139 (end=176): pick
[BaselineOp] Analyzing op @ 141 (end=176): swap
[BaselineOp] Analyzing op @ 142 (end=176): setgname
[BaselineOp] Analyzing op @ 147 (end=176): pop
[BaselineOp] Analyzing op @ 148 (end=176): pop
[BaselineOp] Analyzing op @ 149 (end=176): loopentry
[BaselineOp] Analyzing op @ 151 (end=176): getgname
[BaselineOp] Analyzing op @ 156 (end=176): this
[BaselineOp] Analyzing op @ 157 (end=176): getprop
[BaselineOp] Analyzing op @ 162 (end=176): length
[BaselineOp] Analyzing op @ 167 (end=176): lt
[BaselineOp] Analyzing op @ 168 (end=176): ifne
[BaselineOp] Analyzing op @ 173 (end=176): false
[BaselineOp] Analyzing op @ 174 (end=176): return
[BaselineOp] Analyzing op @ 175 (end=176): stop
[BaselineScripts] Baseline compiling script 3d-raytrace.js:244 (0x7f220e86e510)
[BaselineOp] Compiling op @ 0: double
[BaselineOp] Compiling op @ 5: setlocal
[BaselineOp] Compiling op @ 8: pop
[BaselineOp] Compiling op @ 9: null
[BaselineOp] Compiling op @ 10: setlocal
[BaselineOp] Compiling op @ 13: pop
[BaselineOp] Compiling op @ 14: bindgname
[BaselineOp] Compiling op @ 19: zero
[BaselineOp] Compiling op @ 20: setgname
[BaselineOp] Compiling op @ 25: pop
[BaselineOp] Compiling op @ 26: goto
[BaselineOp] Compiling op @ 31: loophead
[BaselineOp] [block counter] Emitting a block counter for op @ 31: loophead (lineno: 248 column: 0)
[BaselineOp] Compiling op @ 32: this
[BaselineOp] [block counter] Emitting a block counter for op @ 32: this (lineno: 248 column: 0)
[BaselineOp] Compiling op @ 33: getprop
[BaselineOp] Compiling op @ 38: getgname
[BaselineOp] Compiling op @ 43: getelem
[BaselineOp] Compiling op @ 44: setlocal
[BaselineOp] Compiling op @ 47: pop
[BaselineOp] Compiling op @ 48: getlocal
[BaselineOp] Compiling op @ 51: dup
[BaselineOp] Compiling op @ 52: callprop
[BaselineOp] Compiling op @ 57: swap
[BaselineOp] Compiling op @ 58: notearg
[BaselineOp] Compiling op @ 59: getarg
[BaselineOp] Compiling op @ 62: notearg
[BaselineOp] Compiling op @ 63: getarg
[BaselineOp] Compiling op @ 66: notearg
[BaselineOp] Compiling op @ 67: getlocal
[BaselineOp] Compiling op @ 70: notearg
[BaselineOp] Compiling op @ 71: getarg
[BaselineOp] Compiling op @ 74: notearg
[BaselineOp] Compiling op @ 75: call
[BaselineOp] Compiling op @ 78: setlocal
[BaselineOp] Compiling op @ 81: pop
[BaselineOp] Compiling op @ 82: getlocal
[BaselineOp] Compiling op @ 85: null
[BaselineOp] Compiling op @ 86: eq
[BaselineOp] Compiling op @ 87: or
[BaselineOp] Compiling op @ 92: pop
[BaselineOp] [block counter] Emitting a block counter for op @ 92: pop (lineno: 250 column: 0)
[BaselineOp] Compiling op @ 93: getlocal
[BaselineOp] Compiling op @ 96: getarg
[BaselineOp] Compiling op @ 99: gt
[BaselineOp] Compiling op @ 100: or
[BaselineOp] Compiling op @ 105: pop
[BaselineOp] [block counter] Emitting a block counter for op @ 105: pop (lineno: 250 column: 0)
[BaselineOp] Compiling op @ 106: getlocal
[BaselineOp] Compiling op @ 109: getlocal
[BaselineOp] Compiling op @ 112: lt
[BaselineOp] Compiling op @ 113: ifeq
[BaselineOp] [block counter] Emitting a block counter for op @ 113: ifeq (lineno: 250 column: 0)
[BaselineOp] Compiling op @ 118: goto
[BaselineOp] [block counter] Emitting a block counter for op @ 118: goto (lineno: 251 column: 0)
[BaselineOp] Compiling op @ 123: true
[BaselineOp] [block counter] Emitting a block counter for op @ 123: true (lineno: 252 column: 0)
[BaselineOp] Compiling op @ 124: return
[BaselineOp] Compiling op @ 125: bindgname
[BaselineOp] [block counter] Emitting a block counter for op @ 125: bindgname (lineno: 247 column: 43)
[BaselineOp] Compiling op @ 130: getgname
[BaselineOp] Compiling op @ 135: pos
[BaselineOp] Compiling op @ 136: dup
[BaselineOp] Compiling op @ 137: one
[BaselineOp] Compiling op @ 138: add
[BaselineOp] Compiling op @ 139: pick
[BaselineOp] Compiling op @ 141: swap
[BaselineOp] Compiling op @ 142: setgname
[BaselineOp] Compiling op @ 147: pop
[BaselineOp] Compiling op @ 148: pop
[BaselineOp] Compiling op @ 149: loopentry
[BaselineOp] [block counter] Emitting a block counter for op @ 149: loopentry (lineno: 247 column: 16)
[BaselineOp] Compiling op @ 151: getgname
[BaselineOp] Compiling op @ 156: this
[BaselineOp] Compiling op @ 157: getprop
[BaselineOp] Compiling op @ 162: length
[BaselineOp] Compiling op @ 167: lt
[BaselineOp] Compiling op @ 168: ifne
[BaselineOp] Compiling op @ 173: false
[BaselineOp] [block counter] Emitting a block counter for op @ 173: false (lineno: 255 column: 4)
[BaselineOp] Compiling op @ 174: return
[BaselineOp] Compiling op @ 175: stop
[BaselineScripts] Created BaselineScript 0x2b1d960 (raw 0x7f2210527d90) for 3d-raytrace.js:244
[BaselineScripts] [block counter] 10 block counters were emitted for script 3d-raytrace.js:244 (0x2b1d960) (lineno: 255 column: 17)
[BaselineOp] Analyzing op @ 0 (end=47): newarray
[BaselineOp] Analyzing op @ 4 (end=47): getarg
[BaselineOp] Analyzing op @ 7 (end=47): zero
[BaselineOp] Analyzing op @ 8 (end=47): getelem
[BaselineOp] Analyzing op @ 9 (end=47): getarg
[BaselineOp] Analyzing op @ 12 (end=47): mul
[BaselineOp] Analyzing op @ 13 (end=47): initelem_array
[BaselineOp] Analyzing op @ 17 (end=47): getarg
[BaselineOp] Analyzing op @ 20 (end=47): one
[BaselineOp] Analyzing op @ 21 (end=47): getelem
[BaselineOp] Analyzing op @ 22 (end=47): getarg
[BaselineOp] Analyzing op @ 25 (end=47): mul
[BaselineOp] Analyzing op @ 26 (end=47): initelem_array
[BaselineOp] Analyzing op @ 30 (end=47): getarg
[BaselineOp] Analyzing op @ 33 (end=47): int8
[BaselineOp] Analyzing op @ 35 (end=47): getelem
[BaselineOp] Analyzing op @ 36 (end=47): getarg
[BaselineOp] Analyzing op @ 39 (end=47): mul
[BaselineOp] Analyzing op @ 40 (end=47): initelem_array
[BaselineOp] Analyzing op @ 44 (end=47): endinit
[BaselineOp] Analyzing op @ 45 (end=47): return
[BaselineOp] Analyzing op @ 46 (end=47): stop
[BaselineScripts] Baseline compiling script 3d-raytrace.js:83 (0x7f220e851f38)
[BaselineOp] Compiling op @ 0: newarray
[BaselineOp] Compiling op @ 4: getarg
[BaselineOp] Compiling op @ 7: zero
[BaselineOp] Compiling op @ 8: getelem
[BaselineOp] Compiling op @ 9: getarg
[BaselineOp] Compiling op @ 12: mul
[BaselineOp] Compiling op @ 13: initelem_array
[BaselineOp] Compiling op @ 17: getarg
[BaselineOp] Compiling op @ 20: one
[BaselineOp] Compiling op @ 21: getelem
[BaselineOp] Compiling op @ 22: getarg
[BaselineOp] Compiling op @ 25: mul
[BaselineOp] Compiling op @ 26: initelem_array
[BaselineOp] Compiling op @ 30: getarg
[BaselineOp] Compiling op @ 33: int8
[BaselineOp] Compiling op @ 35: getelem
[BaselineOp] Compiling op @ 36: getarg
[BaselineOp] Compiling op @ 39: mul
[BaselineOp] Compiling op @ 40: initelem_array
[BaselineOp] Compiling op @ 44: endinit
[BaselineOp] Compiling op @ 45: return
[BaselineOp] Compiling op @ 46: stop
[BaselineScripts] Created BaselineScript 0x2b1d480 (raw 0x7f2210528328) for 3d-raytrace.js:83
[BaselineScripts] [block counter] 0 block counters were emitted for script 3d-raytrace.js:83 (0x2b1d480) (lineno: 84 column: 54)
[BaselineOp] Analyzing op @ 0 (end=49): getarg
[BaselineOp] Analyzing op @ 3 (end=49): zero
[BaselineOp] Analyzing op @ 4 (end=49): dup2
[BaselineOp] Analyzing op @ 5 (end=49): getelem
[BaselineOp] Analyzing op @ 6 (end=49): getarg
[BaselineOp] Analyzing op @ 9 (end=49): zero
[BaselineOp] Analyzing op @ 10 (end=49): getelem
[BaselineOp] Analyzing op @ 11 (end=49): add
[BaselineOp] Analyzing op @ 12 (end=49): setelem
[BaselineOp] Analyzing op @ 13 (end=49): pop
[BaselineOp] Analyzing op @ 14 (end=49): getarg
[BaselineOp] Analyzing op @ 17 (end=49): one
[BaselineOp] Analyzing op @ 18 (end=49): dup2
[BaselineOp] Analyzing op @ 19 (end=49): getelem
[BaselineOp] Analyzing op @ 20 (end=49): getarg
[BaselineOp] Analyzing op @ 23 (end=49): one
[BaselineOp] Analyzing op @ 24 (end=49): getelem
[BaselineOp] Analyzing op @ 25 (end=49): add
[BaselineOp] Analyzing op @ 26 (end=49): setelem
[BaselineOp] Analyzing op @ 27 (end=49): pop
[BaselineOp] Analyzing op @ 28 (end=49): getarg
[BaselineOp] Analyzing op @ 31 (end=49): int8
[BaselineOp] Analyzing op @ 33 (end=49): dup2
[BaselineOp] Analyzing op @ 34 (end=49): getelem
[BaselineOp] Analyzing op @ 35 (end=49): getarg
[BaselineOp] Analyzing op @ 38 (end=49): int8
[BaselineOp] Analyzing op @ 40 (end=49): getelem
[BaselineOp] Analyzing op @ 41 (end=49): add
[BaselineOp] Analyzing op @ 42 (end=49): setelem
[BaselineOp] Analyzing op @ 43 (end=49): pop
[BaselineOp] Analyzing op @ 44 (end=49): getarg
[BaselineOp] Analyzing op @ 47 (end=49): return
[BaselineOp] Analyzing op @ 48 (end=49): stop
[BaselineScripts] Baseline compiling script 3d-raytrace.js:38 (0x7f220e86e060)
[BaselineOp] Compiling op @ 0: getarg
[BaselineOp] Compiling op @ 3: zero
[BaselineOp] Compiling op @ 4: dup2
[BaselineOp] Compiling op @ 5: getelem
[BaselineOp] Compiling op @ 6: getarg
[BaselineOp] Compiling op @ 9: zero
[BaselineOp] Compiling op @ 10: getelem
[BaselineOp] Compiling op @ 11: add
[BaselineOp] Compiling op @ 12: setelem
[BaselineOp] Compiling op @ 13: pop
[BaselineOp] Compiling op @ 14: getarg
[BaselineOp] Compiling op @ 17: one
[BaselineOp] Compiling op @ 18: dup2
[BaselineOp] Compiling op @ 19: getelem
[BaselineOp] Compiling op @ 20: getarg
[BaselineOp] Compiling op @ 23: one
[BaselineOp] Compiling op @ 24: getelem
[BaselineOp] Compiling op @ 25: add
[BaselineOp] Compiling op @ 26: setelem
[BaselineOp] Compiling op @ 27: pop
[BaselineOp] Compiling op @ 28: getarg
[BaselineOp] Compiling op @ 31: int8
[BaselineOp] Compiling op @ 33: dup2
[BaselineOp] Compiling op @ 34: getelem
[BaselineOp] Compiling op @ 35: getarg
[BaselineOp] Compiling op @ 38: int8
[BaselineOp] Compiling op @ 40: getelem
[BaselineOp] Compiling op @ 41: add
[BaselineOp] Compiling op @ 42: setelem
[BaselineOp] Compiling op @ 43: pop
[BaselineOp] Compiling op @ 44: getarg
[BaselineOp] Compiling op @ 47: return
[BaselineOp] Compiling op @ 48: stop
[BaselineScripts] Created BaselineScript 0x2b205d0 (raw 0x7f22105285d8) for 3d-raytrace.js:38
[BaselineScripts] [block counter] 0 block counters were emitted for script 3d-raytrace.js:38 (0x2b205d0) (lineno: 42 column: 16)
[BaselineOp] Analyzing op @ 0 (end=42): getarg
[BaselineOp] Analyzing op @ 3 (end=42): zero
[BaselineOp] Analyzing op @ 4 (end=42): dup2
[BaselineOp] Analyzing op @ 5 (end=42): getelem
[BaselineOp] Analyzing op @ 6 (end=42): getarg
[BaselineOp] Analyzing op @ 9 (end=42): mul
[BaselineOp] Analyzing op @ 10 (end=42): setelem
[BaselineOp] Analyzing op @ 11 (end=42): pop
[BaselineOp] Analyzing op @ 12 (end=42): getarg
[BaselineOp] Analyzing op @ 15 (end=42): one
[BaselineOp] Analyzing op @ 16 (end=42): dup2
[BaselineOp] Analyzing op @ 17 (end=42): getelem
[BaselineOp] Analyzing op @ 18 (end=42): getarg
[BaselineOp] Analyzing op @ 21 (end=42): mul
[BaselineOp] Analyzing op @ 22 (end=42): setelem
[BaselineOp] Analyzing op @ 23 (end=42): pop
[BaselineOp] Analyzing op @ 24 (end=42): getarg
[BaselineOp] Analyzing op @ 27 (end=42): int8
[BaselineOp] Analyzing op @ 29 (end=42): dup2
[BaselineOp] Analyzing op @ 30 (end=42): getelem
[BaselineOp] Analyzing op @ 31 (end=42): getarg
[BaselineOp] Analyzing op @ 34 (end=42): mul
[BaselineOp] Analyzing op @ 35 (end=42): setelem
[BaselineOp] Analyzing op @ 36 (end=42): pop
[BaselineOp] Analyzing op @ 37 (end=42): getarg
[BaselineOp] Analyzing op @ 40 (end=42): return
[BaselineOp] Analyzing op @ 41 (end=42): stop
[BaselineScripts] Baseline compiling script 3d-raytrace.js:52 (0x7f220e86e448)
[BaselineOp] Compiling op @ 0: getarg
[BaselineOp] Compiling op @ 3: zero
[BaselineOp] Compiling op @ 4: dup2
[BaselineOp] Compiling op @ 5: getelem
[BaselineOp] Compiling op @ 6: getarg
[BaselineOp] Compiling op @ 9: mul
[BaselineOp] Compiling op @ 10: setelem
[BaselineOp] Compiling op @ 11: pop
[BaselineOp] Compiling op @ 12: getarg
[BaselineOp] Compiling op @ 15: one
[BaselineOp] Compiling op @ 16: dup2
[BaselineOp] Compiling op @ 17: getelem
[BaselineOp] Compiling op @ 18: getarg
[BaselineOp] Compiling op @ 21: mul
[BaselineOp] Compiling op @ 22: setelem
[BaselineOp] Compiling op @ 23: pop
[BaselineOp] Compiling op @ 24: getarg
[BaselineOp] Compiling op @ 27: int8
[BaselineOp] Compiling op @ 29: dup2
[BaselineOp] Compiling op @ 30: getelem
[BaselineOp] Compiling op @ 31: getarg
[BaselineOp] Compiling op @ 34: mul
[BaselineOp] Compiling op @ 35: setelem
[BaselineOp] Compiling op @ 36: pop
[BaselineOp] Compiling op @ 37: getarg
[BaselineOp] Compiling op @ 40: return
[BaselineOp] Compiling op @ 41: stop
[BaselineScripts] Created BaselineScript 0x2b1f010 (raw 0x7f2210528870) for 3d-raytrace.js:52
[BaselineScripts] [block counter] 0 block counters were emitted for script 3d-raytrace.js:52 (0x2b1f010) (lineno: 56 column: 16)
[BaselineOp] Analyzing op @ 0 (end=100): getgname
[BaselineOp] Analyzing op @ 5 (end=100): dup
[BaselineOp] Analyzing op @ 6 (end=100): callprop
[BaselineOp] Analyzing op @ 11 (end=100): swap
[BaselineOp] Analyzing op @ 12 (end=100): notearg
[BaselineOp] Analyzing op @ 13 (end=100): getarg
[BaselineOp] Analyzing op @ 16 (end=100): zero
[BaselineOp] Analyzing op @ 17 (end=100): getelem
[BaselineOp] Analyzing op @ 18 (end=100): getarg
[BaselineOp] Analyzing op @ 21 (end=100): zero
[BaselineOp] Analyzing op @ 22 (end=100): getelem
[BaselineOp] Analyzing op @ 23 (end=100): mul
[BaselineOp] Analyzing op @ 24 (end=100): getarg
[BaselineOp] Analyzing op @ 27 (end=100): one
[BaselineOp] Analyzing op @ 28 (end=100): getelem
[BaselineOp] Analyzing op @ 29 (end=100): getarg
[BaselineOp] Analyzing op @ 32 (end=100): one
[BaselineOp] Analyzing op @ 33 (end=100): getelem
[BaselineOp] Analyzing op @ 34 (end=100): mul
[BaselineOp] Analyzing op @ 35 (end=100): add
[BaselineOp] Analyzing op @ 36 (end=100): getarg
[BaselineOp] Analyzing op @ 39 (end=100): int8
[BaselineOp] Analyzing op @ 41 (end=100): getelem
[BaselineOp] Analyzing op @ 42 (end=100): getarg
[BaselineOp] Analyzing op @ 45 (end=100): int8
[BaselineOp] Analyzing op @ 47 (end=100): getelem
[BaselineOp] Analyzing op @ 48 (end=100): mul
[BaselineOp] Analyzing op @ 49 (end=100): add
[BaselineOp] Analyzing op @ 50 (end=100): notearg
[BaselineOp] Analyzing op @ 51 (end=100): call
[BaselineOp] Analyzing op @ 54 (end=100): setlocal
[BaselineOp] Analyzing op @ 57 (end=100): pop
[BaselineOp] Analyzing op @ 58 (end=100): getarg
[BaselineOp] Analyzing op @ 61 (end=100): zero
[BaselineOp] Analyzing op @ 62 (end=100): dup2
[BaselineOp] Analyzing op @ 63 (end=100): getelem
[BaselineOp] Analyzing op @ 64 (end=100): getlocal
[BaselineOp] Analyzing op @ 67 (end=100): div
[BaselineOp] Analyzing op @ 68 (end=100): setelem
[BaselineOp] Analyzing op @ 69 (end=100): pop
[BaselineOp] Analyzing op @ 70 (end=100): getarg
[BaselineOp] Analyzing op @ 73 (end=100): one
[BaselineOp] Analyzing op @ 74 (end=100): dup2
[BaselineOp] Analyzing op @ 75 (end=100): getelem
[BaselineOp] Analyzing op @ 76 (end=100): getlocal
[BaselineOp] Analyzing op @ 79 (end=100): div
[BaselineOp] Analyzing op @ 80 (end=100): setelem
[BaselineOp] Analyzing op @ 81 (end=100): pop
[BaselineOp] Analyzing op @ 82 (end=100): getarg
[BaselineOp] Analyzing op @ 85 (end=100): int8
[BaselineOp] Analyzing op @ 87 (end=100): dup2
[BaselineOp] Analyzing op @ 88 (end=100): getelem
[BaselineOp] Analyzing op @ 89 (end=100): getlocal
[BaselineOp] Analyzing op @ 92 (end=100): div
[BaselineOp] Analyzing op @ 93 (end=100): setelem
[BaselineOp] Analyzing op @ 94 (end=100): pop
[BaselineOp] Analyzing op @ 95 (end=100): getarg
[BaselineOp] Analyzing op @ 98 (end=100): return
[BaselineOp] Analyzing op @ 99 (end=100): stop
[BaselineScripts] Baseline compiling script 3d-raytrace.js:59 (0x7f220e8519c0)
[BaselineOp] Compiling op @ 0: getgname
[BaselineOp] Compiling op @ 5: dup
[BaselineOp] Compiling op @ 6: callprop
[BaselineOp] Compiling op @ 11: swap
[BaselineOp] Compiling op @ 12: notearg
[BaselineOp] Compiling op @ 13: getarg
[BaselineOp] Compiling op @ 16: zero
[BaselineOp] Compiling op @ 17: getelem
[BaselineOp] Compiling op @ 18: getarg
[BaselineOp] Compiling op @ 21: zero
[BaselineOp] Compiling op @ 22: getelem
[BaselineOp] Compiling op @ 23: mul
[BaselineOp] Compiling op @ 24: getarg
[BaselineOp] Compiling op @ 27: one
[BaselineOp] Compiling op @ 28: getelem
[BaselineOp] Compiling op @ 29: getarg
[BaselineOp] Compiling op @ 32: one
[BaselineOp] Compiling op @ 33: getelem
[BaselineOp] Compiling op @ 34: mul
[BaselineOp] Compiling op @ 35: add
[BaselineOp] Compiling op @ 36: getarg
[BaselineOp] Compiling op @ 39: int8
[BaselineOp] Compiling op @ 41: getelem
[BaselineOp] Compiling op @ 42: getarg
[BaselineOp] Compiling op @ 45: int8
[BaselineOp] Compiling op @ 47: getelem
[BaselineOp] Compiling op @ 48: mul
[BaselineOp] Compiling op @ 49: add
[BaselineOp] Compiling op @ 50: notearg
[BaselineOp] Compiling op @ 51: call
[BaselineOp] Compiling op @ 54: setlocal
[BaselineOp] Compiling op @ 57: pop
[BaselineOp] Compiling op @ 58: getarg
[BaselineOp] Compiling op @ 61: zero
[BaselineOp] Compiling op @ 62: dup2
[BaselineOp] Compiling op @ 63: getelem
[BaselineOp] Compiling op @ 64: getlocal
[BaselineOp] Compiling op @ 67: div
[BaselineOp] Compiling op @ 68: setelem
[BaselineOp] Compiling op @ 69: pop
[BaselineOp] Compiling op @ 70: getarg
[BaselineOp] Compiling op @ 73: one
[BaselineOp] Compiling op @ 74: dup2
[BaselineOp] Compiling op @ 75: getelem
[BaselineOp] Compiling op @ 76: getlocal
[BaselineOp] Compiling op @ 79: div
[BaselineOp] Compiling op @ 80: setelem
[BaselineOp] Compiling op @ 81: pop
[BaselineOp] Compiling op @ 82: getarg
[BaselineOp] Compiling op @ 85: int8
[BaselineOp] Compiling op @ 87: dup2
[BaselineOp] Compiling op @ 88: getelem
[BaselineOp] Compiling op @ 89: getlocal
[BaselineOp] Compiling op @ 92: div
[BaselineOp] Compiling op @ 93: setelem
[BaselineOp] Compiling op @ 94: pop
[BaselineOp] Compiling op @ 95: getarg
[BaselineOp] Compiling op @ 98: return
[BaselineOp] Compiling op @ 99: stop
[BaselineScripts] Created BaselineScript 0x2b21c50 (raw 0x7f2210528aa8) for 3d-raytrace.js:59
[BaselineScripts] [block counter] 0 block counters were emitted for script 3d-raytrace.js:59 (0x2b21c50) (lineno: 64 column: 16)
[BaselineOp] Analyzing op @ 0 (end=302): getarg
[BaselineOp] Analyzing op @ 3 (end=302): setlocal
[BaselineOp] Analyzing op @ 6 (end=302): pop
[BaselineOp] Analyzing op @ 7 (end=302): goto
[BaselineOp] Analyzing op @ 12 (end=302): loophead
[BaselineOp] Analyzing op @ 13 (end=302): getarg
[BaselineOp] Analyzing op @ 16 (end=302): dup
[BaselineOp] Analyzing op @ 17 (end=302): callprop
[BaselineOp] Analyzing op @ 22 (end=302): swap
[BaselineOp] Analyzing op @ 23 (end=302): notearg
[BaselineOp] Analyzing op @ 24 (end=302): getlocal
[BaselineOp] Analyzing op @ 27 (end=302): getarg
[BaselineOp] Analyzing op @ 30 (end=302): div
[BaselineOp] Analyzing op @ 31 (end=302): notearg
[BaselineOp] Analyzing op @ 32 (end=302): call
[BaselineOp] Analyzing op @ 35 (end=302): setlocal
[BaselineOp] Analyzing op @ 38 (end=302): pop
[BaselineOp] Analyzing op @ 39 (end=302): zero
[BaselineOp] Analyzing op @ 40 (end=302): setlocal
[BaselineOp] Analyzing op @ 43 (end=302): pop
[BaselineOp] Analyzing op @ 44 (end=302): goto
[BaselineOp] Analyzing op @ 49 (end=302): loophead
[BaselineOp] Analyzing op @ 50 (end=302): getlocal
[BaselineOp] Analyzing op @ 53 (end=302): getarg
[BaselineOp] Analyzing op @ 56 (end=302): div
[BaselineOp] Analyzing op @ 57 (end=302): setlocal
[BaselineOp] Analyzing op @ 60 (end=302): pop
[BaselineOp] Analyzing op @ 61 (end=302): callgname
[BaselineOp] Analyzing op @ 66 (end=302): undefined
[BaselineOp] Analyzing op @ 67 (end=302): notearg
[BaselineOp] Analyzing op @ 68 (end=302): callgname
[BaselineOp] Analyzing op @ 73 (end=302): undefined
[BaselineOp] Analyzing op @ 74 (end=302): notearg
[BaselineOp] Analyzing op @ 75 (end=302): getlocal
[BaselineOp] Analyzing op @ 78 (end=302): zero
[BaselineOp] Analyzing op @ 79 (end=302): getelem
[BaselineOp] Analyzing op @ 80 (end=302): getprop
[BaselineOp] Analyzing op @ 85 (end=302): notearg
[BaselineOp] Analyzing op @ 86 (end=302): getlocal
[BaselineOp] Analyzing op @ 89 (end=302): notearg
[BaselineOp] Analyzing op @ 90 (end=302): call
[BaselineOp] Analyzing op @ 93 (end=302): notearg
[BaselineOp] Analyzing op @ 94 (end=302): callgname
[BaselineOp] Analyzing op @ 99 (end=302): undefined
[BaselineOp] Analyzing op @ 100 (end=302): notearg
[BaselineOp] Analyzing op @ 101 (end=302): getlocal
[BaselineOp] Analyzing op @ 104 (end=302): one
[BaselineOp] Analyzing op @ 105 (end=302): getelem
[BaselineOp] Analyzing op @ 106 (end=302): getprop
[BaselineOp] Analyzing op @ 111 (end=302): notearg
[BaselineOp] Analyzing op @ 112 (end=302): one
[BaselineOp] Analyzing op @ 113 (end=302): getlocal
[BaselineOp] Analyzing op @ 116 (end=302): sub
[BaselineOp] Analyzing op @ 117 (end=302): notearg
[BaselineOp] Analyzing op @ 118 (end=302): call
[BaselineOp] Analyzing op @ 121 (end=302): notearg
[BaselineOp] Analyzing op @ 122 (end=302): call
[BaselineOp] Analyzing op @ 125 (end=302): setlocal
[BaselineOp] Analyzing op @ 128 (end=302): pop
[BaselineOp] Analyzing op @ 129 (end=302): callgname
[BaselineOp] Analyzing op @ 134 (end=302): undefined
[BaselineOp] Analyzing op @ 135 (end=302): notearg
[BaselineOp] Analyzing op @ 136 (end=302): callgname
[BaselineOp] Analyzing op @ 141 (end=302): undefined
[BaselineOp] Analyzing op @ 142 (end=302): notearg
[BaselineOp] Analyzing op @ 143 (end=302): callgname
[BaselineOp] Analyzing op @ 148 (end=302): undefined
[BaselineOp] Analyzing op @ 149 (end=302): notearg
[BaselineOp] Analyzing op @ 150 (end=302): getlocal
[BaselineOp] Analyzing op @ 153 (end=302): zero
[BaselineOp] Analyzing op @ 154 (end=302): getelem
[BaselineOp] Analyzing op @ 155 (end=302): getprop
[BaselineOp] Analyzing op @ 160 (end=302): notearg
[BaselineOp] Analyzing op @ 161 (end=302): getlocal
[BaselineOp] Analyzing op @ 164 (end=302): notearg
[BaselineOp] Analyzing op @ 165 (end=302): call
[BaselineOp] Analyzing op @ 168 (end=302): notearg
[BaselineOp] Analyzing op @ 169 (end=302): callgname
[BaselineOp] Analyzing op @ 174 (end=302): undefined
[BaselineOp] Analyzing op @ 175 (end=302): notearg
[BaselineOp] Analyzing op @ 176 (end=302): getlocal
[BaselineOp] Analyzing op @ 179 (end=302): one
[BaselineOp] Analyzing op @ 180 (end=302): getelem
[BaselineOp] Analyzing op @ 181 (end=302): getprop
[BaselineOp] Analyzing op @ 186 (end=302): notearg
[BaselineOp] Analyzing op @ 187 (end=302): one
[BaselineOp] Analyzing op @ 188 (end=302): getlocal
[BaselineOp] Analyzing op @ 191 (end=302): sub
[BaselineOp] Analyzing op @ 192 (end=302): notearg
[BaselineOp] Analyzing op @ 193 (end=302): call
[BaselineOp] Analyzing op @ 196 (end=302): notearg
[BaselineOp] Analyzing op @ 197 (end=302): call
[BaselineOp] Analyzing op @ 200 (end=302): notearg
[BaselineOp] Analyzing op @ 201 (end=302): call
[BaselineOp] Analyzing op @ 204 (end=302): setlocal
[BaselineOp] Analyzing op @ 207 (end=302): pop
[BaselineOp] Analyzing op @ 208 (end=302): getarg
[BaselineOp] Analyzing op @ 211 (end=302): dup
[BaselineOp] Analyzing op @ 212 (end=302): callprop
[BaselineOp] Analyzing op @ 217 (end=302): swap
[BaselineOp] Analyzing op @ 218 (end=302): notearg
[BaselineOp] Analyzing op @ 219 (end=302): getlocal
[BaselineOp] Analyzing op @ 222 (end=302): notearg
[BaselineOp] Analyzing op @ 223 (end=302): getlocal
[BaselineOp] Analyzing op @ 226 (end=302): notearg
[BaselineOp] Analyzing op @ 227 (end=302): call
[BaselineOp] Analyzing op @ 230 (end=302): setlocal
[BaselineOp] Analyzing op @ 233 (end=302): pop
[BaselineOp] Analyzing op @ 234 (end=302): getarg
[BaselineOp] Analyzing op @ 237 (end=302): getlocal
[BaselineOp] Analyzing op @ 240 (end=302): getelem
[BaselineOp] Analyzing op @ 241 (end=302): getlocal
[BaselineOp] Analyzing op @ 244 (end=302): getlocal
[BaselineOp] Analyzing op @ 247 (end=302): setelem
[BaselineOp] Analyzing op @ 248 (end=302): pop
[BaselineOp] Analyzing op @ 249 (end=302): getlocal
[BaselineOp] Analyzing op @ 252 (end=302): pos
[BaselineOp] Analyzing op @ 253 (end=302): dup
[BaselineOp] Analyzing op @ 254 (end=302): one
[BaselineOp] Analyzing op @ 255 (end=302): add
[BaselineOp] Analyzing op @ 256 (end=302): setlocal
[BaselineOp] Analyzing op @ 259 (end=302): pop
[BaselineOp] Analyzing op @ 260 (end=302): pop
[BaselineOp] Analyzing op @ 261 (end=302): loopentry
[BaselineOp] Analyzing op @ 263 (end=302): getlocal
[BaselineOp] Analyzing op @ 266 (end=302): getarg
[BaselineOp] Analyzing op @ 269 (end=302): lt
[BaselineOp] Analyzing op @ 270 (end=302): ifne
[BaselineOp] Analyzing op @ 275 (end=302): getlocal
[BaselineOp] Analyzing op @ 278 (end=302): pos
[BaselineOp] Analyzing op @ 279 (end=302): dup
[BaselineOp] Analyzing op @ 280 (end=302): one
[BaselineOp] Analyzing op @ 281 (end=302): add
[BaselineOp] Analyzing op @ 282 (end=302): setlocal
[BaselineOp] Analyzing op @ 285 (end=302): pop
[BaselineOp] Analyzing op @ 286 (end=302): pop
[BaselineOp] Analyzing op @ 287 (end=302): loopentry
[BaselineOp] Analyzing op @ 289 (end=302): getlocal
[BaselineOp] Analyzing op @ 292 (end=302): getarg
[BaselineOp] Analyzing op @ 295 (end=302): lt
[BaselineOp] Analyzing op @ 296 (end=302): ifne
[BaselineOp] Analyzing op @ 13 (end=302): getarg
[BaselineOp] Analyzing op @ 16 (end=302): dup
[BaselineOp] Analyzing op @ 17 (end=302): callprop
[BaselineOp] Analyzing op @ 22 (end=302): swap
[BaselineOp] Analyzing op @ 23 (end=302): notearg
[BaselineOp] Analyzing op @ 24 (end=302): getlocal
[BaselineOp] Analyzing op @ 27 (end=302): getarg
[BaselineOp] Analyzing op @ 30 (end=302): div
[BaselineOp] Analyzing op @ 31 (end=302): notearg
[BaselineOp] Analyzing op @ 32 (end=302): call
[BaselineOp] Analyzing op @ 35 (end=302): setlocal
[BaselineOp] Analyzing op @ 38 (end=302): pop
[BaselineOp] Analyzing op @ 39 (end=302): zero
[BaselineOp] Analyzing op @ 40 (end=302): setlocal
[BaselineOp] Analyzing op @ 43 (end=302): pop
[BaselineOp] Analyzing op @ 44 (end=302): goto
[BaselineOp] Analyzing op @ 49 (end=302): loophead
[BaselineOp] Analyzing op @ 50 (end=302): getlocal
[BaselineOp] Analyzing op @ 53 (end=302): getarg
[BaselineOp] Analyzing op @ 56 (end=302): div
[BaselineOp] Analyzing op @ 57 (end=302): setlocal
[BaselineOp] Analyzing op @ 60 (end=302): pop
[BaselineOp] Analyzing op @ 61 (end=302): callgname
[BaselineOp] Analyzing op @ 66 (end=302): undefined
[BaselineOp] Analyzing op @ 67 (end=302): notearg
[BaselineOp] Analyzing op @ 68 (end=302): callgname
[BaselineOp] Analyzing op @ 73 (end=302): undefined
[BaselineOp] Analyzing op @ 74 (end=302): notearg
[BaselineOp] Analyzing op @ 75 (end=302): getlocal
[BaselineOp] Analyzing op @ 78 (end=302): zero
[BaselineOp] Analyzing op @ 79 (end=302): getelem
[BaselineOp] Analyzing op @ 80 (end=302): getprop
[BaselineOp] Analyzing op @ 85 (end=302): notearg
[BaselineOp] Analyzing op @ 86 (end=302): getlocal
[BaselineOp] Analyzing op @ 89 (end=302): notearg
[BaselineOp] Analyzing op @ 90 (end=302): call
[BaselineOp] Analyzing op @ 93 (end=302): notearg
[BaselineOp] Analyzing op @ 94 (end=302): callgname
[BaselineOp] Analyzing op @ 99 (end=302): undefined
[BaselineOp] Analyzing op @ 100 (end=302): notearg
[BaselineOp] Analyzing op @ 101 (end=302): getlocal
[BaselineOp] Analyzing op @ 104 (end=302): one
[BaselineOp] Analyzing op @ 105 (end=302): getelem
[BaselineOp] Analyzing op @ 106 (end=302): getprop
[BaselineOp] Analyzing op @ 111 (end=302): notearg
[BaselineOp] Analyzing op @ 112 (end=302): one
[BaselineOp] Analyzing op @ 113 (end=302): getlocal
[BaselineOp] Analyzing op @ 116 (end=302): sub
[BaselineOp] Analyzing op @ 117 (end=302): notearg
[BaselineOp] Analyzing op @ 118 (end=302): call
[BaselineOp] Analyzing op @ 121 (end=302): notearg
[BaselineOp] Analyzing op @ 122 (end=302): call
[BaselineOp] Analyzing op @ 125 (end=302): setlocal
[BaselineOp] Analyzing op @ 128 (end=302): pop
[BaselineOp] Analyzing op @ 129 (end=302): callgname
[BaselineOp] Analyzing op @ 134 (end=302): undefined
[BaselineOp] Analyzing op @ 135 (end=302): notearg
[BaselineOp] Analyzing op @ 136 (end=302): callgname
[BaselineOp] Analyzing op @ 141 (end=302): undefined
[BaselineOp] Analyzing op @ 142 (end=302): notearg
[BaselineOp] Analyzing op @ 143 (end=302): callgname
[BaselineOp] Analyzing op @ 148 (end=302): undefined
[BaselineOp] Analyzing op @ 149 (end=302): notearg
[BaselineOp] Analyzing op @ 150 (end=302): getlocal
[BaselineOp] Analyzing op @ 153 (end=302): zero
[BaselineOp] Analyzing op @ 154 (end=302): getelem
[BaselineOp] Analyzing op @ 155 (end=302): getprop
[BaselineOp] Analyzing op @ 160 (end=302): notearg
[BaselineOp] Analyzing op @ 161 (end=302): getlocal
[BaselineOp] Analyzing op @ 164 (end=302): notearg
[BaselineOp] Analyzing op @ 165 (end=302): call
[BaselineOp] Analyzing op @ 168 (end=302): notearg
[BaselineOp] Analyzing op @ 169 (end=302): callgname
[BaselineOp] Analyzing op @ 174 (end=302): undefined
[BaselineOp] Analyzing op @ 175 (end=302): notearg
[BaselineOp] Analyzing op @ 176 (end=302): getlocal
[BaselineOp] Analyzing op @ 179 (end=302): one
[BaselineOp] Analyzing op @ 180 (end=302): getelem
[BaselineOp] Analyzing op @ 181 (end=302): getprop
[BaselineOp] Analyzing op @ 186 (end=302): notearg
[BaselineOp] Analyzing op @ 187 (end=302): one
[BaselineOp] Analyzing op @ 188 (end=302): getlocal
[BaselineOp] Analyzing op @ 191 (end=302): sub
[BaselineOp] Analyzing op @ 192 (end=302): notearg
[BaselineOp] Analyzing op @ 193 (end=302): call
[BaselineOp] Analyzing op @ 196 (end=302): notearg
[BaselineOp] Analyzing op @ 197 (end=302): call
[BaselineOp] Analyzing op @ 200 (end=302): notearg
[BaselineOp] Analyzing op @ 201 (end=302): call
[BaselineOp] Analyzing op @ 204 (end=302): setlocal
[BaselineOp] Analyzing op @ 207 (end=302): pop
[BaselineOp] Analyzing op @ 208 (end=302): getarg
[BaselineOp] Analyzing op @ 211 (end=302): dup
[BaselineOp] Analyzing op @ 212 (end=302): callprop
[BaselineOp] Analyzing op @ 217 (end=302): swap
[BaselineOp] Analyzing op @ 218 (end=302): notearg
[BaselineOp] Analyzing op @ 219 (end=302): getlocal
[BaselineOp] Analyzing op @ 222 (end=302): notearg
[BaselineOp] Analyzing op @ 223 (end=302): getlocal
[BaselineOp] Analyzing op @ 226 (end=302): notearg
[BaselineOp] Analyzing op @ 227 (end=302): call
[BaselineOp] Analyzing op @ 230 (end=302): setlocal
[BaselineOp] Analyzing op @ 233 (end=302): pop
[BaselineOp] Analyzing op @ 234 (end=302): getarg
[BaselineOp] Analyzing op @ 237 (end=302): getlocal
[BaselineOp] Analyzing op @ 240 (end=302): getelem
[BaselineOp] Analyzing op @ 241 (end=302): getlocal
[BaselineOp] Analyzing op @ 244 (end=302): getlocal
[BaselineOp] Analyzing op @ 247 (end=302): setelem
[BaselineOp] Analyzing op @ 248 (end=302): pop
[BaselineOp] Analyzing op @ 249 (end=302): getlocal
[BaselineOp] Analyzing op @ 252 (end=302): pos
[BaselineOp] Analyzing op @ 253 (end=302): dup
[BaselineOp] Analyzing op @ 254 (end=302): one
[BaselineOp] Analyzing op @ 255 (end=302): add
[BaselineOp] Analyzing op @ 256 (end=302): setlocal
[BaselineOp] Analyzing op @ 259 (end=302): pop
[BaselineOp] Analyzing op @ 260 (end=302): pop
[BaselineOp] Analyzing op @ 261 (end=302): loopentry
[BaselineOp] Analyzing op @ 263 (end=302): getlocal
[BaselineOp] Analyzing op @ 266 (end=302): getarg
[BaselineOp] Analyzing op @ 269 (end=302): lt
[BaselineOp] Analyzing op @ 270 (end=302): ifne
[BaselineOp] Analyzing op @ 50 (end=302): getlocal
[BaselineOp] Analyzing op @ 53 (end=302): getarg
[BaselineOp] Analyzing op @ 56 (end=302): div
[BaselineOp] Analyzing op @ 57 (end=302): setlocal
[BaselineOp] Analyzing op @ 60 (end=302): pop
[BaselineOp] Analyzing op @ 61 (end=302): callgname
[BaselineOp] Analyzing op @ 66 (end=302): undefined
[BaselineOp] Analyzing op @ 67 (end=302): notearg
[BaselineOp] Analyzing op @ 68 (end=302): callgname
[BaselineOp] Analyzing op @ 73 (end=302): undefined
[BaselineOp] Analyzing op @ 74 (end=302): notearg
[BaselineOp] Analyzing op @ 75 (end=302): getlocal
[BaselineOp] Analyzing op @ 78 (end=302): zero
[BaselineOp] Analyzing op @ 79 (end=302): getelem
[BaselineOp] Analyzing op @ 80 (end=302): getprop
[BaselineOp] Analyzing op @ 85 (end=302): notearg
[BaselineOp] Analyzing op @ 86 (end=302): getlocal
[BaselineOp] Analyzing op @ 89 (end=302): notearg
[BaselineOp] Analyzing op @ 90 (end=302): call
[BaselineOp] Analyzing op @ 93 (end=302): notearg
[BaselineOp] Analyzing op @ 94 (end=302): callgname
[BaselineOp] Analyzing op @ 99 (end=302): undefined
[BaselineOp] Analyzing op @ 100 (end=302): notearg
[BaselineOp] Analyzing op @ 101 (end=302): getlocal
[BaselineOp] Analyzing op @ 104 (end=302): one
[BaselineOp] Analyzing op @ 105 (end=302): getelem
[BaselineOp] Analyzing op @ 106 (end=302): getprop
[BaselineOp] Analyzing op @ 111 (end=302): notearg
[BaselineOp] Analyzing op @ 112 (end=302): one
[BaselineOp] Analyzing op @ 113 (end=302): getlocal
[BaselineOp] Analyzing op @ 116 (end=302): sub
[BaselineOp] Analyzing op @ 117 (end=302): notearg
[BaselineOp] Analyzing op @ 118 (end=302): call
[BaselineOp] Analyzing op @ 121 (end=302): notearg
[BaselineOp] Analyzing op @ 122 (end=302): call
[BaselineOp] Analyzing op @ 125 (end=302): setlocal
[BaselineOp] Analyzing op @ 128 (end=302): pop
[BaselineOp] Analyzing op @ 129 (end=302): callgname
[BaselineOp] Analyzing op @ 134 (end=302): undefined
[BaselineOp] Analyzing op @ 135 (end=302): notearg
[BaselineOp] Analyzing op @ 136 (end=302): callgname
[BaselineOp] Analyzing op @ 141 (end=302): undefined
[BaselineOp] Analyzing op @ 142 (end=302): notearg
[BaselineOp] Analyzing op @ 143 (end=302): callgname
[BaselineOp] Analyzing op @ 148 (end=302): undefined
[BaselineOp] Analyzing op @ 149 (end=302): notearg
[BaselineOp] Analyzing op @ 150 (end=302): getlocal
[BaselineOp] Analyzing op @ 153 (end=302): zero
[BaselineOp] Analyzing op @ 154 (end=302): getelem
[BaselineOp] Analyzing op @ 155 (end=302): getprop
[BaselineOp] Analyzing op @ 160 (end=302): notearg
[BaselineOp] Analyzing op @ 161 (end=302): getlocal
[BaselineOp] Analyzing op @ 164 (end=302): notearg
[BaselineOp] Analyzing op @ 165 (end=302): call
[BaselineOp] Analyzing op @ 168 (end=302): notearg
[BaselineOp] Analyzing op @ 169 (end=302): callgname
[BaselineOp] Analyzing op @ 174 (end=302): undefined
[BaselineOp] Analyzing op @ 175 (end=302): notearg
[BaselineOp] Analyzing op @ 176 (end=302): getlocal
[BaselineOp] Analyzing op @ 179 (end=302): one
[BaselineOp] Analyzing op @ 180 (end=302): getelem
[BaselineOp] Analyzing op @ 181 (end=302): getprop
[BaselineOp] Analyzing op @ 186 (end=302): notearg
[BaselineOp] Analyzing op @ 187 (end=302): one
[BaselineOp] Analyzing op @ 188 (end=302): getlocal
[BaselineOp] Analyzing op @ 191 (end=302): sub
[BaselineOp] Analyzing op @ 192 (end=302): notearg
[BaselineOp] Analyzing op @ 193 (end=302): call
[BaselineOp] Analyzing op @ 196 (end=302): notearg
[BaselineOp] Analyzing op @ 197 (end=302): call
[BaselineOp] Analyzing op @ 200 (end=302): notearg
[BaselineOp] Analyzing op @ 201 (end=302): call
[BaselineOp] Analyzing op @ 204 (end=302): setlocal
[BaselineOp] Analyzing op @ 207 (end=302): pop
[BaselineOp] Analyzing op @ 208 (end=302): getarg
[BaselineOp] Analyzing op @ 211 (end=302): dup
[BaselineOp] Analyzing op @ 212 (end=302): callprop
[BaselineOp] Analyzing op @ 217 (end=302): swap
[BaselineOp] Analyzing op @ 218 (end=302): notearg
[BaselineOp] Analyzing op @ 219 (end=302): getlocal
[BaselineOp] Analyzing op @ 222 (end=302): notearg
[BaselineOp] Analyzing op @ 223 (end=302): getlocal
[BaselineOp] Analyzing op @ 226 (end=302): notearg
[BaselineOp] Analyzing op @ 227 (end=302): call
[BaselineOp] Analyzing op @ 230 (end=302): setlocal
[BaselineOp] Analyzing op @ 233 (end=302): pop
[BaselineOp] Analyzing op @ 234 (end=302): getarg
[BaselineOp] Analyzing op @ 237 (end=302): getlocal
[BaselineOp] Analyzing op @ 240 (end=302): getelem
[BaselineOp] Analyzing op @ 241 (end=302): getlocal
[BaselineOp] Analyzing op @ 244 (end=302): getlocal
[BaselineOp] Analyzing op @ 247 (end=302): setelem
[BaselineOp] Analyzing op @ 248 (end=302): pop
[BaselineOp] Analyzing op @ 249 (end=302): getlocal
[BaselineOp] Analyzing op @ 252 (end=302): pos
[BaselineOp] Analyzing op @ 253 (end=302): dup
[BaselineOp] Analyzing op @ 254 (end=302): one
[BaselineOp] Analyzing op @ 255 (end=302): add
[BaselineOp] Analyzing op @ 256 (end=302): setlocal
[BaselineOp] Analyzing op @ 259 (end=302): pop
[BaselineOp] Analyzing op @ 260 (end=302): pop
[BaselineOp] Analyzing op @ 261 (end=302): loopentry
[BaselineOp] Analyzing op @ 263 (end=302): getlocal
[BaselineOp] Analyzing op @ 266 (end=302): getarg
[BaselineOp] Analyzing op @ 269 (end=302): lt
[BaselineOp] Analyzing op @ 270 (end=302): ifne
[BaselineOp] Analyzing op @ 275 (end=302): getlocal
[BaselineOp] Analyzing op @ 278 (end=302): pos
[BaselineOp] Analyzing op @ 279 (end=302): dup
[BaselineOp] Analyzing op @ 280 (end=302): one
[BaselineOp] Analyzing op @ 281 (end=302): add
[BaselineOp] Analyzing op @ 282 (end=302): setlocal
[BaselineOp] Analyzing op @ 285 (end=302): pop
[BaselineOp] Analyzing op @ 286 (end=302): pop
[BaselineOp] Analyzing op @ 287 (end=302): loopentry
[BaselineOp] Analyzing op @ 289 (end=302): getlocal
[BaselineOp] Analyzing op @ 292 (end=302): getarg
[BaselineOp] Analyzing op @ 295 (end=302): lt
[BaselineOp] Analyzing op @ 296 (end=302): ifne
[BaselineOp] Analyzing op @ 301 (end=302): stop
[BaselineScripts] Baseline compiling script 3d-raytrace.js:292 (0x7f220e851da8)
[BaselineOp] Compiling op @ 0: getarg
[BaselineOp] Compiling op @ 3: setlocal
[BaselineOp] Compiling op @ 6: pop
[BaselineOp] Compiling op @ 7: goto
[BaselineOp] Compiling op @ 12: loophead
[BaselineOp] [block counter] Emitting a block counter for op @ 12: loophead (lineno: 294 column: 0)
[BaselineOp] Compiling op @ 13: getarg
[BaselineOp] [block counter] Emitting a block counter for op @ 13: getarg (lineno: 294 column: 0)
[BaselineOp] Compiling op @ 16: dup
[BaselineOp] Compiling op @ 17: callprop
[BaselineOp] Compiling op @ 22: swap
[BaselineOp] Compiling op @ 23: notearg
[BaselineOp] Compiling op @ 24: getlocal
[BaselineOp] Compiling op @ 27: getarg
[BaselineOp] Compiling op @ 30: div
[BaselineOp] Compiling op @ 31: notearg
[BaselineOp] Compiling op @ 32: call
[BaselineOp] Compiling op @ 35: setlocal
[BaselineOp] Compiling op @ 38: pop
[BaselineOp] Compiling op @ 39: zero
[BaselineOp] Compiling op @ 40: setlocal
[BaselineOp] Compiling op @ 43: pop
[BaselineOp] Compiling op @ 44: goto
[BaselineOp] Compiling op @ 49: loophead
[BaselineOp] [block counter] Emitting a block counter for op @ 49: loophead (lineno: 296 column: 0)
[BaselineOp] Compiling op @ 50: getlocal
[BaselineOp] [block counter] Emitting a block counter for op @ 50: getlocal (lineno: 296 column: 0)
[BaselineOp] Compiling op @ 53: getarg
[BaselineOp] Compiling op @ 56: div
[BaselineOp] Compiling op @ 57: setlocal
[BaselineOp] Compiling op @ 60: pop
[BaselineOp] Compiling op @ 61: callgname
[BaselineOp] Compiling op @ 66: undefined
[BaselineOp] Compiling op @ 67: notearg
[BaselineOp] Compiling op @ 68: callgname
[BaselineOp] Compiling op @ 73: undefined
[BaselineOp] Compiling op @ 74: notearg
[BaselineOp] Compiling op @ 75: getlocal
[BaselineOp] Compiling op @ 78: zero
[BaselineOp] Compiling op @ 79: getelem
[BaselineOp] Compiling op @ 80: getprop
[BaselineOp] Compiling op @ 85: notearg
[BaselineOp] Compiling op @ 86: getlocal
[BaselineOp] Compiling op @ 89: notearg
[BaselineOp] Compiling op @ 90: call
[BaselineOp] Compiling op @ 93: notearg
[BaselineOp] Compiling op @ 94: callgname
[BaselineOp] Compiling op @ 99: undefined
[BaselineOp] Compiling op @ 100: notearg
[BaselineOp] Compiling op @ 101: getlocal
[BaselineOp] Compiling op @ 104: one
[BaselineOp] Compiling op @ 105: getelem
[BaselineOp] Compiling op @ 106: getprop
[BaselineOp] Compiling op @ 111: notearg
[BaselineOp] Compiling op @ 112: one
[BaselineOp] Compiling op @ 113: getlocal
[BaselineOp] Compiling op @ 116: sub
[BaselineOp] Compiling op @ 117: notearg
[BaselineOp] Compiling op @ 118: call
[BaselineOp] Compiling op @ 121: notearg
[BaselineOp] Compiling op @ 122: call
[BaselineOp] Compiling op @ 125: setlocal
[BaselineOp] Compiling op @ 128: pop
[BaselineOp] Compiling op @ 129: callgname
[BaselineOp] Compiling op @ 134: undefined
[BaselineOp] Compiling op @ 135: notearg
[BaselineOp] Compiling op @ 136: callgname
[BaselineOp] Compiling op @ 141: undefined
[BaselineOp] Compiling op @ 142: notearg
[BaselineOp] Compiling op @ 143: callgname
[BaselineOp] Compiling op @ 148: undefined
[BaselineOp] Compiling op @ 149: notearg
[BaselineOp] Compiling op @ 150: getlocal
[BaselineOp] Compiling op @ 153: zero
[BaselineOp] Compiling op @ 154: getelem
[BaselineOp] Compiling op @ 155: getprop
[BaselineOp] Compiling op @ 160: notearg
[BaselineOp] Compiling op @ 161: getlocal
[BaselineOp] Compiling op @ 164: notearg
[BaselineOp] Compiling op @ 165: call
[BaselineOp] Compiling op @ 168: notearg
[BaselineOp] Compiling op @ 169: callgname
[BaselineOp] Compiling op @ 174: undefined
[BaselineOp] Compiling op @ 175: notearg
[BaselineOp] Compiling op @ 176: getlocal
[BaselineOp] Compiling op @ 179: one
[BaselineOp] Compiling op @ 180: getelem
[BaselineOp] Compiling op @ 181: getprop
[BaselineOp] Compiling op @ 186: notearg
[BaselineOp] Compiling op @ 187: one
[BaselineOp] Compiling op @ 188: getlocal
[BaselineOp] Compiling op @ 191: sub
[BaselineOp] Compiling op @ 192: notearg
[BaselineOp] Compiling op @ 193: call
[BaselineOp] Compiling op @ 196: notearg
[BaselineOp] Compiling op @ 197: call
[BaselineOp] Compiling op @ 200: notearg
[BaselineOp] Compiling op @ 201: call
[BaselineOp] Compiling op @ 204: setlocal
[BaselineOp] Compiling op @ 207: pop
[BaselineOp] Compiling op @ 208: getarg
[BaselineOp] Compiling op @ 211: dup
[BaselineOp] Compiling op @ 212: callprop
[BaselineOp] Compiling op @ 217: swap
[BaselineOp] Compiling op @ 218: notearg
[BaselineOp] Compiling op @ 219: getlocal
[BaselineOp] Compiling op @ 222: notearg
[BaselineOp] Compiling op @ 223: getlocal
[BaselineOp] Compiling op @ 226: notearg
[BaselineOp] Compiling op @ 227: call
[BaselineOp] Compiling op @ 230: setlocal
[BaselineOp] Compiling op @ 233: pop
[BaselineOp] Compiling op @ 234: getarg
[BaselineOp] Compiling op @ 237: getlocal
[BaselineOp] Compiling op @ 240: getelem
[BaselineOp] Compiling op @ 241: getlocal
[BaselineOp] Compiling op @ 244: getlocal
[BaselineOp] Compiling op @ 247: setelem
[BaselineOp] Compiling op @ 248: pop
[BaselineOp] Compiling op @ 249: getlocal
[BaselineOp] Compiling op @ 252: pos
[BaselineOp] Compiling op @ 253: dup
[BaselineOp] Compiling op @ 254: one
[BaselineOp] Compiling op @ 255: add
[BaselineOp] Compiling op @ 256: setlocal
[BaselineOp] Compiling op @ 259: pop
[BaselineOp] Compiling op @ 260: pop
[BaselineOp] Compiling op @ 261: loopentry
[BaselineOp] [block counter] Emitting a block counter for op @ 261: loopentry (lineno: 295 column: 24)
[BaselineOp] Compiling op @ 263: getlocal
[BaselineOp] Compiling op @ 266: getarg
[BaselineOp] Compiling op @ 269: lt
[BaselineOp] Compiling op @ 270: ifne
[BaselineOp] Compiling op @ 275: getlocal
[BaselineOp] [block counter] Emitting a block counter for op @ 275: getlocal (lineno: 293 column: 36)
[BaselineOp] Compiling op @ 278: pos
[BaselineOp] Compiling op @ 279: dup
[BaselineOp] Compiling op @ 280: one
[BaselineOp] Compiling op @ 281: add
[BaselineOp] Compiling op @ 282: setlocal
[BaselineOp] Compiling op @ 285: pop
[BaselineOp] Compiling op @ 286: pop
[BaselineOp] Compiling op @ 287: loopentry
[BaselineOp] [block counter] Emitting a block counter for op @ 287: loopentry (lineno: 293 column: 25)
[BaselineOp] Compiling op @ 289: getlocal
[BaselineOp] Compiling op @ 292: getarg
[BaselineOp] Compiling op @ 295: lt
[BaselineOp] Compiling op @ 296: ifne
[BaselineOp] Compiling op @ 301: stop
[BaselineOp] [block counter] Emitting a block counter for op @ 301: stop (lineno: 300 column: 29)
[BaselineScripts] Created BaselineScript 0x2b14530 (raw 0x7f2210528e68) for 3d-raytrace.js:292
[BaselineScripts] [block counter] 8 block counters were emitted for script 3d-raytrace.js:292 (0x2b14530) (lineno: 300 column: 29)
[BaselineOp] Analyzing op @ 0 (end=50): getgname
[BaselineOp] Analyzing op @ 5 (end=50): undefined
[BaselineOp] Analyzing op @ 6 (end=50): notearg
[BaselineOp] Analyzing op @ 7 (end=50): getarg
[BaselineOp] Analyzing op @ 10 (end=50): zero
[BaselineOp] Analyzing op @ 11 (end=50): getelem
[BaselineOp] Analyzing op @ 12 (end=50): getarg
[BaselineOp] Analyzing op @ 15 (end=50): zero
[BaselineOp] Analyzing op @ 16 (end=50): getelem
[BaselineOp] Analyzing op @ 17 (end=50): add
[BaselineOp] Analyzing op @ 18 (end=50): notearg
[BaselineOp] Analyzing op @ 19 (end=50): getarg
[BaselineOp] Analyzing op @ 22 (end=50): one
[BaselineOp] Analyzing op @ 23 (end=50): getelem
[BaselineOp] Analyzing op @ 24 (end=50): getarg
[BaselineOp] Analyzing op @ 27 (end=50): one
[BaselineOp] Analyzing op @ 28 (end=50): getelem
[BaselineOp] Analyzing op @ 29 (end=50): add
[BaselineOp] Analyzing op @ 30 (end=50): notearg
[BaselineOp] Analyzing op @ 31 (end=50): getarg
[BaselineOp] Analyzing op @ 34 (end=50): int8
[BaselineOp] Analyzing op @ 36 (end=50): getelem
[BaselineOp] Analyzing op @ 37 (end=50): getarg
[BaselineOp] Analyzing op @ 40 (end=50): int8
[BaselineOp] Analyzing op @ 42 (end=50): getelem
[BaselineOp] Analyzing op @ 43 (end=50): add
[BaselineOp] Analyzing op @ 44 (end=50): notearg
[BaselineOp] Analyzing op @ 45 (end=50): new
[BaselineOp] Analyzing op @ 48 (end=50): return
[BaselineOp] Analyzing op @ 49 (end=50): stop
[BaselineScripts] Baseline compiling script 3d-raytrace.js:67 (0x7f220e86e2b8)
[BaselineOp] Compiling op @ 0: getgname
[BaselineOp] Compiling op @ 5: undefined
[BaselineOp] Compiling op @ 6: notearg
[BaselineOp] Compiling op @ 7: getarg
[BaselineOp] Compiling op @ 10: zero
[BaselineOp] Compiling op @ 11: getelem
[BaselineOp] Compiling op @ 12: getarg
[BaselineOp] Compiling op @ 15: zero
[BaselineOp] Compiling op @ 16: getelem
[BaselineOp] Compiling op @ 17: add
[BaselineOp] Compiling op @ 18: notearg
[BaselineOp] Compiling op @ 19: getarg
[BaselineOp] Compiling op @ 22: one
[BaselineOp] Compiling op @ 23: getelem
[BaselineOp] Compiling op @ 24: getarg
[BaselineOp] Compiling op @ 27: one
[BaselineOp] Compiling op @ 28: getelem
[BaselineOp] Compiling op @ 29: add
[BaselineOp] Compiling op @ 30: notearg
[BaselineOp] Compiling op @ 31: getarg
[BaselineOp] Compiling op @ 34: int8
[BaselineOp] Compiling op @ 36: getelem
[BaselineOp] Compiling op @ 37: getarg
[BaselineOp] Compiling op @ 40: int8
[BaselineOp] Compiling op @ 42: getelem
[BaselineOp] Compiling op @ 43: add
[BaselineOp] Compiling op @ 44: notearg
[BaselineOp] Compiling op @ 45: new
[BaselineOp] Compiling op @ 48: return
[BaselineOp] Compiling op @ 49: stop
[BaselineScripts] Created BaselineScript 0x2b11160 (raw 0x7f2210529688) for 3d-raytrace.js:67
[BaselineScripts] [block counter] 0 block counters were emitted for script 3d-raytrace.js:67 (0x2b11160) (lineno: 68 column: 66)
[BaselineOp] Analyzing op @ 0 (end=91): getarg
[BaselineOp] Analyzing op @ 3 (end=91): zero
[BaselineOp] Analyzing op @ 4 (end=91): getelem
[BaselineOp] Analyzing op @ 5 (end=91): int8
[BaselineOp] Analyzing op @ 7 (end=91): div
[BaselineOp] Analyzing op @ 8 (end=91): int8
[BaselineOp] Analyzing op @ 10 (end=91): mod
[BaselineOp] Analyzing op @ 11 (end=91): int8
[BaselineOp] Analyzing op @ 13 (end=91): add
[BaselineOp] Analyzing op @ 14 (end=91): int8
[BaselineOp] Analyzing op @ 16 (end=91): mod
[BaselineOp] Analyzing op @ 17 (end=91): setlocal
[BaselineOp] Analyzing op @ 20 (end=91): pop
[BaselineOp] Analyzing op @ 21 (end=91): getarg
[BaselineOp] Analyzing op @ 24 (end=91): int8
[BaselineOp] Analyzing op @ 26 (end=91): getelem
[BaselineOp] Analyzing op @ 27 (end=91): int8
[BaselineOp] Analyzing op @ 29 (end=91): div
[BaselineOp] Analyzing op @ 30 (end=91): double
[BaselineOp] Analyzing op @ 35 (end=91): add
[BaselineOp] Analyzing op @ 36 (end=91): int8
[BaselineOp] Analyzing op @ 38 (end=91): mod
[BaselineOp] Analyzing op @ 39 (end=91): int8
[BaselineOp] Analyzing op @ 41 (end=91): add
[BaselineOp] Analyzing op @ 42 (end=91): int8
[BaselineOp] Analyzing op @ 44 (end=91): mod
[BaselineOp] Analyzing op @ 45 (end=91): setlocal
[BaselineOp] Analyzing op @ 48 (end=91): pop
[BaselineOp] Analyzing op @ 49 (end=91): getlocal
[BaselineOp] Analyzing op @ 52 (end=91): one
[BaselineOp] Analyzing op @ 53 (end=91): lt
[BaselineOp] Analyzing op @ 54 (end=91): getlocal
[BaselineOp] Analyzing op @ 57 (end=91): one
[BaselineOp] Analyzing op @ 58 (end=91): lt
[BaselineOp] Analyzing op @ 59 (end=91): ne
[BaselineOp] Analyzing op @ 60 (end=91): ifeq
[BaselineOp] Analyzing op @ 65 (end=91): getaliasedvar
[BaselineOp] Analyzing op @ 74 (end=91): return
[BaselineOp] Analyzing op @ 75 (end=91): goto
[BaselineOp] Analyzing op @ 80 (end=91): getaliasedvar
[BaselineOp] Analyzing op @ 89 (end=91): return
[BaselineOp] Analyzing op @ 90 (end=91): stop
[BaselineScripts] Baseline compiling script 3d-raytrace.js:357 (0x7f220e86e380)
[BaselineOp] Compiling op @ 0: getarg
[BaselineOp] Compiling op @ 3: zero
[BaselineOp] Compiling op @ 4: getelem
[BaselineOp] Compiling op @ 5: int8
[BaselineOp] Compiling op @ 7: div
[BaselineOp] Compiling op @ 8: int8
[BaselineOp] Compiling op @ 10: mod
[BaselineOp] Compiling op @ 11: int8
[BaselineOp] Compiling op @ 13: add
[BaselineOp] Compiling op @ 14: int8
[BaselineOp] Compiling op @ 16: mod
[BaselineOp] Compiling op @ 17: setlocal
[BaselineOp] Compiling op @ 20: pop
[BaselineOp] Compiling op @ 21: getarg
[BaselineOp] Compiling op @ 24: int8
[BaselineOp] Compiling op @ 26: getelem
[BaselineOp] Compiling op @ 27: int8
[BaselineOp] Compiling op @ 29: div
[BaselineOp] Compiling op @ 30: double
[BaselineOp] Compiling op @ 35: add
[BaselineOp] Compiling op @ 36: int8
[BaselineOp] Compiling op @ 38: mod
[BaselineOp] Compiling op @ 39: int8
[BaselineOp] Compiling op @ 41: add
[BaselineOp] Compiling op @ 42: int8
[BaselineOp] Compiling op @ 44: mod
[BaselineOp] Compiling op @ 45: setlocal
[BaselineOp] Compiling op @ 48: pop
[BaselineOp] Compiling op @ 49: getlocal
[BaselineOp] Compiling op @ 52: one
[BaselineOp] Compiling op @ 53: lt
[BaselineOp] Compiling op @ 54: getlocal
[BaselineOp] Compiling op @ 57: one
[BaselineOp] Compiling op @ 58: lt
[BaselineOp] Compiling op @ 59: ne
[BaselineOp] Compiling op @ 60: ifeq
[BaselineOp] Compiling op @ 65: getaliasedvar
[BaselineOp] [block counter] Emitting a block counter for op @ 65: getaliasedvar (lineno: 367 column: 12)
[BaselineOp] Compiling op @ 74: return
[BaselineOp] Compiling op @ 75: goto
[BaselineOp] Compiling op @ 80: getaliasedvar
[BaselineOp] [block counter] Emitting a block counter for op @ 80: getaliasedvar (lineno: 369 column: 12)
[BaselineOp] Compiling op @ 89: return
[BaselineOp] Compiling op @ 90: stop
[BaselineScripts] Created BaselineScript 0x2b15220 (raw 0x7f22105298f8) for 3d-raytrace.js:357
[BaselineScripts] [block counter] 2 block counters were emitted for script 3d-raytrace.js:357 (0x2b15220) (lineno: 369 column: 25)
[BaselineOp] Analyzing op @ 0 (end=50): getgname
[BaselineOp] Analyzing op @ 5 (end=50): undefined
[BaselineOp] Analyzing op @ 6 (end=50): notearg
[BaselineOp] Analyzing op @ 7 (end=50): getarg
[BaselineOp] Analyzing op @ 10 (end=50): zero
[BaselineOp] Analyzing op @ 11 (end=50): getelem
[BaselineOp] Analyzing op @ 12 (end=50): getarg
[BaselineOp] Analyzing op @ 15 (end=50): zero
[BaselineOp] Analyzing op @ 16 (end=50): getelem
[BaselineOp] Analyzing op @ 17 (end=50): mul
[BaselineOp] Analyzing op @ 18 (end=50): notearg
[BaselineOp] Analyzing op @ 19 (end=50): getarg
[BaselineOp] Analyzing op @ 22 (end=50): one
[BaselineOp] Analyzing op @ 23 (end=50): getelem
[BaselineOp] Analyzing op @ 24 (end=50): getarg
[BaselineOp] Analyzing op @ 27 (end=50): one
[BaselineOp] Analyzing op @ 28 (end=50): getelem
[BaselineOp] Analyzing op @ 29 (end=50): mul
[BaselineOp] Analyzing op @ 30 (end=50): notearg
[BaselineOp] Analyzing op @ 31 (end=50): getarg
[BaselineOp] Analyzing op @ 34 (end=50): int8
[BaselineOp] Analyzing op @ 36 (end=50): getelem
[BaselineOp] Analyzing op @ 37 (end=50): getarg
[BaselineOp] Analyzing op @ 40 (end=50): int8
[BaselineOp] Analyzing op @ 42 (end=50): getelem
[BaselineOp] Analyzing op @ 43 (end=50): mul
[BaselineOp] Analyzing op @ 44 (end=50): notearg
[BaselineOp] Analyzing op @ 45 (end=50): new
[BaselineOp] Analyzing op @ 48 (end=50): return
[BaselineOp] Analyzing op @ 49 (end=50): stop
[BaselineScripts] Baseline compiling script 3d-raytrace.js:75 (0x7f220e86e5d8)
[BaselineOp] Compiling op @ 0: getgname
[BaselineOp] Compiling op @ 5: undefined
[BaselineOp] Compiling op @ 6: notearg
[BaselineOp] Compiling op @ 7: getarg
[BaselineOp] Compiling op @ 10: zero
[BaselineOp] Compiling op @ 11: getelem
[BaselineOp] Compiling op @ 12: getarg
[BaselineOp] Compiling op @ 15: zero
[BaselineOp] Compiling op @ 16: getelem
[BaselineOp] Compiling op @ 17: mul
[BaselineOp] Compiling op @ 18: notearg
[BaselineOp] Compiling op @ 19: getarg
[BaselineOp] Compiling op @ 22: one
[BaselineOp] Compiling op @ 23: getelem
[BaselineOp] Compiling op @ 24: getarg
[BaselineOp] Compiling op @ 27: one
[BaselineOp] Compiling op @ 28: getelem
[BaselineOp] Compiling op @ 29: mul
[BaselineOp] Compiling op @ 30: notearg
[BaselineOp] Compiling op @ 31: getarg
[BaselineOp] Compiling op @ 34: int8
[BaselineOp] Compiling op @ 36: getelem
[BaselineOp] Compiling op @ 37: getarg
[BaselineOp] Compiling op @ 40: int8
[BaselineOp] Compiling op @ 42: getelem
[BaselineOp] Compiling op @ 43: mul
[BaselineOp] Compiling op @ 44: notearg
[BaselineOp] Compiling op @ 45: new
[BaselineOp] Compiling op @ 48: return
[BaselineOp] Compiling op @ 49: stop
[BaselineScripts] Created BaselineScript 0x2b15a90 (raw 0x7f2210529d40) for 3d-raytrace.js:75
[BaselineScripts] [block counter] 0 block counters were emitted for script 3d-raytrace.js:75 (0x2b15a90) (lineno: 76 column: 66)
[BaselineScripts] [block counter] Dump 10 block counters for 0x2b09640
[BaselineScripts] [block counter] Op offset: 142, count: 808
[BaselineScripts] [block counter] Op offset: 150, count: 988
[BaselineScripts] [block counter] Op offset: 155, count: 287
[BaselineScripts] [block counter] Op offset: 157, count: 701
[BaselineScripts] [block counter] Op offset: 252, count: 434
[BaselineScripts] [block counter] Op offset: 254, count: 267
[BaselineScripts] [block counter] Op offset: 289, count: 151
[BaselineScripts] [block counter] Op offset: 291, count: 116
[BaselineScripts] [block counter] Op offset: 305, count: 72
[BaselineScripts] [block counter] Op offset: 307, count: 44
[BaselineScripts] [block counter] Dump 10 block counters for 0x2b1d960
[BaselineScripts] [block counter] Op offset: 31, count: 854
[BaselineScripts] [block counter] Op offset: 32, count: 854
[BaselineScripts] [block counter] Op offset: 92, count: 26
[BaselineScripts] [block counter] Op offset: 105, count: 26
[BaselineScripts] [block counter] Op offset: 113, count: 854
[BaselineScripts] [block counter] Op offset: 118, count: 828
[BaselineScripts] [block counter] Op offset: 123, count: 26
[BaselineScripts] [block counter] Op offset: 125, count: 828
[BaselineScripts] [block counter] Op offset: 149, count: 909
[BaselineScripts] [block counter] Op offset: 173, count: 55
[BaselineScripts] [block counter] Dump 30 block counters for 0x2b1f880
[BaselineScripts] [block counter] Op offset: 15, count: 761
[BaselineScripts] [block counter] Op offset: 16, count: 761
[BaselineScripts] [block counter] Op offset: 74, count: 44
[BaselineScripts] [block counter] Op offset: 87, count: 44
[BaselineScripts] [block counter] Op offset: 95, count: 761
[BaselineScripts] [block counter] Op offset: 100, count: 717
[BaselineScripts] [block counter] Op offset: 105, count: 44
[BaselineScripts] [block counter] Op offset: 119, count: 761
[BaselineScripts] [block counter] Op offset: 131, count: 816
[BaselineScripts] [block counter] Op offset: 153, count: 55
[BaselineScripts] [block counter] Op offset: 162, count: 12
[BaselineScripts] [block counter] Op offset: 205, count: 43
[BaselineScripts] [block counter] Op offset: 279, count: 43
[BaselineScripts] [block counter] Op offset: 319, count: 43
[BaselineScripts] [block counter] Op offset: 337, count: 43
[BaselineScripts] [block counter] Op offset: 372, count: 0
[BaselineScripts] [block counter] Op offset: 384, count: 43
[BaselineScripts] [block counter] Op offset: 408, count: 12
[BaselineScripts] [block counter] Op offset: 518, count: 12
[BaselineScripts] [block counter] Op offset: 522, count: 31
[BaselineScripts] [block counter] Op offset: 578, count: 93
[BaselineScripts] [block counter] Op offset: 579, count: 93
[BaselineScripts] [block counter] Op offset: 696, count: 32
[BaselineScripts] [block counter] Op offset: 701, count: 61
[BaselineScripts] [block counter] Op offset: 733, count: 61
[BaselineScripts] [block counter] Op offset: 772, count: 93
[BaselineScripts] [block counter] Op offset: 784, count: 124
[BaselineScripts] [block counter] Op offset: 806, count: 31
[BaselineScripts] [block counter] Op offset: 836, count: 0
[BaselineScripts] [block counter] Op offset: 900, count: 31
[BaselineScripts] [block counter] Dump 30 block counters for 0x2b1f880
[BaselineScripts] [block counter] Op offset: 15, count: 1559
[BaselineScripts] [block counter] Op offset: 16, count: 1559
[BaselineScripts] [block counter] Op offset: 74, count: 90
[BaselineScripts] [block counter] Op offset: 87, count: 90
[BaselineScripts] [block counter] Op offset: 95, count: 1559
[BaselineScripts] [block counter] Op offset: 100, count: 1469
[BaselineScripts] [block counter] Op offset: 105, count: 90
[BaselineScripts] [block counter] Op offset: 119, count: 1559
[BaselineScripts] [block counter] Op offset: 131, count: 1671
[BaselineScripts] [block counter] Op offset: 153, count: 112
[BaselineScripts] [block counter] Op offset: 162, count: 25
[BaselineScripts] [block counter] Op offset: 205, count: 87
[BaselineScripts] [block counter] Op offset: 279, count: 86
[BaselineScripts] [block counter] Op offset: 319, count: 87
[BaselineScripts] [block counter] Op offset: 337, count: 84
[BaselineScripts] [block counter] Op offset: 372, count: 4
[BaselineScripts] [block counter] Op offset: 384, count: 88
[BaselineScripts] [block counter] Op offset: 408, count: 30
[BaselineScripts] [block counter] Op offset: 518, count: 30
[BaselineScripts] [block counter] Op offset: 522, count: 58
[BaselineScripts] [block counter] Op offset: 578, count: 174
[BaselineScripts] [block counter] Op offset: 579, count: 174
[BaselineScripts] [block counter] Op offset: 696, count: 62
[BaselineScripts] [block counter] Op offset: 701, count: 112
[BaselineScripts] [block counter] Op offset: 733, count: 110
[BaselineScripts] [block counter] Op offset: 772, count: 174
[BaselineScripts] [block counter] Op offset: 784, count: 232
[BaselineScripts] [block counter] Op offset: 806, count: 58
[BaselineScripts] [block counter] Op offset: 836, count: 0
[BaselineScripts] [block counter] Op offset: 900, count: 58
[BaselineScripts] [block counter] Dump 30 block counters for 0x2b1f880
[BaselineScripts] [block counter] Op offset: 15, count: 2385
[BaselineScripts] [block counter] Op offset: 16, count: 2385
[BaselineScripts] [block counter] Op offset: 74, count: 134
[BaselineScripts] [block counter] Op offset: 87, count: 134
[BaselineScripts] [block counter] Op offset: 95, count: 2385
[BaselineScripts] [block counter] Op offset: 100, count: 2251
[BaselineScripts] [block counter] Op offset: 105, count: 134
[BaselineScripts] [block counter] Op offset: 119, count: 2385
[BaselineScripts] [block counter] Op offset: 131, count: 2556
[BaselineScripts] [block counter] Op offset: 153, count: 171
[BaselineScripts] [block counter] Op offset: 162, count: 44
[BaselineScripts] [block counter] Op offset: 205, count: 127
[BaselineScripts] [block counter] Op offset: 279, count: 123
[BaselineScripts] [block counter] Op offset: 319, count: 127
[BaselineScripts] [block counter] Op offset: 337, count: 119
[BaselineScripts] [block counter] Op offset: 372, count: 9
[BaselineScripts] [block counter] Op offset: 384, count: 129
[BaselineScripts] [block counter] Op offset: 408, count: 53
[BaselineScripts] [block counter] Op offset: 518, count: 54
[BaselineScripts] [block counter] Op offset: 522, count: 76
[BaselineScripts] [block counter] Op offset: 578, count: 228
[BaselineScripts] [block counter] Op offset: 579, count: 228
[BaselineScripts] [block counter] Op offset: 696, count: 85
[BaselineScripts] [block counter] Op offset: 701, count: 143
[BaselineScripts] [block counter] Op offset: 733, count: 141
[BaselineScripts] [block counter] Op offset: 772, count: 228
[BaselineScripts] [block counter] Op offset: 784, count: 304
[BaselineScripts] [block counter] Op offset: 806, count: 76
[BaselineScripts] [block counter] Op offset: 836, count: 0
[BaselineScripts] [block counter] Op offset: 900, count: 76
[BaselineScripts] [block counter] Dump 0 block counters for 0x2b1d480
[BaselineOp] Analyzing op @ 0 (end=236): bindgname
[BaselineOp] Analyzing op @ 5 (end=236): getgname
[BaselineOp] Analyzing op @ 10 (end=236): undefined
[BaselineOp] Analyzing op @ 11 (end=236): notearg
[BaselineOp] Analyzing op @ 12 (end=236): getgname
[BaselineOp] Analyzing op @ 17 (end=236): undefined
[BaselineOp] Analyzing op @ 18 (end=236): notearg
[BaselineOp] Analyzing op @ 19 (end=236): new
[BaselineOp] Analyzing op @ 22 (end=236): notearg
[BaselineOp] Analyzing op @ 23 (end=236): getgname
[BaselineOp] Analyzing op @ 28 (end=236): undefined
[BaselineOp] Analyzing op @ 29 (end=236): notearg
[BaselineOp] Analyzing op @ 30 (end=236): new
[BaselineOp] Analyzing op @ 33 (end=236): notearg
[BaselineOp] Analyzing op @ 34 (end=236): new
[BaselineOp] Analyzing op @ 37 (end=236): setgname
[BaselineOp] Analyzing op @ 42 (end=236): pop
[BaselineOp] Analyzing op @ 43 (end=236): getgname
[BaselineOp] Analyzing op @ 48 (end=236): zero
[BaselineOp] Analyzing op @ 49 (end=236): getelem
[BaselineOp] Analyzing op @ 50 (end=236): this
[BaselineOp] Analyzing op @ 51 (end=236): getprop
[BaselineOp] Analyzing op @ 56 (end=236): setprop
[BaselineOp] Analyzing op @ 61 (end=236): pop
[BaselineOp] Analyzing op @ 62 (end=236): getgname
[BaselineOp] Analyzing op @ 67 (end=236): one
[BaselineOp] Analyzing op @ 68 (end=236): getelem
[BaselineOp] Analyzing op @ 69 (end=236): this
[BaselineOp] Analyzing op @ 70 (end=236): getprop
[BaselineOp] Analyzing op @ 75 (end=236): setprop
[BaselineOp] Analyzing op @ 80 (end=236): pop
[BaselineOp] Analyzing op @ 81 (end=236): getgname
[BaselineOp] Analyzing op @ 86 (end=236): zero
[BaselineOp] Analyzing op @ 87 (end=236): getelem
[BaselineOp] Analyzing op @ 88 (end=236): callgname
[BaselineOp] Analyzing op @ 93 (end=236): undefined
[BaselineOp] Analyzing op @ 94 (end=236): notearg
[BaselineOp] Analyzing op @ 95 (end=236): callgname
[BaselineOp] Analyzing op @ 100 (end=236): undefined
[BaselineOp] Analyzing op @ 101 (end=236): notearg
[BaselineOp] Analyzing op @ 102 (end=236): this
[BaselineOp] Analyzing op @ 103 (end=236): getprop
[BaselineOp] Analyzing op @ 108 (end=236): zero
[BaselineOp] Analyzing op @ 109 (end=236): getelem
[BaselineOp] Analyzing op @ 110 (end=236): notearg
[BaselineOp] Analyzing op @ 111 (end=236): getarg
[BaselineOp] Analyzing op @ 114 (end=236): notearg
[BaselineOp] Analyzing op @ 115 (end=236): call
[BaselineOp] Analyzing op @ 118 (end=236): notearg
[BaselineOp] Analyzing op @ 119 (end=236): callgname
[BaselineOp] Analyzing op @ 124 (end=236): undefined
[BaselineOp] Analyzing op @ 125 (end=236): notearg
[BaselineOp] Analyzing op @ 126 (end=236): this
[BaselineOp] Analyzing op @ 127 (end=236): getprop
[BaselineOp] Analyzing op @ 132 (end=236): int8
[BaselineOp] Analyzing op @ 134 (end=236): getelem
[BaselineOp] Analyzing op @ 135 (end=236): notearg
[BaselineOp] Analyzing op @ 136 (end=236): one
[BaselineOp] Analyzing op @ 137 (end=236): getarg
[BaselineOp] Analyzing op @ 140 (end=236): sub
[BaselineOp] Analyzing op @ 141 (end=236): notearg
[BaselineOp] Analyzing op @ 142 (end=236): call
[BaselineOp] Analyzing op @ 145 (end=236): notearg
[BaselineOp] Analyzing op @ 146 (end=236): call
[BaselineOp] Analyzing op @ 149 (end=236): setprop
[BaselineOp] Analyzing op @ 154 (end=236): pop
[BaselineOp] Analyzing op @ 155 (end=236): getgname
[BaselineOp] Analyzing op @ 160 (end=236): one
[BaselineOp] Analyzing op @ 161 (end=236): getelem
[BaselineOp] Analyzing op @ 162 (end=236): callgname
[BaselineOp] Analyzing op @ 167 (end=236): undefined
[BaselineOp] Analyzing op @ 168 (end=236): notearg
[BaselineOp] Analyzing op @ 169 (end=236): callgname
[BaselineOp] Analyzing op @ 174 (end=236): undefined
[BaselineOp] Analyzing op @ 175 (end=236): notearg
[BaselineOp] Analyzing op @ 176 (end=236): this
[BaselineOp] Analyzing op @ 177 (end=236): getprop
[BaselineOp] Analyzing op @ 182 (end=236): one
[BaselineOp] Analyzing op @ 183 (end=236): getelem
[BaselineOp] Analyzing op @ 184 (end=236): notearg
[BaselineOp] Analyzing op @ 185 (end=236): getarg
[BaselineOp] Analyzing op @ 188 (end=236): notearg
[BaselineOp] Analyzing op @ 189 (end=236): call
[BaselineOp] Analyzing op @ 192 (end=236): notearg
[BaselineOp] Analyzing op @ 193 (end=236): callgname
[BaselineOp] Analyzing op @ 198 (end=236): undefined
[BaselineOp] Analyzing op @ 199 (end=236): notearg
[BaselineOp] Analyzing op @ 200 (end=236): this
[BaselineOp] Analyzing op @ 201 (end=236): getprop
[BaselineOp] Analyzing op @ 206 (end=236): int8
[BaselineOp] Analyzing op @ 208 (end=236): getelem
[BaselineOp] Analyzing op @ 209 (end=236): notearg
[BaselineOp] Analyzing op @ 210 (end=236): one
[BaselineOp] Analyzing op @ 211 (end=236): getarg
[BaselineOp] Analyzing op @ 214 (end=236): sub
[BaselineOp] Analyzing op @ 215 (end=236): notearg
[BaselineOp] Analyzing op @ 216 (end=236): call
[BaselineOp] Analyzing op @ 219 (end=236): notearg
[BaselineOp] Analyzing op @ 220 (end=236): call
[BaselineOp] Analyzing op @ 223 (end=236): setprop
[BaselineOp] Analyzing op @ 228 (end=236): pop
[BaselineOp] Analyzing op @ 229 (end=236): getgname
[BaselineOp] Analyzing op @ 234 (end=236): return
[BaselineOp] Analyzing op @ 235 (end=236): stop
[BaselineScripts] Baseline compiling script 3d-raytrace.js:283 (0x7f220e851e70)
[BaselineOp] Compiling op @ 0: bindgname
[BaselineOp] Compiling op @ 5: getgname
[BaselineOp] Compiling op @ 10: undefined
[BaselineOp] Compiling op @ 11: notearg
[BaselineOp] Compiling op @ 12: getgname
[BaselineOp] Compiling op @ 17: undefined
[BaselineOp] Compiling op @ 18: notearg
[BaselineOp] Compiling op @ 19: new
[BaselineOp] Compiling op @ 22: notearg
[BaselineOp] Compiling op @ 23: getgname
[BaselineOp] Compiling op @ 28: undefined
[BaselineOp] Compiling op @ 29: notearg
[BaselineOp] Compiling op @ 30: new
[BaselineOp] Compiling op @ 33: notearg
[BaselineOp] Compiling op @ 34: new
[BaselineOp] Compiling op @ 37: setgname
[BaselineOp] Compiling op @ 42: pop
[BaselineOp] Compiling op @ 43: getgname
[BaselineOp] Compiling op @ 48: zero
[BaselineOp] Compiling op @ 49: getelem
[BaselineOp] Compiling op @ 50: this
[BaselineOp] Compiling op @ 51: getprop
[BaselineOp] Compiling op @ 56: setprop
[BaselineOp] Compiling op @ 61: pop
[BaselineOp] Compiling op @ 62: getgname
[BaselineOp] Compiling op @ 67: one
[BaselineOp] Compiling op @ 68: getelem
[BaselineOp] Compiling op @ 69: this
[BaselineOp] Compiling op @ 70: getprop
[BaselineOp] Compiling op @ 75: setprop
[BaselineOp] Compiling op @ 80: pop
[BaselineOp] Compiling op @ 81: getgname
[BaselineOp] Compiling op @ 86: zero
[BaselineOp] Compiling op @ 87: getelem
[BaselineOp] Compiling op @ 88: callgname
[BaselineOp] Compiling op @ 93: undefined
[BaselineOp] Compiling op @ 94: notearg
[BaselineOp] Compiling op @ 95: callgname
[BaselineOp] Compiling op @ 100: undefined
[BaselineOp] Compiling op @ 101: notearg
[BaselineOp] Compiling op @ 102: this
[BaselineOp] Compiling op @ 103: getprop
[BaselineOp] Compiling op @ 108: zero
[BaselineOp] Compiling op @ 109: getelem
[BaselineOp] Compiling op @ 110: notearg
[BaselineOp] Compiling op @ 111: getarg
[BaselineOp] Compiling op @ 114: notearg
[BaselineOp] Compiling op @ 115: call
[BaselineOp] Compiling op @ 118: notearg
[BaselineOp] Compiling op @ 119: callgname
[BaselineOp] Compiling op @ 124: undefined
[BaselineOp] Compiling op @ 125: notearg
[BaselineOp] Compiling op @ 126: this
[BaselineOp] Compiling op @ 127: getprop
[BaselineOp] Compiling op @ 132: int8
[BaselineOp] Compiling op @ 134: getelem
[BaselineOp] Compiling op @ 135: notearg
[BaselineOp] Compiling op @ 136: one
[BaselineOp] Compiling op @ 137: getarg
[BaselineOp] Compiling op @ 140: sub
[BaselineOp] Compiling op @ 141: notearg
[BaselineOp] Compiling op @ 142: call
[BaselineOp] Compiling op @ 145: notearg
[BaselineOp] Compiling op @ 146: call
[BaselineOp] Compiling op @ 149: setprop
[BaselineOp] Compiling op @ 154: pop
[BaselineOp] Compiling op @ 155: getgname
[BaselineOp] Compiling op @ 160: one
[BaselineOp] Compiling op @ 161: getelem
[BaselineOp] Compiling op @ 162: callgname
[BaselineOp] Compiling op @ 167: undefined
[BaselineOp] Compiling op @ 168: notearg
[BaselineOp] Compiling op @ 169: callgname
[BaselineOp] Compiling op @ 174: undefined
[BaselineOp] Compiling op @ 175: notearg
[BaselineOp] Compiling op @ 176: this
[BaselineOp] Compiling op @ 177: getprop
[BaselineOp] Compiling op @ 182: one
[BaselineOp] Compiling op @ 183: getelem
[BaselineOp] Compiling op @ 184: notearg
[BaselineOp] Compiling op @ 185: getarg
[BaselineOp] Compiling op @ 188: notearg
[BaselineOp] Compiling op @ 189: call
[BaselineOp] Compiling op @ 192: notearg
[BaselineOp] Compiling op @ 193: callgname
[BaselineOp] Compiling op @ 198: undefined
[BaselineOp] Compiling op @ 199: notearg
[BaselineOp] Compiling op @ 200: this
[BaselineOp] Compiling op @ 201: getprop
[BaselineOp] Compiling op @ 206: int8
[BaselineOp] Compiling op @ 208: getelem
[BaselineOp] Compiling op @ 209: notearg
[BaselineOp] Compiling op @ 210: one
[BaselineOp] Compiling op @ 211: getarg
[BaselineOp] Compiling op @ 214: sub
[BaselineOp] Compiling op @ 215: notearg
[BaselineOp] Compiling op @ 216: call
[BaselineOp] Compiling op @ 219: notearg
[BaselineOp] Compiling op @ 220: call
[BaselineOp] Compiling op @ 223: setprop
[BaselineOp] Compiling op @ 228: pop
[BaselineOp] Compiling op @ 229: getgname
[BaselineOp] Compiling op @ 234: return
[BaselineOp] Compiling op @ 235: stop
[BaselineScripts] Created BaselineScript 0x2bb4890 (raw 0x7f2210530520) for 3d-raytrace.js:283
[BaselineScripts] [block counter] 0 block counters were emitted for script 3d-raytrace.js:283 (0x2bb4890) (lineno: 289 column: 16)
[BaselineScripts] [block counter] Dump 0 block counters for 0x2b205d0
[BaselineOp] Analyzing op @ 0 (end=176): string
[BaselineOp] Analyzing op @ 5 (end=176): string
[BaselineOp] Analyzing op @ 10 (end=176): add
[BaselineOp] Analyzing op @ 11 (end=176): setlocal
[BaselineOp] Analyzing op @ 14 (end=176): pop
[BaselineOp] Analyzing op @ 15 (end=176): int8
[BaselineOp] Analyzing op @ 17 (end=176): setlocal
[BaselineOp] Analyzing op @ 20 (end=176): pop
[BaselineOp] Analyzing op @ 21 (end=176): zero
[BaselineOp] Analyzing op @ 22 (end=176): setlocal
[BaselineOp] Analyzing op @ 25 (end=176): pop
[BaselineOp] Analyzing op @ 26 (end=176): goto
[BaselineOp] Analyzing op @ 31 (end=176): loophead
[BaselineOp] Analyzing op @ 32 (end=176): getlocal
[BaselineOp] Analyzing op @ 35 (end=176): string
[BaselineOp] Analyzing op @ 40 (end=176): add
[BaselineOp] Analyzing op @ 41 (end=176): setlocal
[BaselineOp] Analyzing op @ 44 (end=176): pop
[BaselineOp] Analyzing op @ 45 (end=176): zero
[BaselineOp] Analyzing op @ 46 (end=176): setlocal
[BaselineOp] Analyzing op @ 49 (end=176): pop
[BaselineOp] Analyzing op @ 50 (end=176): goto
[BaselineOp] Analyzing op @ 55 (end=176): loophead
[BaselineOp] Analyzing op @ 56 (end=176): getlocal
[BaselineOp] Analyzing op @ 59 (end=176): string
[BaselineOp] Analyzing op @ 64 (end=176): getarg
[BaselineOp] Analyzing op @ 67 (end=176): getlocal
[BaselineOp] Analyzing op @ 70 (end=176): getelem
[BaselineOp] Analyzing op @ 71 (end=176): getlocal
[BaselineOp] Analyzing op @ 74 (end=176): getelem
[BaselineOp] Analyzing op @ 75 (end=176): add
[BaselineOp] Analyzing op @ 76 (end=176): string
[BaselineOp] Analyzing op @ 81 (end=176): add
[BaselineOp] Analyzing op @ 82 (end=176): add
[BaselineOp] Analyzing op @ 83 (end=176): setlocal
[BaselineOp] Analyzing op @ 86 (end=176): pop
[BaselineOp] Analyzing op @ 87 (end=176): getlocal
[BaselineOp] Analyzing op @ 90 (end=176): pos
[BaselineOp] Analyzing op @ 91 (end=176): dup
[BaselineOp] Analyzing op @ 92 (end=176): one
[BaselineOp] Analyzing op @ 93 (end=176): add
[BaselineOp] Analyzing op @ 94 (end=176): setlocal
[BaselineOp] Analyzing op @ 97 (end=176): pop
[BaselineOp] Analyzing op @ 98 (end=176): pop
[BaselineOp] Analyzing op @ 99 (end=176): loopentry
[BaselineOp] Analyzing op @ 101 (end=176): getlocal
[BaselineOp] Analyzing op @ 104 (end=176): getlocal
[BaselineOp] Analyzing op @ 107 (end=176): lt
[BaselineOp] Analyzing op @ 108 (end=176): ifne
[BaselineOp] Analyzing op @ 113 (end=176): getlocal
[BaselineOp] Analyzing op @ 116 (end=176): string
[BaselineOp] Analyzing op @ 121 (end=176): add
[BaselineOp] Analyzing op @ 122 (end=176): setlocal
[BaselineOp] Analyzing op @ 125 (end=176): pop
[BaselineOp] Analyzing op @ 126 (end=176): getlocal
[BaselineOp] Analyzing op @ 129 (end=176): pos
[BaselineOp] Analyzing op @ 130 (end=176): dup
[BaselineOp] Analyzing op @ 131 (end=176): one
[BaselineOp] Analyzing op @ 132 (end=176): add
[BaselineOp] Analyzing op @ 133 (end=176): setlocal
[BaselineOp] Analyzing op @ 136 (end=176): pop
[BaselineOp] Analyzing op @ 137 (end=176): pop
[BaselineOp] Analyzing op @ 138 (end=176): loopentry
[BaselineOp] Analyzing op @ 140 (end=176): getlocal
[BaselineOp] Analyzing op @ 143 (end=176): getlocal
[BaselineOp] Analyzing op @ 146 (end=176): lt
[BaselineOp] Analyzing op @ 147 (end=176): ifne
[BaselineOp] Analyzing op @ 32 (end=176): getlocal
[BaselineOp] Analyzing op @ 35 (end=176): string
[BaselineOp] Analyzing op @ 40 (end=176): add
[BaselineOp] Analyzing op @ 41 (end=176): setlocal
[BaselineOp] Analyzing op @ 44 (end=176): pop
[BaselineOp] Analyzing op @ 45 (end=176): zero
[BaselineOp] Analyzing op @ 46 (end=176): setlocal
[BaselineOp] Analyzing op @ 49 (end=176): pop
[BaselineOp] Analyzing op @ 50 (end=176): goto
[BaselineOp] Analyzing op @ 55 (end=176): loophead
[BaselineOp] Analyzing op @ 56 (end=176): getlocal
[BaselineOp] Analyzing op @ 59 (end=176): string
[BaselineOp] Analyzing op @ 64 (end=176): getarg
[BaselineOp] Analyzing op @ 67 (end=176): getlocal
[BaselineOp] Analyzing op @ 70 (end=176): getelem
[BaselineOp] Analyzing op @ 71 (end=176): getlocal
[BaselineOp] Analyzing op @ 74 (end=176): getelem
[BaselineOp] Analyzing op @ 75 (end=176): add
[BaselineOp] Analyzing op @ 76 (end=176): string
[BaselineOp] Analyzing op @ 81 (end=176): add
[BaselineOp] Analyzing op @ 82 (end=176): add
[BaselineOp] Analyzing op @ 83 (end=176): setlocal
[BaselineOp] Analyzing op @ 86 (end=176): pop
[BaselineOp] Analyzing op @ 87 (end=176): getlocal
[BaselineOp] Analyzing op @ 90 (end=176): pos
[BaselineOp] Analyzing op @ 91 (end=176): dup
[BaselineOp] Analyzing op @ 92 (end=176): one
[BaselineOp] Analyzing op @ 93 (end=176): add
[BaselineOp] Analyzing op @ 94 (end=176): setlocal
[BaselineOp] Analyzing op @ 97 (end=176): pop
[BaselineOp] Analyzing op @ 98 (end=176): pop
[BaselineOp] Analyzing op @ 99 (end=176): loopentry
[BaselineOp] Analyzing op @ 101 (end=176): getlocal
[BaselineOp] Analyzing op @ 104 (end=176): getlocal
[BaselineOp] Analyzing op @ 107 (end=176): lt
[BaselineOp] Analyzing op @ 108 (end=176): ifne
[BaselineOp] Analyzing op @ 56 (end=176): getlocal
[BaselineOp] Analyzing op @ 59 (end=176): string
[BaselineOp] Analyzing op @ 64 (end=176): getarg
[BaselineOp] Analyzing op @ 67 (end=176): getlocal
[BaselineOp] Analyzing op @ 70 (end=176): getelem
[BaselineOp] Analyzing op @ 71 (end=176): getlocal
[BaselineOp] Analyzing op @ 74 (end=176): getelem
[BaselineOp] Analyzing op @ 75 (end=176): add
[BaselineOp] Analyzing op @ 76 (end=176): string
[BaselineOp] Analyzing op @ 81 (end=176): add
[BaselineOp] Analyzing op @ 82 (end=176): add
[BaselineOp] Analyzing op @ 83 (end=176): setlocal
[BaselineOp] Analyzing op @ 86 (end=176): pop
[BaselineOp] Analyzing op @ 87 (end=176): getlocal
[BaselineOp] Analyzing op @ 90 (end=176): pos
[BaselineOp] Analyzing op @ 91 (end=176): dup
[BaselineOp] Analyzing op @ 92 (end=176): one
[BaselineOp] Analyzing op @ 93 (end=176): add
[BaselineOp] Analyzing op @ 94 (end=176): setlocal
[BaselineOp] Analyzing op @ 97 (end=176): pop
[BaselineOp] Analyzing op @ 98 (end=176): pop
[BaselineOp] Analyzing op @ 99 (end=176): loopentry
[BaselineOp] Analyzing op @ 101 (end=176): getlocal
[BaselineOp] Analyzing op @ 104 (end=176): getlocal
[BaselineOp] Analyzing op @ 107 (end=176): lt
[BaselineOp] Analyzing op @ 108 (end=176): ifne
[BaselineOp] Analyzing op @ 113 (end=176): getlocal
[BaselineOp] Analyzing op @ 116 (end=176): string
[BaselineOp] Analyzing op @ 121 (end=176): add
[BaselineOp] Analyzing op @ 122 (end=176): setlocal
[BaselineOp] Analyzing op @ 125 (end=176): pop
[BaselineOp] Analyzing op @ 126 (end=176): getlocal
[BaselineOp] Analyzing op @ 129 (end=176): pos
[BaselineOp] Analyzing op @ 130 (end=176): dup
[BaselineOp] Analyzing op @ 131 (end=176): one
[BaselineOp] Analyzing op @ 132 (end=176): add
[BaselineOp] Analyzing op @ 133 (end=176): setlocal
[BaselineOp] Analyzing op @ 136 (end=176): pop
[BaselineOp] Analyzing op @ 137 (end=176): pop
[BaselineOp] Analyzing op @ 138 (end=176): loopentry
[BaselineOp] Analyzing op @ 140 (end=176): getlocal
[BaselineOp] Analyzing op @ 143 (end=176): getlocal
[BaselineOp] Analyzing op @ 146 (end=176): lt
[BaselineOp] Analyzing op @ 147 (end=176): ifne
[BaselineOp] Analyzing op @ 152 (end=176): getlocal
[BaselineOp] Analyzing op @ 155 (end=176): string
[BaselineOp] Analyzing op @ 160 (end=176): string
[BaselineOp] Analyzing op @ 165 (end=176): add
[BaselineOp] Analyzing op @ 166 (end=176): add
[BaselineOp] Analyzing op @ 167 (end=176): setlocal
[BaselineOp] Analyzing op @ 170 (end=176): pop
[BaselineOp] Analyzing op @ 171 (end=176): getlocal
[BaselineOp] Analyzing op @ 174 (end=176): return
[BaselineOp] Analyzing op @ 175 (end=176): stop
[BaselineScripts] Baseline compiling script 3d-raytrace.js:405 (0x7f220e86e6a0)
[BaselineOp] Compiling op @ 0: string
[BaselineOp] Compiling op @ 5: string
[BaselineOp] Compiling op @ 10: add
[BaselineOp] Compiling op @ 11: setlocal
[BaselineOp] Compiling op @ 14: pop
[BaselineOp] Compiling op @ 15: int8
[BaselineOp] Compiling op @ 17: setlocal
[BaselineOp] Compiling op @ 20: pop
[BaselineOp] Compiling op @ 21: zero
[BaselineOp] Compiling op @ 22: setlocal
[BaselineOp] Compiling op @ 25: pop
[BaselineOp] Compiling op @ 26: goto
[BaselineOp] Compiling op @ 31: loophead
[BaselineOp] [block counter] Emitting a block counter for op @ 31: loophead (lineno: 410 column: 0)
[BaselineOp] Compiling op @ 32: getlocal
[BaselineOp] [block counter] Emitting a block counter for op @ 32: getlocal (lineno: 410 column: 8)
[BaselineOp] Compiling op @ 35: string
[BaselineOp] Compiling op @ 40: add
[BaselineOp] Compiling op @ 41: setlocal
[BaselineOp] Compiling op @ 44: pop
[BaselineOp] Compiling op @ 45: zero
[BaselineOp] Compiling op @ 46: setlocal
[BaselineOp] Compiling op @ 49: pop
[BaselineOp] Compiling op @ 50: goto
[BaselineOp] Compiling op @ 55: loophead
[BaselineOp] [block counter] Emitting a block counter for op @ 55: loophead (lineno: 412 column: 0)
[BaselineOp] Compiling op @ 56: getlocal
[BaselineOp] [block counter] Emitting a block counter for op @ 56: getlocal (lineno: 412 column: 12)
[BaselineOp] Compiling op @ 59: string
[BaselineOp] Compiling op @ 64: getarg
[BaselineOp] Compiling op @ 67: getlocal
[BaselineOp] Compiling op @ 70: getelem
[BaselineOp] Compiling op @ 71: getlocal
[BaselineOp] Compiling op @ 74: getelem
[BaselineOp] Compiling op @ 75: add
[BaselineOp] Compiling op @ 76: string
[BaselineOp] Compiling op @ 81: add
[BaselineOp] Compiling op @ 82: add
[BaselineOp] Compiling op @ 83: setlocal
[BaselineOp] Compiling op @ 86: pop
[BaselineOp] Compiling op @ 87: getlocal
[BaselineOp] Compiling op @ 90: pos
[BaselineOp] Compiling op @ 91: dup
[BaselineOp] Compiling op @ 92: one
[BaselineOp] Compiling op @ 93: add
[BaselineOp] Compiling op @ 94: setlocal
[BaselineOp] Compiling op @ 97: pop
[BaselineOp] Compiling op @ 98: pop
[BaselineOp] Compiling op @ 99: loopentry
[BaselineOp] [block counter] Emitting a block counter for op @ 99: loopentry (lineno: 411 column: 24)
[BaselineOp] Compiling op @ 101: getlocal
[BaselineOp] Compiling op @ 104: getlocal
[BaselineOp] Compiling op @ 107: lt
[BaselineOp] Compiling op @ 108: ifne
[BaselineOp] Compiling op @ 113: getlocal
[BaselineOp] [block counter] Emitting a block counter for op @ 113: getlocal (lineno: 414 column: 8)
[BaselineOp] Compiling op @ 116: string
[BaselineOp] Compiling op @ 121: add
[BaselineOp] Compiling op @ 122: setlocal
[BaselineOp] Compiling op @ 125: pop
[BaselineOp] Compiling op @ 126: getlocal
[BaselineOp] Compiling op @ 129: pos
[BaselineOp] Compiling op @ 130: dup
[BaselineOp] Compiling op @ 131: one
[BaselineOp] Compiling op @ 132: add
[BaselineOp] Compiling op @ 133: setlocal
[BaselineOp] Compiling op @ 136: pop
[BaselineOp] Compiling op @ 137: pop
[BaselineOp] Compiling op @ 138: loopentry
[BaselineOp] [block counter] Emitting a block counter for op @ 138: loopentry (lineno: 409 column: 20)
[BaselineOp] Compiling op @ 140: getlocal
[BaselineOp] Compiling op @ 143: getlocal
[BaselineOp] Compiling op @ 146: lt
[BaselineOp] Compiling op @ 147: ifne
[BaselineOp] Compiling op @ 152: getlocal
[BaselineOp] [block counter] Emitting a block counter for op @ 152: getlocal (lineno: 416 column: 4)
[BaselineOp] Compiling op @ 155: string
[BaselineOp] Compiling op @ 160: string
[BaselineOp] Compiling op @ 165: add
[BaselineOp] Compiling op @ 166: add
[BaselineOp] Compiling op @ 167: setlocal
[BaselineOp] Compiling op @ 170: pop
[BaselineOp] Compiling op @ 171: getlocal
[BaselineOp] Compiling op @ 174: return
[BaselineOp] Compiling op @ 175: stop
[BaselineScripts] Created BaselineScript 0x2bb4e40 (raw 0x7f2210531040) for 3d-raytrace.js:405
[BaselineScripts] [block counter] 8 block counters were emitted for script 3d-raytrace.js:405 (0x2bb4e40) (lineno: 438 column: 13)
