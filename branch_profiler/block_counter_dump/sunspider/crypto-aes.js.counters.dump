[BaselineOp] Analyzing op @ 0 (end=954): getarg
[BaselineOp] Analyzing op @ 3 (end=954): uint16
[BaselineOp] Analyzing op @ 6 (end=954): eq
[BaselineOp] Analyzing op @ 7 (end=954): or
[BaselineOp] Analyzing op @ 12 (end=954): pop
[BaselineOp] Analyzing op @ 13 (end=954): getarg
[BaselineOp] Analyzing op @ 16 (end=954): uint16
[BaselineOp] Analyzing op @ 19 (end=954): eq
[BaselineOp] Analyzing op @ 20 (end=954): or
[BaselineOp] Analyzing op @ 25 (end=954): pop
[BaselineOp] Analyzing op @ 26 (end=954): getarg
[BaselineOp] Analyzing op @ 29 (end=954): uint16
[BaselineOp] Analyzing op @ 32 (end=954): eq
[BaselineOp] Analyzing op @ 33 (end=954): not
[BaselineOp] Analyzing op @ 34 (end=954): ifeq
[BaselineOp] Analyzing op @ 39 (end=954): string
[BaselineOp] Analyzing op @ 44 (end=954): return
[BaselineOp] Analyzing op @ 45 (end=954): getarg
[BaselineOp] Analyzing op @ 48 (end=954): int8
[BaselineOp] Analyzing op @ 50 (end=954): div
[BaselineOp] Analyzing op @ 51 (end=954): setlocal
[BaselineOp] Analyzing op @ 54 (end=954): pop
[BaselineOp] Analyzing op @ 55 (end=954): getgname
[BaselineOp] Analyzing op @ 60 (end=954): undefined
[BaselineOp] Analyzing op @ 61 (end=954): notearg
[BaselineOp] Analyzing op @ 62 (end=954): getlocal
[BaselineOp] Analyzing op @ 65 (end=954): notearg
[BaselineOp] Analyzing op @ 66 (end=954): new
[BaselineOp] Analyzing op @ 69 (end=954): setlocal
[BaselineOp] Analyzing op @ 72 (end=954): pop
[BaselineOp] Analyzing op @ 73 (end=954): zero
[BaselineOp] Analyzing op @ 74 (end=954): setlocal
[BaselineOp] Analyzing op @ 77 (end=954): pop
[BaselineOp] Analyzing op @ 78 (end=954): goto
[BaselineOp] Analyzing op @ 83 (end=954): loophead
[BaselineOp] Analyzing op @ 84 (end=954): getlocal
[BaselineOp] Analyzing op @ 87 (end=954): getlocal
[BaselineOp] Analyzing op @ 90 (end=954): getarg
[BaselineOp] Analyzing op @ 93 (end=954): dup
[BaselineOp] Analyzing op @ 94 (end=954): callprop
[BaselineOp] Analyzing op @ 99 (end=954): swap
[BaselineOp] Analyzing op @ 100 (end=954): notearg
[BaselineOp] Analyzing op @ 101 (end=954): getlocal
[BaselineOp] Analyzing op @ 104 (end=954): notearg
[BaselineOp] Analyzing op @ 105 (end=954): call
[BaselineOp] Analyzing op @ 108 (end=954): uint16
[BaselineOp] Analyzing op @ 111 (end=954): bitand
[BaselineOp] Analyzing op @ 112 (end=954): setelem
[BaselineOp] Analyzing op @ 113 (end=954): pop
[BaselineOp] Analyzing op @ 114 (end=954): getlocal
[BaselineOp] Analyzing op @ 117 (end=954): pos
[BaselineOp] Analyzing op @ 118 (end=954): dup
[BaselineOp] Analyzing op @ 119 (end=954): one
[BaselineOp] Analyzing op @ 120 (end=954): add
[BaselineOp] Analyzing op @ 121 (end=954): setlocal
[BaselineOp] Analyzing op @ 124 (end=954): pop
[BaselineOp] Analyzing op @ 125 (end=954): pop
[BaselineOp] Analyzing op @ 126 (end=954): loopentry
[BaselineOp] Analyzing op @ 128 (end=954): getlocal
[BaselineOp] Analyzing op @ 131 (end=954): getlocal
[BaselineOp] Analyzing op @ 134 (end=954): lt
[BaselineOp] Analyzing op @ 135 (end=954): ifne
[BaselineOp] Analyzing op @ 84 (end=954): getlocal
[BaselineOp] Analyzing op @ 87 (end=954): getlocal
[BaselineOp] Analyzing op @ 90 (end=954): getarg
[BaselineOp] Analyzing op @ 93 (end=954): dup
[BaselineOp] Analyzing op @ 94 (end=954): callprop
[BaselineOp] Analyzing op @ 99 (end=954): swap
[BaselineOp] Analyzing op @ 100 (end=954): notearg
[BaselineOp] Analyzing op @ 101 (end=954): getlocal
[BaselineOp] Analyzing op @ 104 (end=954): notearg
[BaselineOp] Analyzing op @ 105 (end=954): call
[BaselineOp] Analyzing op @ 108 (end=954): uint16
[BaselineOp] Analyzing op @ 111 (end=954): bitand
[BaselineOp] Analyzing op @ 112 (end=954): setelem
[BaselineOp] Analyzing op @ 113 (end=954): pop
[BaselineOp] Analyzing op @ 114 (end=954): getlocal
[BaselineOp] Analyzing op @ 117 (end=954): pos
[BaselineOp] Analyzing op @ 118 (end=954): dup
[BaselineOp] Analyzing op @ 119 (end=954): one
[BaselineOp] Analyzing op @ 120 (end=954): add
[BaselineOp] Analyzing op @ 121 (end=954): setlocal
[BaselineOp] Analyzing op @ 124 (end=954): pop
[BaselineOp] Analyzing op @ 125 (end=954): pop
[BaselineOp] Analyzing op @ 126 (end=954): loopentry
[BaselineOp] Analyzing op @ 128 (end=954): getlocal
[BaselineOp] Analyzing op @ 131 (end=954): getlocal
[BaselineOp] Analyzing op @ 134 (end=954): lt
[BaselineOp] Analyzing op @ 135 (end=954): ifne
[BaselineOp] Analyzing op @ 140 (end=954): callgname
[BaselineOp] Analyzing op @ 145 (end=954): undefined
[BaselineOp] Analyzing op @ 146 (end=954): notearg
[BaselineOp] Analyzing op @ 147 (end=954): getlocal
[BaselineOp] Analyzing op @ 150 (end=954): notearg
[BaselineOp] Analyzing op @ 151 (end=954): callgname
[BaselineOp] Analyzing op @ 156 (end=954): undefined
[BaselineOp] Analyzing op @ 157 (end=954): notearg
[BaselineOp] Analyzing op @ 158 (end=954): getlocal
[BaselineOp] Analyzing op @ 161 (end=954): notearg
[BaselineOp] Analyzing op @ 162 (end=954): call
[BaselineOp] Analyzing op @ 165 (end=954): notearg
[BaselineOp] Analyzing op @ 166 (end=954): call
[BaselineOp] Analyzing op @ 169 (end=954): setlocal
[BaselineOp] Analyzing op @ 172 (end=954): pop
[BaselineOp] Analyzing op @ 173 (end=954): getlocal
[BaselineOp] Analyzing op @ 176 (end=954): dup
[BaselineOp] Analyzing op @ 177 (end=954): callprop
[BaselineOp] Analyzing op @ 182 (end=954): swap
[BaselineOp] Analyzing op @ 183 (end=954): notearg
[BaselineOp] Analyzing op @ 184 (end=954): getlocal
[BaselineOp] Analyzing op @ 187 (end=954): dup
[BaselineOp] Analyzing op @ 188 (end=954): callprop
[BaselineOp] Analyzing op @ 193 (end=954): swap
[BaselineOp] Analyzing op @ 194 (end=954): notearg
[BaselineOp] Analyzing op @ 195 (end=954): zero
[BaselineOp] Analyzing op @ 196 (end=954): notearg
[BaselineOp] Analyzing op @ 197 (end=954): getlocal
[BaselineOp] Analyzing op @ 200 (end=954): int8
[BaselineOp] Analyzing op @ 202 (end=954): sub
[BaselineOp] Analyzing op @ 203 (end=954): notearg
[BaselineOp] Analyzing op @ 204 (end=954): call
[BaselineOp] Analyzing op @ 207 (end=954): notearg
[BaselineOp] Analyzing op @ 208 (end=954): call
[BaselineOp] Analyzing op @ 211 (end=954): setlocal
[BaselineOp] Analyzing op @ 214 (end=954): pop
[BaselineOp] Analyzing op @ 215 (end=954): int8
[BaselineOp] Analyzing op @ 217 (end=954): setlocal
[BaselineOp] Analyzing op @ 220 (end=954): pop
[BaselineOp] Analyzing op @ 221 (end=954): getgname
[BaselineOp] Analyzing op @ 226 (end=954): undefined
[BaselineOp] Analyzing op @ 227 (end=954): notearg
[BaselineOp] Analyzing op @ 228 (end=954): getlocal
[BaselineOp] Analyzing op @ 231 (end=954): notearg
[BaselineOp] Analyzing op @ 232 (end=954): new
[BaselineOp] Analyzing op @ 235 (end=954): setlocal
[BaselineOp] Analyzing op @ 238 (end=954): pop
[BaselineOp] Analyzing op @ 239 (end=954): getgname
[BaselineOp] Analyzing op @ 244 (end=954): undefined
[BaselineOp] Analyzing op @ 245 (end=954): notearg
[BaselineOp] Analyzing op @ 246 (end=954): new
[BaselineOp] Analyzing op @ 249 (end=954): dup
[BaselineOp] Analyzing op @ 250 (end=954): callprop
[BaselineOp] Analyzing op @ 255 (end=954): swap
[BaselineOp] Analyzing op @ 256 (end=954): notearg
[BaselineOp] Analyzing op @ 257 (end=954): call
[BaselineOp] Analyzing op @ 260 (end=954): setlocal
[BaselineOp] Analyzing op @ 263 (end=954): pop
[BaselineOp] Analyzing op @ 264 (end=954): zero
[BaselineOp] Analyzing op @ 265 (end=954): setlocal
[BaselineOp] Analyzing op @ 268 (end=954): pop
[BaselineOp] Analyzing op @ 269 (end=954): goto
[BaselineOp] Analyzing op @ 274 (end=954): loophead
[BaselineOp] Analyzing op @ 275 (end=954): getlocal
[BaselineOp] Analyzing op @ 278 (end=954): getlocal
[BaselineOp] Analyzing op @ 281 (end=954): getlocal
[BaselineOp] Analyzing op @ 284 (end=954): getlocal
[BaselineOp] Analyzing op @ 287 (end=954): int8
[BaselineOp] Analyzing op @ 289 (end=954): mul
[BaselineOp] Analyzing op @ 290 (end=954): ursh
[BaselineOp] Analyzing op @ 291 (end=954): uint16
[BaselineOp] Analyzing op @ 294 (end=954): bitand
[BaselineOp] Analyzing op @ 295 (end=954): setelem
[BaselineOp] Analyzing op @ 296 (end=954): pop
[BaselineOp] Analyzing op @ 297 (end=954): getlocal
[BaselineOp] Analyzing op @ 300 (end=954): pos
[BaselineOp] Analyzing op @ 301 (end=954): dup
[BaselineOp] Analyzing op @ 302 (end=954): one
[BaselineOp] Analyzing op @ 303 (end=954): add
[BaselineOp] Analyzing op @ 304 (end=954): setlocal
[BaselineOp] Analyzing op @ 307 (end=954): pop
[BaselineOp] Analyzing op @ 308 (end=954): pop
[BaselineOp] Analyzing op @ 309 (end=954): loopentry
[BaselineOp] Analyzing op @ 311 (end=954): getlocal
[BaselineOp] Analyzing op @ 314 (end=954): int8
[BaselineOp] Analyzing op @ 316 (end=954): lt
[BaselineOp] Analyzing op @ 317 (end=954): ifne
[BaselineOp] Analyzing op @ 275 (end=954): getlocal
[BaselineOp] Analyzing op @ 278 (end=954): getlocal
[BaselineOp] Analyzing op @ 281 (end=954): getlocal
[BaselineOp] Analyzing op @ 284 (end=954): getlocal
[BaselineOp] Analyzing op @ 287 (end=954): int8
[BaselineOp] Analyzing op @ 289 (end=954): mul
[BaselineOp] Analyzing op @ 290 (end=954): ursh
[BaselineOp] Analyzing op @ 291 (end=954): uint16
[BaselineOp] Analyzing op @ 294 (end=954): bitand
[BaselineOp] Analyzing op @ 295 (end=954): setelem
[BaselineOp] Analyzing op @ 296 (end=954): pop
[BaselineOp] Analyzing op @ 297 (end=954): getlocal
[BaselineOp] Analyzing op @ 300 (end=954): pos
[BaselineOp] Analyzing op @ 301 (end=954): dup
[BaselineOp] Analyzing op @ 302 (end=954): one
[BaselineOp] Analyzing op @ 303 (end=954): add
[BaselineOp] Analyzing op @ 304 (end=954): setlocal
[BaselineOp] Analyzing op @ 307 (end=954): pop
[BaselineOp] Analyzing op @ 308 (end=954): pop
[BaselineOp] Analyzing op @ 309 (end=954): loopentry
[BaselineOp] Analyzing op @ 311 (end=954): getlocal
[BaselineOp] Analyzing op @ 314 (end=954): int8
[BaselineOp] Analyzing op @ 316 (end=954): lt
[BaselineOp] Analyzing op @ 317 (end=954): ifne
[BaselineOp] Analyzing op @ 322 (end=954): zero
[BaselineOp] Analyzing op @ 323 (end=954): setlocal
[BaselineOp] Analyzing op @ 326 (end=954): pop
[BaselineOp] Analyzing op @ 327 (end=954): goto
[BaselineOp] Analyzing op @ 332 (end=954): loophead
[BaselineOp] Analyzing op @ 333 (end=954): getlocal
[BaselineOp] Analyzing op @ 336 (end=954): getlocal
[BaselineOp] Analyzing op @ 339 (end=954): int8
[BaselineOp] Analyzing op @ 341 (end=954): add
[BaselineOp] Analyzing op @ 342 (end=954): getlocal
[BaselineOp] Analyzing op @ 345 (end=954): double
[BaselineOp] Analyzing op @ 350 (end=954): div
[BaselineOp] Analyzing op @ 351 (end=954): getlocal
[BaselineOp] Analyzing op @ 354 (end=954): int8
[BaselineOp] Analyzing op @ 356 (end=954): mul
[BaselineOp] Analyzing op @ 357 (end=954): ursh
[BaselineOp] Analyzing op @ 358 (end=954): uint16
[BaselineOp] Analyzing op @ 361 (end=954): bitand
[BaselineOp] Analyzing op @ 362 (end=954): setelem
[BaselineOp] Analyzing op @ 363 (end=954): pop
[BaselineOp] Analyzing op @ 364 (end=954): getlocal
[BaselineOp] Analyzing op @ 367 (end=954): pos
[BaselineOp] Analyzing op @ 368 (end=954): dup
[BaselineOp] Analyzing op @ 369 (end=954): one
[BaselineOp] Analyzing op @ 370 (end=954): add
[BaselineOp] Analyzing op @ 371 (end=954): setlocal
[BaselineOp] Analyzing op @ 374 (end=954): pop
[BaselineOp] Analyzing op @ 375 (end=954): pop
[BaselineOp] Analyzing op @ 376 (end=954): loopentry
[BaselineOp] Analyzing op @ 378 (end=954): getlocal
[BaselineOp] Analyzing op @ 381 (end=954): int8
[BaselineOp] Analyzing op @ 383 (end=954): lt
[BaselineOp] Analyzing op @ 384 (end=954): ifne
[BaselineOp] Analyzing op @ 333 (end=954): getlocal
[BaselineOp] Analyzing op @ 336 (end=954): getlocal
[BaselineOp] Analyzing op @ 339 (end=954): int8
[BaselineOp] Analyzing op @ 341 (end=954): add
[BaselineOp] Analyzing op @ 342 (end=954): getlocal
[BaselineOp] Analyzing op @ 345 (end=954): double
[BaselineOp] Analyzing op @ 350 (end=954): div
[BaselineOp] Analyzing op @ 351 (end=954): getlocal
[BaselineOp] Analyzing op @ 354 (end=954): int8
[BaselineOp] Analyzing op @ 356 (end=954): mul
[BaselineOp] Analyzing op @ 357 (end=954): ursh
[BaselineOp] Analyzing op @ 358 (end=954): uint16
[BaselineOp] Analyzing op @ 361 (end=954): bitand
[BaselineOp] Analyzing op @ 362 (end=954): setelem
[BaselineOp] Analyzing op @ 363 (end=954): pop
[BaselineOp] Analyzing op @ 364 (end=954): getlocal
[BaselineOp] Analyzing op @ 367 (end=954): pos
[BaselineOp] Analyzing op @ 368 (end=954): dup
[BaselineOp] Analyzing op @ 369 (end=954): one
[BaselineOp] Analyzing op @ 370 (end=954): add
[BaselineOp] Analyzing op @ 371 (end=954): setlocal
[BaselineOp] Analyzing op @ 374 (end=954): pop
[BaselineOp] Analyzing op @ 375 (end=954): pop
[BaselineOp] Analyzing op @ 376 (end=954): loopentry
[BaselineOp] Analyzing op @ 378 (end=954): getlocal
[BaselineOp] Analyzing op @ 381 (end=954): int8
[BaselineOp] Analyzing op @ 383 (end=954): lt
[BaselineOp] Analyzing op @ 384 (end=954): ifne
[BaselineOp] Analyzing op @ 389 (end=954): callgname
[BaselineOp] Analyzing op @ 394 (end=954): undefined
[BaselineOp] Analyzing op @ 395 (end=954): notearg
[BaselineOp] Analyzing op @ 396 (end=954): getlocal
[BaselineOp] Analyzing op @ 399 (end=954): notearg
[BaselineOp] Analyzing op @ 400 (end=954): call
[BaselineOp] Analyzing op @ 403 (end=954): setlocal
[BaselineOp] Analyzing op @ 406 (end=954): pop
[BaselineOp] Analyzing op @ 407 (end=954): getgname
[BaselineOp] Analyzing op @ 412 (end=954): dup
[BaselineOp] Analyzing op @ 413 (end=954): callprop
[BaselineOp] Analyzing op @ 418 (end=954): swap
[BaselineOp] Analyzing op @ 419 (end=954): notearg
[BaselineOp] Analyzing op @ 420 (end=954): getarg
[BaselineOp] Analyzing op @ 423 (end=954): length
[BaselineOp] Analyzing op @ 428 (end=954): getlocal
[BaselineOp] Analyzing op @ 431 (end=954): div
[BaselineOp] Analyzing op @ 432 (end=954): notearg
[BaselineOp] Analyzing op @ 433 (end=954): call
[BaselineOp] Analyzing op @ 436 (end=954): setlocal
[BaselineOp] Analyzing op @ 439 (end=954): pop
[BaselineOp] Analyzing op @ 440 (end=954): getgname
[BaselineOp] Analyzing op @ 445 (end=954): undefined
[BaselineOp] Analyzing op @ 446 (end=954): notearg
[BaselineOp] Analyzing op @ 447 (end=954): getlocal
[BaselineOp] Analyzing op @ 450 (end=954): notearg
[BaselineOp] Analyzing op @ 451 (end=954): new
[BaselineOp] Analyzing op @ 454 (end=954): setlocal
[BaselineOp] Analyzing op @ 457 (end=954): pop
[BaselineOp] Analyzing op @ 458 (end=954): zero
[BaselineOp] Analyzing op @ 459 (end=954): setlocal
[BaselineOp] Analyzing op @ 462 (end=954): pop
[BaselineOp] Analyzing op @ 463 (end=954): goto
[BaselineOp] Analyzing op @ 468 (end=954): loophead
[BaselineOp] Analyzing op @ 469 (end=954): zero
[BaselineOp] Analyzing op @ 470 (end=954): setlocal
[BaselineOp] Analyzing op @ 473 (end=954): pop
[BaselineOp] Analyzing op @ 474 (end=954): goto
[BaselineOp] Analyzing op @ 479 (end=954): loophead
[BaselineOp] Analyzing op @ 480 (end=954): getlocal
[BaselineOp] Analyzing op @ 483 (end=954): int8
[BaselineOp] Analyzing op @ 485 (end=954): getlocal
[BaselineOp] Analyzing op @ 488 (end=954): sub
[BaselineOp] Analyzing op @ 489 (end=954): getlocal
[BaselineOp] Analyzing op @ 492 (end=954): getlocal
[BaselineOp] Analyzing op @ 495 (end=954): int8
[BaselineOp] Analyzing op @ 497 (end=954): mul
[BaselineOp] Analyzing op @ 498 (end=954): ursh
[BaselineOp] Analyzing op @ 499 (end=954): uint16
[BaselineOp] Analyzing op @ 502 (end=954): bitand
[BaselineOp] Analyzing op @ 503 (end=954): setelem
[BaselineOp] Analyzing op @ 504 (end=954): pop
[BaselineOp] Analyzing op @ 505 (end=954): getlocal
[BaselineOp] Analyzing op @ 508 (end=954): pos
[BaselineOp] Analyzing op @ 509 (end=954): dup
[BaselineOp] Analyzing op @ 510 (end=954): one
[BaselineOp] Analyzing op @ 511 (end=954): add
[BaselineOp] Analyzing op @ 512 (end=954): setlocal
[BaselineOp] Analyzing op @ 515 (end=954): pop
[BaselineOp] Analyzing op @ 516 (end=954): pop
[BaselineOp] Analyzing op @ 517 (end=954): loopentry
[BaselineOp] Analyzing op @ 519 (end=954): getlocal
[BaselineOp] Analyzing op @ 522 (end=954): int8
[BaselineOp] Analyzing op @ 524 (end=954): lt
[BaselineOp] Analyzing op @ 525 (end=954): ifne
[BaselineOp] Analyzing op @ 530 (end=954): zero
[BaselineOp] Analyzing op @ 531 (end=954): setlocal
[BaselineOp] Analyzing op @ 534 (end=954): pop
[BaselineOp] Analyzing op @ 535 (end=954): goto
[BaselineOp] Analyzing op @ 540 (end=954): loophead
[BaselineOp] Analyzing op @ 541 (end=954): getlocal
[BaselineOp] Analyzing op @ 544 (end=954): int8
[BaselineOp] Analyzing op @ 546 (end=954): getlocal
[BaselineOp] Analyzing op @ 549 (end=954): sub
[BaselineOp] Analyzing op @ 550 (end=954): int8
[BaselineOp] Analyzing op @ 552 (end=954): sub
[BaselineOp] Analyzing op @ 553 (end=954): getlocal
[BaselineOp] Analyzing op @ 556 (end=954): double
[BaselineOp] Analyzing op @ 561 (end=954): div
[BaselineOp] Analyzing op @ 562 (end=954): getlocal
[BaselineOp] Analyzing op @ 565 (end=954): int8
[BaselineOp] Analyzing op @ 567 (end=954): mul
[BaselineOp] Analyzing op @ 568 (end=954): ursh
[BaselineOp] Analyzing op @ 569 (end=954): setelem
[BaselineOp] Analyzing op @ 570 (end=954): pop
[BaselineOp] Analyzing op @ 571 (end=954): getlocal
[BaselineOp] Analyzing op @ 574 (end=954): pos
[BaselineOp] Analyzing op @ 575 (end=954): dup
[BaselineOp] Analyzing op @ 576 (end=954): one
[BaselineOp] Analyzing op @ 577 (end=954): add
[BaselineOp] Analyzing op @ 578 (end=954): setlocal
[BaselineOp] Analyzing op @ 581 (end=954): pop
[BaselineOp] Analyzing op @ 582 (end=954): pop
[BaselineOp] Analyzing op @ 583 (end=954): loopentry
[BaselineOp] Analyzing op @ 585 (end=954): getlocal
[BaselineOp] Analyzing op @ 588 (end=954): int8
[BaselineOp] Analyzing op @ 590 (end=954): lt
[BaselineOp] Analyzing op @ 591 (end=954): ifne
[BaselineOp] Analyzing op @ 596 (end=954): callgname
[BaselineOp] Analyzing op @ 601 (end=954): undefined
[BaselineOp] Analyzing op @ 602 (end=954): notearg
[BaselineOp] Analyzing op @ 603 (end=954): getlocal
[BaselineOp] Analyzing op @ 606 (end=954): notearg
[BaselineOp] Analyzing op @ 607 (end=954): getlocal
[BaselineOp] Analyzing op @ 610 (end=954): notearg
[BaselineOp] Analyzing op @ 611 (end=954): call
[BaselineOp] Analyzing op @ 614 (end=954): setlocal
[BaselineOp] Analyzing op @ 617 (end=954): pop
[BaselineOp] Analyzing op @ 618 (end=954): getlocal
[BaselineOp] Analyzing op @ 621 (end=954): getlocal
[BaselineOp] Analyzing op @ 624 (end=954): one
[BaselineOp] Analyzing op @ 625 (end=954): sub
[BaselineOp] Analyzing op @ 626 (end=954): lt
[BaselineOp] Analyzing op @ 627 (end=954): ifeq
[BaselineOp] Analyzing op @ 632 (end=954): getlocal
[BaselineOp] Analyzing op @ 635 (end=954): goto
[BaselineOp] Analyzing op @ 640 (end=954): getarg
[BaselineOp] Analyzing op @ 643 (end=954): length
[BaselineOp] Analyzing op @ 648 (end=954): one
[BaselineOp] Analyzing op @ 649 (end=954): sub
[BaselineOp] Analyzing op @ 650 (end=954): getlocal
[BaselineOp] Analyzing op @ 653 (end=954): mod
[BaselineOp] Analyzing op @ 654 (end=954): one
[BaselineOp] Analyzing op @ 655 (end=954): add
[BaselineOp] Analyzing op @ 656 (end=954): setlocal
[BaselineOp] Analyzing op @ 659 (end=954): pop
[BaselineOp] Analyzing op @ 660 (end=954): string
[BaselineOp] Analyzing op @ 665 (end=954): setlocal
[BaselineOp] Analyzing op @ 668 (end=954): pop
[BaselineOp] Analyzing op @ 669 (end=954): zero
[BaselineOp] Analyzing op @ 670 (end=954): setlocal
[BaselineOp] Analyzing op @ 673 (end=954): pop
[BaselineOp] Analyzing op @ 674 (end=954): goto
[BaselineOp] Analyzing op @ 679 (end=954): loophead
[BaselineOp] Analyzing op @ 680 (end=954): getarg
[BaselineOp] Analyzing op @ 683 (end=954): dup
[BaselineOp] Analyzing op @ 684 (end=954): callprop
[BaselineOp] Analyzing op @ 689 (end=954): swap
[BaselineOp] Analyzing op @ 690 (end=954): notearg
[BaselineOp] Analyzing op @ 691 (end=954): getlocal
[BaselineOp] Analyzing op @ 694 (end=954): getlocal
[BaselineOp] Analyzing op @ 697 (end=954): mul
[BaselineOp] Analyzing op @ 698 (end=954): getlocal
[BaselineOp] Analyzing op @ 701 (end=954): add
[BaselineOp] Analyzing op @ 702 (end=954): notearg
[BaselineOp] Analyzing op @ 703 (end=954): call
[BaselineOp] Analyzing op @ 706 (end=954): setlocal
[BaselineOp] Analyzing op @ 709 (end=954): pop
[BaselineOp] Analyzing op @ 710 (end=954): getlocal
[BaselineOp] Analyzing op @ 713 (end=954): getlocal
[BaselineOp] Analyzing op @ 716 (end=954): getlocal
[BaselineOp] Analyzing op @ 719 (end=954): getelem
[BaselineOp] Analyzing op @ 720 (end=954): bitxor
[BaselineOp] Analyzing op @ 721 (end=954): setlocal
[BaselineOp] Analyzing op @ 724 (end=954): pop
[BaselineOp] Analyzing op @ 725 (end=954): getlocal
[BaselineOp] Analyzing op @ 728 (end=954): getgname
[BaselineOp] Analyzing op @ 733 (end=954): dup
[BaselineOp] Analyzing op @ 734 (end=954): callprop
[BaselineOp] Analyzing op @ 739 (end=954): swap
[BaselineOp] Analyzing op @ 740 (end=954): notearg
[BaselineOp] Analyzing op @ 741 (end=954): getlocal
[BaselineOp] Analyzing op @ 744 (end=954): notearg
[BaselineOp] Analyzing op @ 745 (end=954): call
[BaselineOp] Analyzing op @ 748 (end=954): add
[BaselineOp] Analyzing op @ 749 (end=954): setlocal
[BaselineOp] Analyzing op @ 752 (end=954): pop
[BaselineOp] Analyzing op @ 753 (end=954): getlocal
[BaselineOp] Analyzing op @ 756 (end=954): pos
[BaselineOp] Analyzing op @ 757 (end=954): dup
[BaselineOp] Analyzing op @ 758 (end=954): one
[BaselineOp] Analyzing op @ 759 (end=954): add
[BaselineOp] Analyzing op @ 760 (end=954): setlocal
[BaselineOp] Analyzing op @ 763 (end=954): pop
[BaselineOp] Analyzing op @ 764 (end=954): pop
[BaselineOp] Analyzing op @ 765 (end=954): loopentry
[BaselineOp] Analyzing op @ 767 (end=954): getlocal
[BaselineOp] Analyzing op @ 770 (end=954): getlocal
[BaselineOp] Analyzing op @ 773 (end=954): lt
[BaselineOp] Analyzing op @ 774 (end=954): ifne
[BaselineOp] Analyzing op @ 779 (end=954): getlocal
[BaselineOp] Analyzing op @ 782 (end=954): getlocal
[BaselineOp] Analyzing op @ 785 (end=954): callgname
[BaselineOp] Analyzing op @ 790 (end=954): undefined
[BaselineOp] Analyzing op @ 791 (end=954): notearg
[BaselineOp] Analyzing op @ 792 (end=954): getlocal
[BaselineOp] Analyzing op @ 795 (end=954): notearg
[BaselineOp] Analyzing op @ 796 (end=954): call
[BaselineOp] Analyzing op @ 799 (end=954): setelem
[BaselineOp] Analyzing op @ 800 (end=954): pop
[BaselineOp] Analyzing op @ 801 (end=954): getlocal
[BaselineOp] Analyzing op @ 804 (end=954): pos
[BaselineOp] Analyzing op @ 805 (end=954): dup
[BaselineOp] Analyzing op @ 806 (end=954): one
[BaselineOp] Analyzing op @ 807 (end=954): add
[BaselineOp] Analyzing op @ 808 (end=954): setlocal
[BaselineOp] Analyzing op @ 811 (end=954): pop
[BaselineOp] Analyzing op @ 812 (end=954): pop
[BaselineOp] Analyzing op @ 813 (end=954): loopentry
[BaselineOp] Analyzing op @ 815 (end=954): getlocal
[BaselineOp] Analyzing op @ 818 (end=954): getlocal
[BaselineOp] Analyzing op @ 821 (end=954): lt
[BaselineOp] Analyzing op @ 822 (end=954): ifne
[BaselineOp] Analyzing op @ 469 (end=954): zero
[BaselineOp] Analyzing op @ 470 (end=954): setlocal
[BaselineOp] Analyzing op @ 473 (end=954): pop
[BaselineOp] Analyzing op @ 474 (end=954): goto
[BaselineOp] Analyzing op @ 479 (end=954): loophead
[BaselineOp] Analyzing op @ 480 (end=954): getlocal
[BaselineOp] Analyzing op @ 483 (end=954): int8
[BaselineOp] Analyzing op @ 485 (end=954): getlocal
[BaselineOp] Analyzing op @ 488 (end=954): sub
[BaselineOp] Analyzing op @ 489 (end=954): getlocal
[BaselineOp] Analyzing op @ 492 (end=954): getlocal
[BaselineOp] Analyzing op @ 495 (end=954): int8
[BaselineOp] Analyzing op @ 497 (end=954): mul
[BaselineOp] Analyzing op @ 498 (end=954): ursh
[BaselineOp] Analyzing op @ 499 (end=954): uint16
[BaselineOp] Analyzing op @ 502 (end=954): bitand
[BaselineOp] Analyzing op @ 503 (end=954): setelem
[BaselineOp] Analyzing op @ 504 (end=954): pop
[BaselineOp] Analyzing op @ 505 (end=954): getlocal
[BaselineOp] Analyzing op @ 508 (end=954): pos
[BaselineOp] Analyzing op @ 509 (end=954): dup
[BaselineOp] Analyzing op @ 510 (end=954): one
[BaselineOp] Analyzing op @ 511 (end=954): add
[BaselineOp] Analyzing op @ 512 (end=954): setlocal
[BaselineOp] Analyzing op @ 515 (end=954): pop
[BaselineOp] Analyzing op @ 516 (end=954): pop
[BaselineOp] Analyzing op @ 517 (end=954): loopentry
[BaselineOp] Analyzing op @ 519 (end=954): getlocal
[BaselineOp] Analyzing op @ 522 (end=954): int8
[BaselineOp] Analyzing op @ 524 (end=954): lt
[BaselineOp] Analyzing op @ 525 (end=954): ifne
[BaselineOp] Analyzing op @ 480 (end=954): getlocal
[BaselineOp] Analyzing op @ 483 (end=954): int8
[BaselineOp] Analyzing op @ 485 (end=954): getlocal
[BaselineOp] Analyzing op @ 488 (end=954): sub
[BaselineOp] Analyzing op @ 489 (end=954): getlocal
[BaselineOp] Analyzing op @ 492 (end=954): getlocal
[BaselineOp] Analyzing op @ 495 (end=954): int8
[BaselineOp] Analyzing op @ 497 (end=954): mul
[BaselineOp] Analyzing op @ 498 (end=954): ursh
[BaselineOp] Analyzing op @ 499 (end=954): uint16
[BaselineOp] Analyzing op @ 502 (end=954): bitand
[BaselineOp] Analyzing op @ 503 (end=954): setelem
[BaselineOp] Analyzing op @ 504 (end=954): pop
[BaselineOp] Analyzing op @ 505 (end=954): getlocal
[BaselineOp] Analyzing op @ 508 (end=954): pos
[BaselineOp] Analyzing op @ 509 (end=954): dup
[BaselineOp] Analyzing op @ 510 (end=954): one
[BaselineOp] Analyzing op @ 511 (end=954): add
[BaselineOp] Analyzing op @ 512 (end=954): setlocal
[BaselineOp] Analyzing op @ 515 (end=954): pop
[BaselineOp] Analyzing op @ 516 (end=954): pop
[BaselineOp] Analyzing op @ 517 (end=954): loopentry
[BaselineOp] Analyzing op @ 519 (end=954): getlocal
[BaselineOp] Analyzing op @ 522 (end=954): int8
[BaselineOp] Analyzing op @ 524 (end=954): lt
[BaselineOp] Analyzing op @ 525 (end=954): ifne
[BaselineOp] Analyzing op @ 530 (end=954): zero
[BaselineOp] Analyzing op @ 531 (end=954): setlocal
[BaselineOp] Analyzing op @ 534 (end=954): pop
[BaselineOp] Analyzing op @ 535 (end=954): goto
[BaselineOp] Analyzing op @ 540 (end=954): loophead
[BaselineOp] Analyzing op @ 541 (end=954): getlocal
[BaselineOp] Analyzing op @ 544 (end=954): int8
[BaselineOp] Analyzing op @ 546 (end=954): getlocal
[BaselineOp] Analyzing op @ 549 (end=954): sub
[BaselineOp] Analyzing op @ 550 (end=954): int8
[BaselineOp] Analyzing op @ 552 (end=954): sub
[BaselineOp] Analyzing op @ 553 (end=954): getlocal
[BaselineOp] Analyzing op @ 556 (end=954): double
[BaselineOp] Analyzing op @ 561 (end=954): div
[BaselineOp] Analyzing op @ 562 (end=954): getlocal
[BaselineOp] Analyzing op @ 565 (end=954): int8
[BaselineOp] Analyzing op @ 567 (end=954): mul
[BaselineOp] Analyzing op @ 568 (end=954): ursh
[BaselineOp] Analyzing op @ 569 (end=954): setelem
[BaselineOp] Analyzing op @ 570 (end=954): pop
[BaselineOp] Analyzing op @ 571 (end=954): getlocal
[BaselineOp] Analyzing op @ 574 (end=954): pos
[BaselineOp] Analyzing op @ 575 (end=954): dup
[BaselineOp] Analyzing op @ 576 (end=954): one
[BaselineOp] Analyzing op @ 577 (end=954): add
[BaselineOp] Analyzing op @ 578 (end=954): setlocal
[BaselineOp] Analyzing op @ 581 (end=954): pop
[BaselineOp] Analyzing op @ 582 (end=954): pop
[BaselineOp] Analyzing op @ 583 (end=954): loopentry
[BaselineOp] Analyzing op @ 585 (end=954): getlocal
[BaselineOp] Analyzing op @ 588 (end=954): int8
[BaselineOp] Analyzing op @ 590 (end=954): lt
[BaselineOp] Analyzing op @ 591 (end=954): ifne
[BaselineOp] Analyzing op @ 541 (end=954): getlocal
[BaselineOp] Analyzing op @ 544 (end=954): int8
[BaselineOp] Analyzing op @ 546 (end=954): getlocal
[BaselineOp] Analyzing op @ 549 (end=954): sub
[BaselineOp] Analyzing op @ 550 (end=954): int8
[BaselineOp] Analyzing op @ 552 (end=954): sub
[BaselineOp] Analyzing op @ 553 (end=954): getlocal
[BaselineOp] Analyzing op @ 556 (end=954): double
[BaselineOp] Analyzing op @ 561 (end=954): div
[BaselineOp] Analyzing op @ 562 (end=954): getlocal
[BaselineOp] Analyzing op @ 565 (end=954): int8
[BaselineOp] Analyzing op @ 567 (end=954): mul
[BaselineOp] Analyzing op @ 568 (end=954): ursh
[BaselineOp] Analyzing op @ 569 (end=954): setelem
[BaselineOp] Analyzing op @ 570 (end=954): pop
[BaselineOp] Analyzing op @ 571 (end=954): getlocal
[BaselineOp] Analyzing op @ 574 (end=954): pos
[BaselineOp] Analyzing op @ 575 (end=954): dup
[BaselineOp] Analyzing op @ 576 (end=954): one
[BaselineOp] Analyzing op @ 577 (end=954): add
[BaselineOp] Analyzing op @ 578 (end=954): setlocal
[BaselineOp] Analyzing op @ 581 (end=954): pop
[BaselineOp] Analyzing op @ 582 (end=954): pop
[BaselineOp] Analyzing op @ 583 (end=954): loopentry
[BaselineOp] Analyzing op @ 585 (end=954): getlocal
[BaselineOp] Analyzing op @ 588 (end=954): int8
[BaselineOp] Analyzing op @ 590 (end=954): lt
[BaselineOp] Analyzing op @ 591 (end=954): ifne
[BaselineOp] Analyzing op @ 596 (end=954): callgname
[BaselineOp] Analyzing op @ 601 (end=954): undefined
[BaselineOp] Analyzing op @ 602 (end=954): notearg
[BaselineOp] Analyzing op @ 603 (end=954): getlocal
[BaselineOp] Analyzing op @ 606 (end=954): notearg
[BaselineOp] Analyzing op @ 607 (end=954): getlocal
[BaselineOp] Analyzing op @ 610 (end=954): notearg
[BaselineOp] Analyzing op @ 611 (end=954): call
[BaselineOp] Analyzing op @ 614 (end=954): setlocal
[BaselineOp] Analyzing op @ 617 (end=954): pop
[BaselineOp] Analyzing op @ 618 (end=954): getlocal
[BaselineOp] Analyzing op @ 621 (end=954): getlocal
[BaselineOp] Analyzing op @ 624 (end=954): one
[BaselineOp] Analyzing op @ 625 (end=954): sub
[BaselineOp] Analyzing op @ 626 (end=954): lt
[BaselineOp] Analyzing op @ 627 (end=954): ifeq
[BaselineOp] Analyzing op @ 632 (end=954): getlocal
[BaselineOp] Analyzing op @ 635 (end=954): goto
[BaselineOp] Analyzing op @ 640 (end=954): getarg
[BaselineOp] Analyzing op @ 643 (end=954): length
[BaselineOp] Analyzing op @ 648 (end=954): one
[BaselineOp] Analyzing op @ 649 (end=954): sub
[BaselineOp] Analyzing op @ 650 (end=954): getlocal
[BaselineOp] Analyzing op @ 653 (end=954): mod
[BaselineOp] Analyzing op @ 654 (end=954): one
[BaselineOp] Analyzing op @ 655 (end=954): add
[BaselineOp] Analyzing op @ 656 (end=954): setlocal
[BaselineOp] Analyzing op @ 659 (end=954): pop
[BaselineOp] Analyzing op @ 660 (end=954): string
[BaselineOp] Analyzing op @ 665 (end=954): setlocal
[BaselineOp] Analyzing op @ 668 (end=954): pop
[BaselineOp] Analyzing op @ 669 (end=954): zero
[BaselineOp] Analyzing op @ 670 (end=954): setlocal
[BaselineOp] Analyzing op @ 673 (end=954): pop
[BaselineOp] Analyzing op @ 674 (end=954): goto
[BaselineOp] Analyzing op @ 679 (end=954): loophead
[BaselineOp] Analyzing op @ 680 (end=954): getarg
[BaselineOp] Analyzing op @ 683 (end=954): dup
[BaselineOp] Analyzing op @ 684 (end=954): callprop
[BaselineOp] Analyzing op @ 689 (end=954): swap
[BaselineOp] Analyzing op @ 690 (end=954): notearg
[BaselineOp] Analyzing op @ 691 (end=954): getlocal
[BaselineOp] Analyzing op @ 694 (end=954): getlocal
[BaselineOp] Analyzing op @ 697 (end=954): mul
[BaselineOp] Analyzing op @ 698 (end=954): getlocal
[BaselineOp] Analyzing op @ 701 (end=954): add
[BaselineOp] Analyzing op @ 702 (end=954): notearg
[BaselineOp] Analyzing op @ 703 (end=954): call
[BaselineOp] Analyzing op @ 706 (end=954): setlocal
[BaselineOp] Analyzing op @ 709 (end=954): pop
[BaselineOp] Analyzing op @ 710 (end=954): getlocal
[BaselineOp] Analyzing op @ 713 (end=954): getlocal
[BaselineOp] Analyzing op @ 716 (end=954): getlocal
[BaselineOp] Analyzing op @ 719 (end=954): getelem
[BaselineOp] Analyzing op @ 720 (end=954): bitxor
[BaselineOp] Analyzing op @ 721 (end=954): setlocal
[BaselineOp] Analyzing op @ 724 (end=954): pop
[BaselineOp] Analyzing op @ 725 (end=954): getlocal
[BaselineOp] Analyzing op @ 728 (end=954): getgname
[BaselineOp] Analyzing op @ 733 (end=954): dup
[BaselineOp] Analyzing op @ 734 (end=954): callprop
[BaselineOp] Analyzing op @ 739 (end=954): swap
[BaselineOp] Analyzing op @ 740 (end=954): notearg
[BaselineOp] Analyzing op @ 741 (end=954): getlocal
[BaselineOp] Analyzing op @ 744 (end=954): notearg
[BaselineOp] Analyzing op @ 745 (end=954): call
[BaselineOp] Analyzing op @ 748 (end=954): add
[BaselineOp] Analyzing op @ 749 (end=954): setlocal
[BaselineOp] Analyzing op @ 752 (end=954): pop
[BaselineOp] Analyzing op @ 753 (end=954): getlocal
[BaselineOp] Analyzing op @ 756 (end=954): pos
[BaselineOp] Analyzing op @ 757 (end=954): dup
[BaselineOp] Analyzing op @ 758 (end=954): one
[BaselineOp] Analyzing op @ 759 (end=954): add
[BaselineOp] Analyzing op @ 760 (end=954): setlocal
[BaselineOp] Analyzing op @ 763 (end=954): pop
[BaselineOp] Analyzing op @ 764 (end=954): pop
[BaselineOp] Analyzing op @ 765 (end=954): loopentry
[BaselineOp] Analyzing op @ 767 (end=954): getlocal
[BaselineOp] Analyzing op @ 770 (end=954): getlocal
[BaselineOp] Analyzing op @ 773 (end=954): lt
[BaselineOp] Analyzing op @ 774 (end=954): ifne
[BaselineOp] Analyzing op @ 680 (end=954): getarg
[BaselineOp] Analyzing op @ 683 (end=954): dup
[BaselineOp] Analyzing op @ 684 (end=954): callprop
[BaselineOp] Analyzing op @ 689 (end=954): swap
[BaselineOp] Analyzing op @ 690 (end=954): notearg
[BaselineOp] Analyzing op @ 691 (end=954): getlocal
[BaselineOp] Analyzing op @ 694 (end=954): getlocal
[BaselineOp] Analyzing op @ 697 (end=954): mul
[BaselineOp] Analyzing op @ 698 (end=954): getlocal
[BaselineOp] Analyzing op @ 701 (end=954): add
[BaselineOp] Analyzing op @ 702 (end=954): notearg
[BaselineOp] Analyzing op @ 703 (end=954): call
[BaselineOp] Analyzing op @ 706 (end=954): setlocal
[BaselineOp] Analyzing op @ 709 (end=954): pop
[BaselineOp] Analyzing op @ 710 (end=954): getlocal
[BaselineOp] Analyzing op @ 713 (end=954): getlocal
[BaselineOp] Analyzing op @ 716 (end=954): getlocal
[BaselineOp] Analyzing op @ 719 (end=954): getelem
[BaselineOp] Analyzing op @ 720 (end=954): bitxor
[BaselineOp] Analyzing op @ 721 (end=954): setlocal
[BaselineOp] Analyzing op @ 724 (end=954): pop
[BaselineOp] Analyzing op @ 725 (end=954): getlocal
[BaselineOp] Analyzing op @ 728 (end=954): getgname
[BaselineOp] Analyzing op @ 733 (end=954): dup
[BaselineOp] Analyzing op @ 734 (end=954): callprop
[BaselineOp] Analyzing op @ 739 (end=954): swap
[BaselineOp] Analyzing op @ 740 (end=954): notearg
[BaselineOp] Analyzing op @ 741 (end=954): getlocal
[BaselineOp] Analyzing op @ 744 (end=954): notearg
[BaselineOp] Analyzing op @ 745 (end=954): call
[BaselineOp] Analyzing op @ 748 (end=954): add
[BaselineOp] Analyzing op @ 749 (end=954): setlocal
[BaselineOp] Analyzing op @ 752 (end=954): pop
[BaselineOp] Analyzing op @ 753 (end=954): getlocal
[BaselineOp] Analyzing op @ 756 (end=954): pos
[BaselineOp] Analyzing op @ 757 (end=954): dup
[BaselineOp] Analyzing op @ 758 (end=954): one
[BaselineOp] Analyzing op @ 759 (end=954): add
[BaselineOp] Analyzing op @ 760 (end=954): setlocal
[BaselineOp] Analyzing op @ 763 (end=954): pop
[BaselineOp] Analyzing op @ 764 (end=954): pop
[BaselineOp] Analyzing op @ 765 (end=954): loopentry
[BaselineOp] Analyzing op @ 767 (end=954): getlocal
[BaselineOp] Analyzing op @ 770 (end=954): getlocal
[BaselineOp] Analyzing op @ 773 (end=954): lt
[BaselineOp] Analyzing op @ 774 (end=954): ifne
[BaselineOp] Analyzing op @ 779 (end=954): getlocal
[BaselineOp] Analyzing op @ 782 (end=954): getlocal
[BaselineOp] Analyzing op @ 785 (end=954): callgname
[BaselineOp] Analyzing op @ 790 (end=954): undefined
[BaselineOp] Analyzing op @ 791 (end=954): notearg
[BaselineOp] Analyzing op @ 792 (end=954): getlocal
[BaselineOp] Analyzing op @ 795 (end=954): notearg
[BaselineOp] Analyzing op @ 796 (end=954): call
[BaselineOp] Analyzing op @ 799 (end=954): setelem
[BaselineOp] Analyzing op @ 800 (end=954): pop
[BaselineOp] Analyzing op @ 801 (end=954): getlocal
[BaselineOp] Analyzing op @ 804 (end=954): pos
[BaselineOp] Analyzing op @ 805 (end=954): dup
[BaselineOp] Analyzing op @ 806 (end=954): one
[BaselineOp] Analyzing op @ 807 (end=954): add
[BaselineOp] Analyzing op @ 808 (end=954): setlocal
[BaselineOp] Analyzing op @ 811 (end=954): pop
[BaselineOp] Analyzing op @ 812 (end=954): pop
[BaselineOp] Analyzing op @ 813 (end=954): loopentry
[BaselineOp] Analyzing op @ 815 (end=954): getlocal
[BaselineOp] Analyzing op @ 818 (end=954): getlocal
[BaselineOp] Analyzing op @ 821 (end=954): lt
[BaselineOp] Analyzing op @ 822 (end=954): ifne
[BaselineOp] Analyzing op @ 827 (end=954): string
[BaselineOp] Analyzing op @ 832 (end=954): setlocal
[BaselineOp] Analyzing op @ 835 (end=954): pop
[BaselineOp] Analyzing op @ 836 (end=954): zero
[BaselineOp] Analyzing op @ 837 (end=954): setlocal
[BaselineOp] Analyzing op @ 840 (end=954): pop
[BaselineOp] Analyzing op @ 841 (end=954): goto
[BaselineOp] Analyzing op @ 846 (end=954): loophead
[BaselineOp] Analyzing op @ 847 (end=954): getlocal
[BaselineOp] Analyzing op @ 850 (end=954): getgname
[BaselineOp] Analyzing op @ 855 (end=954): dup
[BaselineOp] Analyzing op @ 856 (end=954): callprop
[BaselineOp] Analyzing op @ 861 (end=954): swap
[BaselineOp] Analyzing op @ 862 (end=954): notearg
[BaselineOp] Analyzing op @ 863 (end=954): getlocal
[BaselineOp] Analyzing op @ 866 (end=954): getlocal
[BaselineOp] Analyzing op @ 869 (end=954): getelem
[BaselineOp] Analyzing op @ 870 (end=954): notearg
[BaselineOp] Analyzing op @ 871 (end=954): call
[BaselineOp] Analyzing op @ 874 (end=954): add
[BaselineOp] Analyzing op @ 875 (end=954): setlocal
[BaselineOp] Analyzing op @ 878 (end=954): pop
[BaselineOp] Analyzing op @ 879 (end=954): getlocal
[BaselineOp] Analyzing op @ 882 (end=954): pos
[BaselineOp] Analyzing op @ 883 (end=954): dup
[BaselineOp] Analyzing op @ 884 (end=954): one
[BaselineOp] Analyzing op @ 885 (end=954): add
[BaselineOp] Analyzing op @ 886 (end=954): setlocal
[BaselineOp] Analyzing op @ 889 (end=954): pop
[BaselineOp] Analyzing op @ 890 (end=954): pop
[BaselineOp] Analyzing op @ 891 (end=954): loopentry
[BaselineOp] Analyzing op @ 893 (end=954): getlocal
[BaselineOp] Analyzing op @ 896 (end=954): int8
[BaselineOp] Analyzing op @ 898 (end=954): lt
[BaselineOp] Analyzing op @ 899 (end=954): ifne
[BaselineOp] Analyzing op @ 847 (end=954): getlocal
[BaselineOp] Analyzing op @ 850 (end=954): getgname
[BaselineOp] Analyzing op @ 855 (end=954): dup
[BaselineOp] Analyzing op @ 856 (end=954): callprop
[BaselineOp] Analyzing op @ 861 (end=954): swap
[BaselineOp] Analyzing op @ 862 (end=954): notearg
[BaselineOp] Analyzing op @ 863 (end=954): getlocal
[BaselineOp] Analyzing op @ 866 (end=954): getlocal
[BaselineOp] Analyzing op @ 869 (end=954): getelem
[BaselineOp] Analyzing op @ 870 (end=954): notearg
[BaselineOp] Analyzing op @ 871 (end=954): call
[BaselineOp] Analyzing op @ 874 (end=954): add
[BaselineOp] Analyzing op @ 875 (end=954): setlocal
[BaselineOp] Analyzing op @ 878 (end=954): pop
[BaselineOp] Analyzing op @ 879 (end=954): getlocal
[BaselineOp] Analyzing op @ 882 (end=954): pos
[BaselineOp] Analyzing op @ 883 (end=954): dup
[BaselineOp] Analyzing op @ 884 (end=954): one
[BaselineOp] Analyzing op @ 885 (end=954): add
[BaselineOp] Analyzing op @ 886 (end=954): setlocal
[BaselineOp] Analyzing op @ 889 (end=954): pop
[BaselineOp] Analyzing op @ 890 (end=954): pop
[BaselineOp] Analyzing op @ 891 (end=954): loopentry
[BaselineOp] Analyzing op @ 893 (end=954): getlocal
[BaselineOp] Analyzing op @ 896 (end=954): int8
[BaselineOp] Analyzing op @ 898 (end=954): lt
[BaselineOp] Analyzing op @ 899 (end=954): ifne
[BaselineOp] Analyzing op @ 904 (end=954): callgname
[BaselineOp] Analyzing op @ 909 (end=954): undefined
[BaselineOp] Analyzing op @ 910 (end=954): notearg
[BaselineOp] Analyzing op @ 911 (end=954): getlocal
[BaselineOp] Analyzing op @ 914 (end=954): notearg
[BaselineOp] Analyzing op @ 915 (end=954): call
[BaselineOp] Analyzing op @ 918 (end=954): setlocal
[BaselineOp] Analyzing op @ 921 (end=954): pop
[BaselineOp] Analyzing op @ 922 (end=954): getlocal
[BaselineOp] Analyzing op @ 925 (end=954): string
[BaselineOp] Analyzing op @ 930 (end=954): add
[BaselineOp] Analyzing op @ 931 (end=954): getlocal
[BaselineOp] Analyzing op @ 934 (end=954): dup
[BaselineOp] Analyzing op @ 935 (end=954): callprop
[BaselineOp] Analyzing op @ 940 (end=954): swap
[BaselineOp] Analyzing op @ 941 (end=954): notearg
[BaselineOp] Analyzing op @ 942 (end=954): string
[BaselineOp] Analyzing op @ 947 (end=954): notearg
[BaselineOp] Analyzing op @ 948 (end=954): call
[BaselineOp] Analyzing op @ 951 (end=954): add
[BaselineOp] Analyzing op @ 952 (end=954): return
[BaselineOp] Analyzing op @ 953 (end=954): stop
[BaselineScripts] Baseline compiling script crypto-aes.js:164 (0x7fda8d0511f0)
[BaselineOp] Compiling op @ 0: getarg
[BaselineOp] Compiling op @ 3: uint16
[BaselineOp] Compiling op @ 6: eq
[BaselineOp] Compiling op @ 7: or
[BaselineOp] Compiling op @ 12: pop
[BaselineOp] [block counter] Emitting a block counter for op @ 12: pop (lineno: 165 column: 6)
[BaselineOp] Compiling op @ 13: getarg
[BaselineOp] Compiling op @ 16: uint16
[BaselineOp] Compiling op @ 19: eq
[BaselineOp] Compiling op @ 20: or
[BaselineOp] Compiling op @ 25: pop
[BaselineOp] [block counter] Emitting a block counter for op @ 25: pop (lineno: 165 column: 6)
[BaselineOp] Compiling op @ 26: getarg
[BaselineOp] Compiling op @ 29: uint16
[BaselineOp] Compiling op @ 32: eq
[BaselineOp] Compiling op @ 33: not
[BaselineOp] [block counter] Emitting a block counter for op @ 33: not (lineno: 165 column: 6)
[BaselineOp] Compiling op @ 34: ifeq
[BaselineOp] Compiling op @ 39: string
[BaselineOp] [block counter] Emitting a block counter for op @ 39: string (lineno: 165 column: 0)
[BaselineOp] Compiling op @ 44: return
[BaselineOp] Compiling op @ 45: getarg
[BaselineOp] [block counter] Emitting a block counter for op @ 45: getarg (lineno: 169 column: 0)
[BaselineOp] Compiling op @ 48: int8
[BaselineOp] Compiling op @ 50: div
[BaselineOp] Compiling op @ 51: setlocal
[BaselineOp] Compiling op @ 54: pop
[BaselineOp] Compiling op @ 55: getgname
[BaselineOp] Compiling op @ 60: undefined
[BaselineOp] Compiling op @ 61: notearg
[BaselineOp] Compiling op @ 62: getlocal
[BaselineOp] Compiling op @ 65: notearg
[BaselineOp] Compiling op @ 66: new
[BaselineOp] Compiling op @ 69: setlocal
[BaselineOp] Compiling op @ 72: pop
[BaselineOp] Compiling op @ 73: zero
[BaselineOp] Compiling op @ 74: setlocal
[BaselineOp] Compiling op @ 77: pop
[BaselineOp] Compiling op @ 78: goto
[BaselineOp] Compiling op @ 83: loophead
[BaselineOp] [block counter] Emitting a block counter for op @ 83: loophead (lineno: 171 column: 31)
[BaselineOp] Compiling op @ 84: getlocal
[BaselineOp] [block counter] Emitting a block counter for op @ 84: getlocal (lineno: 171 column: 31)
[BaselineOp] Compiling op @ 87: getlocal
[BaselineOp] Compiling op @ 90: getarg
[BaselineOp] Compiling op @ 93: dup
[BaselineOp] Compiling op @ 94: callprop
[BaselineOp] Compiling op @ 99: swap
[BaselineOp] Compiling op @ 100: notearg
[BaselineOp] Compiling op @ 101: getlocal
[BaselineOp] Compiling op @ 104: notearg
[BaselineOp] Compiling op @ 105: call
[BaselineOp] Compiling op @ 108: uint16
[BaselineOp] Compiling op @ 111: bitand
[BaselineOp] Compiling op @ 112: setelem
[BaselineOp] Compiling op @ 113: pop
[BaselineOp] Compiling op @ 114: getlocal
[BaselineOp] Compiling op @ 117: pos
[BaselineOp] Compiling op @ 118: dup
[BaselineOp] Compiling op @ 119: one
[BaselineOp] Compiling op @ 120: add
[BaselineOp] Compiling op @ 121: setlocal
[BaselineOp] Compiling op @ 124: pop
[BaselineOp] Compiling op @ 125: pop
[BaselineOp] Compiling op @ 126: loopentry
[BaselineOp] [block counter] Emitting a block counter for op @ 126: loopentry (lineno: 171 column: 16)
[BaselineOp] Compiling op @ 128: getlocal
[BaselineOp] Compiling op @ 131: getlocal
[BaselineOp] Compiling op @ 134: lt
[BaselineOp] Compiling op @ 135: ifne
[BaselineOp] Compiling op @ 140: callgname
[BaselineOp] [block counter] Emitting a block counter for op @ 140: callgname (lineno: 172 column: 0)
[BaselineOp] Compiling op @ 145: undefined
[BaselineOp] Compiling op @ 146: notearg
[BaselineOp] Compiling op @ 147: getlocal
[BaselineOp] Compiling op @ 150: notearg
[BaselineOp] Compiling op @ 151: callgname
[BaselineOp] Compiling op @ 156: undefined
[BaselineOp] Compiling op @ 157: notearg
[BaselineOp] Compiling op @ 158: getlocal
[BaselineOp] Compiling op @ 161: notearg
[BaselineOp] Compiling op @ 162: call
[BaselineOp] Compiling op @ 165: notearg
[BaselineOp] Compiling op @ 166: call
[BaselineOp] Compiling op @ 169: setlocal
[BaselineOp] Compiling op @ 172: pop
[BaselineOp] Compiling op @ 173: getlocal
[BaselineOp] Compiling op @ 176: dup
[BaselineOp] Compiling op @ 177: callprop
[BaselineOp] Compiling op @ 182: swap
[BaselineOp] Compiling op @ 183: notearg
[BaselineOp] Compiling op @ 184: getlocal
[BaselineOp] Compiling op @ 187: dup
[BaselineOp] Compiling op @ 188: callprop
[BaselineOp] Compiling op @ 193: swap
[BaselineOp] Compiling op @ 194: notearg
[BaselineOp] Compiling op @ 195: zero
[BaselineOp] Compiling op @ 196: notearg
[BaselineOp] Compiling op @ 197: getlocal
[BaselineOp] Compiling op @ 200: int8
[BaselineOp] Compiling op @ 202: sub
[BaselineOp] Compiling op @ 203: notearg
[BaselineOp] Compiling op @ 204: call
[BaselineOp] Compiling op @ 207: notearg
[BaselineOp] Compiling op @ 208: call
[BaselineOp] Compiling op @ 211: setlocal
[BaselineOp] Compiling op @ 214: pop
[BaselineOp] Compiling op @ 215: int8
[BaselineOp] Compiling op @ 217: setlocal
[BaselineOp] Compiling op @ 220: pop
[BaselineOp] Compiling op @ 221: getgname
[BaselineOp] Compiling op @ 226: undefined
[BaselineOp] Compiling op @ 227: notearg
[BaselineOp] Compiling op @ 228: getlocal
[BaselineOp] Compiling op @ 231: notearg
[BaselineOp] Compiling op @ 232: new
[BaselineOp] Compiling op @ 235: setlocal
[BaselineOp] Compiling op @ 238: pop
[BaselineOp] Compiling op @ 239: getgname
[BaselineOp] Compiling op @ 244: undefined
[BaselineOp] Compiling op @ 245: notearg
[BaselineOp] Compiling op @ 246: new
[BaselineOp] Compiling op @ 249: dup
[BaselineOp] Compiling op @ 250: callprop
[BaselineOp] Compiling op @ 255: swap
[BaselineOp] Compiling op @ 256: notearg
[BaselineOp] Compiling op @ 257: call
[BaselineOp] Compiling op @ 260: setlocal
[BaselineOp] Compiling op @ 263: pop
[BaselineOp] Compiling op @ 264: zero
[BaselineOp] Compiling op @ 265: setlocal
[BaselineOp] Compiling op @ 268: pop
[BaselineOp] Compiling op @ 269: goto
[BaselineOp] Compiling op @ 274: loophead
[BaselineOp] [block counter] Emitting a block counter for op @ 274: loophead (lineno: 182 column: 26)
[BaselineOp] Compiling op @ 275: getlocal
[BaselineOp] [block counter] Emitting a block counter for op @ 275: getlocal (lineno: 182 column: 26)
[BaselineOp] Compiling op @ 278: getlocal
[BaselineOp] Compiling op @ 281: getlocal
[BaselineOp] Compiling op @ 284: getlocal
[BaselineOp] Compiling op @ 287: int8
[BaselineOp] Compiling op @ 289: mul
[BaselineOp] Compiling op @ 290: ursh
[BaselineOp] Compiling op @ 291: uint16
[BaselineOp] Compiling op @ 294: bitand
[BaselineOp] Compiling op @ 295: setelem
[BaselineOp] Compiling op @ 296: pop
[BaselineOp] Compiling op @ 297: getlocal
[BaselineOp] Compiling op @ 300: pos
[BaselineOp] Compiling op @ 301: dup
[BaselineOp] Compiling op @ 302: one
[BaselineOp] Compiling op @ 303: add
[BaselineOp] Compiling op @ 304: setlocal
[BaselineOp] Compiling op @ 307: pop
[BaselineOp] Compiling op @ 308: pop
[BaselineOp] Compiling op @ 309: loopentry
[BaselineOp] [block counter] Emitting a block counter for op @ 309: loopentry (lineno: 182 column: 16)
[BaselineOp] Compiling op @ 311: getlocal
[BaselineOp] Compiling op @ 314: int8
[BaselineOp] Compiling op @ 316: lt
[BaselineOp] Compiling op @ 317: ifne
[BaselineOp] Compiling op @ 322: zero
[BaselineOp] [block counter] Emitting a block counter for op @ 322: zero (lineno: 183 column: 7)
[BaselineOp] Compiling op @ 323: setlocal
[BaselineOp] Compiling op @ 326: pop
[BaselineOp] Compiling op @ 327: goto
[BaselineOp] Compiling op @ 332: loophead
[BaselineOp] [block counter] Emitting a block counter for op @ 332: loophead (lineno: 183 column: 26)
[BaselineOp] Compiling op @ 333: getlocal
[BaselineOp] [block counter] Emitting a block counter for op @ 333: getlocal (lineno: 183 column: 26)
[BaselineOp] Compiling op @ 336: getlocal
[BaselineOp] Compiling op @ 339: int8
[BaselineOp] Compiling op @ 341: add
[BaselineOp] Compiling op @ 342: getlocal
[BaselineOp] Compiling op @ 345: double
[BaselineOp] Compiling op @ 350: div
[BaselineOp] Compiling op @ 351: getlocal
[BaselineOp] Compiling op @ 354: int8
[BaselineOp] Compiling op @ 356: mul
[BaselineOp] Compiling op @ 357: ursh
[BaselineOp] Compiling op @ 358: uint16
[BaselineOp] Compiling op @ 361: bitand
[BaselineOp] Compiling op @ 362: setelem
[BaselineOp] Compiling op @ 363: pop
[BaselineOp] Compiling op @ 364: getlocal
[BaselineOp] Compiling op @ 367: pos
[BaselineOp] Compiling op @ 368: dup
[BaselineOp] Compiling op @ 369: one
[BaselineOp] Compiling op @ 370: add
[BaselineOp] Compiling op @ 371: setlocal
[BaselineOp] Compiling op @ 374: pop
[BaselineOp] Compiling op @ 375: pop
[BaselineOp] Compiling op @ 376: loopentry
[BaselineOp] [block counter] Emitting a block counter for op @ 376: loopentry (lineno: 183 column: 16)
[BaselineOp] Compiling op @ 378: getlocal
[BaselineOp] Compiling op @ 381: int8
[BaselineOp] Compiling op @ 383: lt
[BaselineOp] Compiling op @ 384: ifne
[BaselineOp] Compiling op @ 389: callgname
[BaselineOp] [block counter] Emitting a block counter for op @ 389: callgname (lineno: 186 column: 0)
[BaselineOp] Compiling op @ 394: undefined
[BaselineOp] Compiling op @ 395: notearg
[BaselineOp] Compiling op @ 396: getlocal
[BaselineOp] Compiling op @ 399: notearg
[BaselineOp] Compiling op @ 400: call
[BaselineOp] Compiling op @ 403: setlocal
[BaselineOp] Compiling op @ 406: pop
[BaselineOp] Compiling op @ 407: getgname
[BaselineOp] Compiling op @ 412: dup
[BaselineOp] Compiling op @ 413: callprop
[BaselineOp] Compiling op @ 418: swap
[BaselineOp] Compiling op @ 419: notearg
[BaselineOp] Compiling op @ 420: getarg
[BaselineOp] Compiling op @ 423: length
[BaselineOp] Compiling op @ 428: getlocal
[BaselineOp] Compiling op @ 431: div
[BaselineOp] Compiling op @ 432: notearg
[BaselineOp] Compiling op @ 433: call
[BaselineOp] Compiling op @ 436: setlocal
[BaselineOp] Compiling op @ 439: pop
[BaselineOp] Compiling op @ 440: getgname
[BaselineOp] Compiling op @ 445: undefined
[BaselineOp] Compiling op @ 446: notearg
[BaselineOp] Compiling op @ 447: getlocal
[BaselineOp] Compiling op @ 450: notearg
[BaselineOp] Compiling op @ 451: new
[BaselineOp] Compiling op @ 454: setlocal
[BaselineOp] Compiling op @ 457: pop
[BaselineOp] Compiling op @ 458: zero
[BaselineOp] Compiling op @ 459: setlocal
[BaselineOp] Compiling op @ 462: pop
[BaselineOp] Compiling op @ 463: goto
[BaselineOp] Compiling op @ 468: loophead
[BaselineOp] [block counter] Emitting a block counter for op @ 468: loophead (lineno: 194 column: 0)
[BaselineOp] Compiling op @ 469: zero
[BaselineOp] [block counter] Emitting a block counter for op @ 469: zero (lineno: 194 column: 9)
[BaselineOp] Compiling op @ 470: setlocal
[BaselineOp] Compiling op @ 473: pop
[BaselineOp] Compiling op @ 474: goto
[BaselineOp] Compiling op @ 479: loophead
[BaselineOp] [block counter] Emitting a block counter for op @ 479: loophead (lineno: 194 column: 28)
[BaselineOp] Compiling op @ 480: getlocal
[BaselineOp] [block counter] Emitting a block counter for op @ 480: getlocal (lineno: 194 column: 28)
[BaselineOp] Compiling op @ 483: int8
[BaselineOp] Compiling op @ 485: getlocal
[BaselineOp] Compiling op @ 488: sub
[BaselineOp] Compiling op @ 489: getlocal
[BaselineOp] Compiling op @ 492: getlocal
[BaselineOp] Compiling op @ 495: int8
[BaselineOp] Compiling op @ 497: mul
[BaselineOp] Compiling op @ 498: ursh
[BaselineOp] Compiling op @ 499: uint16
[BaselineOp] Compiling op @ 502: bitand
[BaselineOp] Compiling op @ 503: setelem
[BaselineOp] Compiling op @ 504: pop
[BaselineOp] Compiling op @ 505: getlocal
[BaselineOp] Compiling op @ 508: pos
[BaselineOp] Compiling op @ 509: dup
[BaselineOp] Compiling op @ 510: one
[BaselineOp] Compiling op @ 511: add
[BaselineOp] Compiling op @ 512: setlocal
[BaselineOp] Compiling op @ 515: pop
[BaselineOp] Compiling op @ 516: pop
[BaselineOp] Compiling op @ 517: loopentry
[BaselineOp] [block counter] Emitting a block counter for op @ 517: loopentry (lineno: 194 column: 18)
[BaselineOp] Compiling op @ 519: getlocal
[BaselineOp] Compiling op @ 522: int8
[BaselineOp] Compiling op @ 524: lt
[BaselineOp] Compiling op @ 525: ifne
[BaselineOp] Compiling op @ 530: zero
[BaselineOp] [block counter] Emitting a block counter for op @ 530: zero (lineno: 195 column: 9)
[BaselineOp] Compiling op @ 531: setlocal
[BaselineOp] Compiling op @ 534: pop
[BaselineOp] Compiling op @ 535: goto
[BaselineOp] Compiling op @ 540: loophead
[BaselineOp] [block counter] Emitting a block counter for op @ 540: loophead (lineno: 195 column: 28)
[BaselineOp] Compiling op @ 541: getlocal
[BaselineOp] [block counter] Emitting a block counter for op @ 541: getlocal (lineno: 195 column: 28)
[BaselineOp] Compiling op @ 544: int8
[BaselineOp] Compiling op @ 546: getlocal
[BaselineOp] Compiling op @ 549: sub
[BaselineOp] Compiling op @ 550: int8
[BaselineOp] Compiling op @ 552: sub
[BaselineOp] Compiling op @ 553: getlocal
[BaselineOp] Compiling op @ 556: double
[BaselineOp] Compiling op @ 561: div
[BaselineOp] Compiling op @ 562: getlocal
[BaselineOp] Compiling op @ 565: int8
[BaselineOp] Compiling op @ 567: mul
[BaselineOp] Compiling op @ 568: ursh
[BaselineOp] Compiling op @ 569: setelem
[BaselineOp] Compiling op @ 570: pop
[BaselineOp] Compiling op @ 571: getlocal
[BaselineOp] Compiling op @ 574: pos
[BaselineOp] Compiling op @ 575: dup
[BaselineOp] Compiling op @ 576: one
[BaselineOp] Compiling op @ 577: add
[BaselineOp] Compiling op @ 578: setlocal
[BaselineOp] Compiling op @ 581: pop
[BaselineOp] Compiling op @ 582: pop
[BaselineOp] Compiling op @ 583: loopentry
[BaselineOp] [block counter] Emitting a block counter for op @ 583: loopentry (lineno: 195 column: 18)
[BaselineOp] Compiling op @ 585: getlocal
[BaselineOp] Compiling op @ 588: int8
[BaselineOp] Compiling op @ 590: lt
[BaselineOp] Compiling op @ 591: ifne
[BaselineOp] Compiling op @ 596: callgname
[BaselineOp] [block counter] Emitting a block counter for op @ 596: callgname (lineno: 197 column: 0)
[BaselineOp] Compiling op @ 601: undefined
[BaselineOp] Compiling op @ 602: notearg
[BaselineOp] Compiling op @ 603: getlocal
[BaselineOp] Compiling op @ 606: notearg
[BaselineOp] Compiling op @ 607: getlocal
[BaselineOp] Compiling op @ 610: notearg
[BaselineOp] Compiling op @ 611: call
[BaselineOp] Compiling op @ 614: setlocal
[BaselineOp] Compiling op @ 617: pop
[BaselineOp] Compiling op @ 618: getlocal
[BaselineOp] Compiling op @ 621: getlocal
[BaselineOp] Compiling op @ 624: one
[BaselineOp] Compiling op @ 625: sub
[BaselineOp] Compiling op @ 626: lt
[BaselineOp] Compiling op @ 627: ifeq
[BaselineOp] Compiling op @ 632: getlocal
[BaselineOp] [block counter] Emitting a block counter for op @ 632: getlocal (lineno: 200 column: 0)
[BaselineOp] Compiling op @ 635: goto
[BaselineOp] Compiling op @ 640: getarg
[BaselineOp] [block counter] Emitting a block counter for op @ 640: getarg (lineno: 200 column: 0)
[BaselineOp] Compiling op @ 643: length
[BaselineOp] Compiling op @ 648: one
[BaselineOp] Compiling op @ 649: sub
[BaselineOp] Compiling op @ 650: getlocal
[BaselineOp] Compiling op @ 653: mod
[BaselineOp] Compiling op @ 654: one
[BaselineOp] Compiling op @ 655: add
[BaselineOp] Compiling op @ 656: setlocal
[BaselineOp] [block counter] Emitting a block counter for op @ 656: setlocal (lineno: 200 column: 0)
[BaselineOp] Compiling op @ 659: pop
[BaselineOp] Compiling op @ 660: string
[BaselineOp] Compiling op @ 665: setlocal
[BaselineOp] Compiling op @ 668: pop
[BaselineOp] Compiling op @ 669: zero
[BaselineOp] Compiling op @ 670: setlocal
[BaselineOp] Compiling op @ 673: pop
[BaselineOp] Compiling op @ 674: goto
[BaselineOp] Compiling op @ 679: loophead
[BaselineOp] [block counter] Emitting a block counter for op @ 679: loophead (lineno: 204 column: 0)
[BaselineOp] Compiling op @ 680: getarg
[BaselineOp] [block counter] Emitting a block counter for op @ 680: getarg (lineno: 204 column: 0)
[BaselineOp] Compiling op @ 683: dup
[BaselineOp] Compiling op @ 684: callprop
[BaselineOp] Compiling op @ 689: swap
[BaselineOp] Compiling op @ 690: notearg
[BaselineOp] Compiling op @ 691: getlocal
[BaselineOp] Compiling op @ 694: getlocal
[BaselineOp] Compiling op @ 697: mul
[BaselineOp] Compiling op @ 698: getlocal
[BaselineOp] Compiling op @ 701: add
[BaselineOp] Compiling op @ 702: notearg
[BaselineOp] Compiling op @ 703: call
[BaselineOp] Compiling op @ 706: setlocal
[BaselineOp] Compiling op @ 709: pop
[BaselineOp] Compiling op @ 710: getlocal
[BaselineOp] Compiling op @ 713: getlocal
[BaselineOp] Compiling op @ 716: getlocal
[BaselineOp] Compiling op @ 719: getelem
[BaselineOp] Compiling op @ 720: bitxor
[BaselineOp] Compiling op @ 721: setlocal
[BaselineOp] Compiling op @ 724: pop
[BaselineOp] Compiling op @ 725: getlocal
[BaselineOp] Compiling op @ 728: getgname
[BaselineOp] Compiling op @ 733: dup
[BaselineOp] Compiling op @ 734: callprop
[BaselineOp] Compiling op @ 739: swap
[BaselineOp] Compiling op @ 740: notearg
[BaselineOp] Compiling op @ 741: getlocal
[BaselineOp] Compiling op @ 744: notearg
[BaselineOp] Compiling op @ 745: call
[BaselineOp] Compiling op @ 748: add
[BaselineOp] Compiling op @ 749: setlocal
[BaselineOp] Compiling op @ 752: pop
[BaselineOp] Compiling op @ 753: getlocal
[BaselineOp] Compiling op @ 756: pos
[BaselineOp] Compiling op @ 757: dup
[BaselineOp] Compiling op @ 758: one
[BaselineOp] Compiling op @ 759: add
[BaselineOp] Compiling op @ 760: setlocal
[BaselineOp] Compiling op @ 763: pop
[BaselineOp] Compiling op @ 764: pop
[BaselineOp] Compiling op @ 765: loopentry
[BaselineOp] [block counter] Emitting a block counter for op @ 765: loopentry (lineno: 203 column: 18)
[BaselineOp] Compiling op @ 767: getlocal
[BaselineOp] Compiling op @ 770: getlocal
[BaselineOp] Compiling op @ 773: lt
[BaselineOp] Compiling op @ 774: ifne
[BaselineOp] Compiling op @ 779: getlocal
[BaselineOp] [block counter] Emitting a block counter for op @ 779: getlocal (lineno: 210 column: 4)
[BaselineOp] Compiling op @ 782: getlocal
[BaselineOp] Compiling op @ 785: callgname
[BaselineOp] Compiling op @ 790: undefined
[BaselineOp] Compiling op @ 791: notearg
[BaselineOp] Compiling op @ 792: getlocal
[BaselineOp] Compiling op @ 795: notearg
[BaselineOp] Compiling op @ 796: call
[BaselineOp] Compiling op @ 799: setelem
[BaselineOp] Compiling op @ 800: pop
[BaselineOp] Compiling op @ 801: getlocal
[BaselineOp] Compiling op @ 804: pos
[BaselineOp] Compiling op @ 805: dup
[BaselineOp] Compiling op @ 806: one
[BaselineOp] Compiling op @ 807: add
[BaselineOp] Compiling op @ 808: setlocal
[BaselineOp] Compiling op @ 811: pop
[BaselineOp] Compiling op @ 812: pop
[BaselineOp] Compiling op @ 813: loopentry
[BaselineOp] [block counter] Emitting a block counter for op @ 813: loopentry (lineno: 191 column: 16)
[BaselineOp] Compiling op @ 815: getlocal
[BaselineOp] Compiling op @ 818: getlocal
[BaselineOp] Compiling op @ 821: lt
[BaselineOp] Compiling op @ 822: ifne
[BaselineOp] Compiling op @ 827: string
[BaselineOp] [block counter] Emitting a block counter for op @ 827: string (lineno: 214 column: 0)
[BaselineOp] Compiling op @ 832: setlocal
[BaselineOp] Compiling op @ 835: pop
[BaselineOp] Compiling op @ 836: zero
[BaselineOp] Compiling op @ 837: setlocal
[BaselineOp] Compiling op @ 840: pop
[BaselineOp] Compiling op @ 841: goto
[BaselineOp] Compiling op @ 846: loophead
[BaselineOp] [block counter] Emitting a block counter for op @ 846: loophead (lineno: 215 column: 26)
[BaselineOp] Compiling op @ 847: getlocal
[BaselineOp] [block counter] Emitting a block counter for op @ 847: getlocal (lineno: 215 column: 26)
[BaselineOp] Compiling op @ 850: getgname
[BaselineOp] Compiling op @ 855: dup
[BaselineOp] Compiling op @ 856: callprop
[BaselineOp] Compiling op @ 861: swap
[BaselineOp] Compiling op @ 862: notearg
[BaselineOp] Compiling op @ 863: getlocal
[BaselineOp] Compiling op @ 866: getlocal
[BaselineOp] Compiling op @ 869: getelem
[BaselineOp] Compiling op @ 870: notearg
[BaselineOp] Compiling op @ 871: call
[BaselineOp] Compiling op @ 874: add
[BaselineOp] Compiling op @ 875: setlocal
[BaselineOp] Compiling op @ 878: pop
[BaselineOp] Compiling op @ 879: getlocal
[BaselineOp] Compiling op @ 882: pos
[BaselineOp] Compiling op @ 883: dup
[BaselineOp] Compiling op @ 884: one
[BaselineOp] Compiling op @ 885: add
[BaselineOp] Compiling op @ 886: setlocal
[BaselineOp] Compiling op @ 889: pop
[BaselineOp] Compiling op @ 890: pop
[BaselineOp] Compiling op @ 891: loopentry
[BaselineOp] [block counter] Emitting a block counter for op @ 891: loopentry (lineno: 215 column: 16)
[BaselineOp] Compiling op @ 893: getlocal
[BaselineOp] Compiling op @ 896: int8
[BaselineOp] Compiling op @ 898: lt
[BaselineOp] Compiling op @ 899: ifne
[BaselineOp] Compiling op @ 904: callgname
[BaselineOp] [block counter] Emitting a block counter for op @ 904: callgname (lineno: 216 column: 2)
[BaselineOp] Compiling op @ 909: undefined
[BaselineOp] Compiling op @ 910: notearg
[BaselineOp] Compiling op @ 911: getlocal
[BaselineOp] Compiling op @ 914: notearg
[BaselineOp] Compiling op @ 915: call
[BaselineOp] Compiling op @ 918: setlocal
[BaselineOp] Compiling op @ 921: pop
[BaselineOp] Compiling op @ 922: getlocal
[BaselineOp] Compiling op @ 925: string
[BaselineOp] Compiling op @ 930: add
[BaselineOp] Compiling op @ 931: getlocal
[BaselineOp] Compiling op @ 934: dup
[BaselineOp] Compiling op @ 935: callprop
[BaselineOp] Compiling op @ 940: swap
[BaselineOp] Compiling op @ 941: notearg
[BaselineOp] Compiling op @ 942: string
[BaselineOp] Compiling op @ 947: notearg
[BaselineOp] Compiling op @ 948: call
[BaselineOp] Compiling op @ 951: add
[BaselineOp] Compiling op @ 952: return
[BaselineOp] Compiling op @ 953: stop
[BaselineScripts] Created BaselineScript 0x1d74b20 (raw 0x7fda8ed4c400) for crypto-aes.js:164
[BaselineScripts] [block counter] 40 block counters were emitted for script crypto-aes.js:164 (0x1d74b20) (lineno: 219 column: 45)
[BaselineOp] Analyzing op @ 0 (end=549): int8
[BaselineOp] Analyzing op @ 2 (end=549): setlocal
[BaselineOp] Analyzing op @ 5 (end=549): pop
[BaselineOp] Analyzing op @ 6 (end=549): getarg
[BaselineOp] Analyzing op @ 9 (end=549): length
[BaselineOp] Analyzing op @ 14 (end=549): int8
[BaselineOp] Analyzing op @ 16 (end=549): div
[BaselineOp] Analyzing op @ 17 (end=549): setlocal
[BaselineOp] Analyzing op @ 20 (end=549): pop
[BaselineOp] Analyzing op @ 21 (end=549): getlocal
[BaselineOp] Analyzing op @ 24 (end=549): int8
[BaselineOp] Analyzing op @ 26 (end=549): add
[BaselineOp] Analyzing op @ 27 (end=549): setlocal
[BaselineOp] Analyzing op @ 30 (end=549): pop
[BaselineOp] Analyzing op @ 31 (end=549): getgname
[BaselineOp] Analyzing op @ 36 (end=549): undefined
[BaselineOp] Analyzing op @ 37 (end=549): notearg
[BaselineOp] Analyzing op @ 38 (end=549): getlocal
[BaselineOp] Analyzing op @ 41 (end=549): getlocal
[BaselineOp] Analyzing op @ 44 (end=549): one
[BaselineOp] Analyzing op @ 45 (end=549): add
[BaselineOp] Analyzing op @ 46 (end=549): mul
[BaselineOp] Analyzing op @ 47 (end=549): notearg
[BaselineOp] Analyzing op @ 48 (end=549): new
[BaselineOp] Analyzing op @ 51 (end=549): setlocal
[BaselineOp] Analyzing op @ 54 (end=549): pop
[BaselineOp] Analyzing op @ 55 (end=549): getgname
[BaselineOp] Analyzing op @ 60 (end=549): undefined
[BaselineOp] Analyzing op @ 61 (end=549): notearg
[BaselineOp] Analyzing op @ 62 (end=549): int8
[BaselineOp] Analyzing op @ 64 (end=549): notearg
[BaselineOp] Analyzing op @ 65 (end=549): new
[BaselineOp] Analyzing op @ 68 (end=549): setlocal
[BaselineOp] Analyzing op @ 71 (end=549): pop
[BaselineOp] Analyzing op @ 72 (end=549): zero
[BaselineOp] Analyzing op @ 73 (end=549): setlocal
[BaselineOp] Analyzing op @ 76 (end=549): pop
[BaselineOp] Analyzing op @ 77 (end=549): goto
[BaselineOp] Analyzing op @ 82 (end=549): loophead
[BaselineOp] Analyzing op @ 83 (end=549): newarray
[BaselineOp] Analyzing op @ 87 (end=549): getarg
[BaselineOp] Analyzing op @ 90 (end=549): int8
[BaselineOp] Analyzing op @ 92 (end=549): getlocal
[BaselineOp] Analyzing op @ 95 (end=549): mul
[BaselineOp] Analyzing op @ 96 (end=549): getelem
[BaselineOp] Analyzing op @ 97 (end=549): initelem_array
[BaselineOp] Analyzing op @ 101 (end=549): getarg
[BaselineOp] Analyzing op @ 104 (end=549): int8
[BaselineOp] Analyzing op @ 106 (end=549): getlocal
[BaselineOp] Analyzing op @ 109 (end=549): mul
[BaselineOp] Analyzing op @ 110 (end=549): one
[BaselineOp] Analyzing op @ 111 (end=549): add
[BaselineOp] Analyzing op @ 112 (end=549): getelem
[BaselineOp] Analyzing op @ 113 (end=549): initelem_array
[BaselineOp] Analyzing op @ 117 (end=549): getarg
[BaselineOp] Analyzing op @ 120 (end=549): int8
[BaselineOp] Analyzing op @ 122 (end=549): getlocal
[BaselineOp] Analyzing op @ 125 (end=549): mul
[BaselineOp] Analyzing op @ 126 (end=549): int8
[BaselineOp] Analyzing op @ 128 (end=549): add
[BaselineOp] Analyzing op @ 129 (end=549): getelem
[BaselineOp] Analyzing op @ 130 (end=549): initelem_array
[BaselineOp] Analyzing op @ 134 (end=549): getarg
[BaselineOp] Analyzing op @ 137 (end=549): int8
[BaselineOp] Analyzing op @ 139 (end=549): getlocal
[BaselineOp] Analyzing op @ 142 (end=549): mul
[BaselineOp] Analyzing op @ 143 (end=549): int8
[BaselineOp] Analyzing op @ 145 (end=549): add
[BaselineOp] Analyzing op @ 146 (end=549): getelem
[BaselineOp] Analyzing op @ 147 (end=549): initelem_array
[BaselineOp] Analyzing op @ 151 (end=549): endinit
[BaselineOp] Analyzing op @ 152 (end=549): setlocal
[BaselineOp] Analyzing op @ 155 (end=549): pop
[BaselineOp] Analyzing op @ 156 (end=549): getlocal
[BaselineOp] Analyzing op @ 159 (end=549): getlocal
[BaselineOp] Analyzing op @ 162 (end=549): getlocal
[BaselineOp] Analyzing op @ 165 (end=549): setelem
[BaselineOp] Analyzing op @ 166 (end=549): pop
[BaselineOp] Analyzing op @ 167 (end=549): getlocal
[BaselineOp] Analyzing op @ 170 (end=549): pos
[BaselineOp] Analyzing op @ 171 (end=549): dup
[BaselineOp] Analyzing op @ 172 (end=549): one
[BaselineOp] Analyzing op @ 173 (end=549): add
[BaselineOp] Analyzing op @ 174 (end=549): setlocal
[BaselineOp] Analyzing op @ 177 (end=549): pop
[BaselineOp] Analyzing op @ 178 (end=549): pop
[BaselineOp] Analyzing op @ 179 (end=549): loopentry
[BaselineOp] Analyzing op @ 181 (end=549): getlocal
[BaselineOp] Analyzing op @ 184 (end=549): getlocal
[BaselineOp] Analyzing op @ 187 (end=549): lt
[BaselineOp] Analyzing op @ 188 (end=549): ifne
[BaselineOp] Analyzing op @ 83 (end=549): newarray
[BaselineOp] Analyzing op @ 87 (end=549): getarg
[BaselineOp] Analyzing op @ 90 (end=549): int8
[BaselineOp] Analyzing op @ 92 (end=549): getlocal
[BaselineOp] Analyzing op @ 95 (end=549): mul
[BaselineOp] Analyzing op @ 96 (end=549): getelem
[BaselineOp] Analyzing op @ 97 (end=549): initelem_array
[BaselineOp] Analyzing op @ 101 (end=549): getarg
[BaselineOp] Analyzing op @ 104 (end=549): int8
[BaselineOp] Analyzing op @ 106 (end=549): getlocal
[BaselineOp] Analyzing op @ 109 (end=549): mul
[BaselineOp] Analyzing op @ 110 (end=549): one
[BaselineOp] Analyzing op @ 111 (end=549): add
[BaselineOp] Analyzing op @ 112 (end=549): getelem
[BaselineOp] Analyzing op @ 113 (end=549): initelem_array
[BaselineOp] Analyzing op @ 117 (end=549): getarg
[BaselineOp] Analyzing op @ 120 (end=549): int8
[BaselineOp] Analyzing op @ 122 (end=549): getlocal
[BaselineOp] Analyzing op @ 125 (end=549): mul
[BaselineOp] Analyzing op @ 126 (end=549): int8
[BaselineOp] Analyzing op @ 128 (end=549): add
[BaselineOp] Analyzing op @ 129 (end=549): getelem
[BaselineOp] Analyzing op @ 130 (end=549): initelem_array
[BaselineOp] Analyzing op @ 134 (end=549): getarg
[BaselineOp] Analyzing op @ 137 (end=549): int8
[BaselineOp] Analyzing op @ 139 (end=549): getlocal
[BaselineOp] Analyzing op @ 142 (end=549): mul
[BaselineOp] Analyzing op @ 143 (end=549): int8
[BaselineOp] Analyzing op @ 145 (end=549): add
[BaselineOp] Analyzing op @ 146 (end=549): getelem
[BaselineOp] Analyzing op @ 147 (end=549): initelem_array
[BaselineOp] Analyzing op @ 151 (end=549): endinit
[BaselineOp] Analyzing op @ 152 (end=549): setlocal
[BaselineOp] Analyzing op @ 155 (end=549): pop
[BaselineOp] Analyzing op @ 156 (end=549): getlocal
[BaselineOp] Analyzing op @ 159 (end=549): getlocal
[BaselineOp] Analyzing op @ 162 (end=549): getlocal
[BaselineOp] Analyzing op @ 165 (end=549): setelem
[BaselineOp] Analyzing op @ 166 (end=549): pop
[BaselineOp] Analyzing op @ 167 (end=549): getlocal
[BaselineOp] Analyzing op @ 170 (end=549): pos
[BaselineOp] Analyzing op @ 171 (end=549): dup
[BaselineOp] Analyzing op @ 172 (end=549): one
[BaselineOp] Analyzing op @ 173 (end=549): add
[BaselineOp] Analyzing op @ 174 (end=549): setlocal
[BaselineOp] Analyzing op @ 177 (end=549): pop
[BaselineOp] Analyzing op @ 178 (end=549): pop
[BaselineOp] Analyzing op @ 179 (end=549): loopentry
[BaselineOp] Analyzing op @ 181 (end=549): getlocal
[BaselineOp] Analyzing op @ 184 (end=549): getlocal
[BaselineOp] Analyzing op @ 187 (end=549): lt
[BaselineOp] Analyzing op @ 188 (end=549): ifne
[BaselineOp] Analyzing op @ 193 (end=549): getlocal
[BaselineOp] Analyzing op @ 196 (end=549): setlocal
[BaselineOp] Analyzing op @ 199 (end=549): pop
[BaselineOp] Analyzing op @ 200 (end=549): goto
[BaselineOp] Analyzing op @ 205 (end=549): loophead
[BaselineOp] Analyzing op @ 206 (end=549): getlocal
[BaselineOp] Analyzing op @ 209 (end=549): getlocal
[BaselineOp] Analyzing op @ 212 (end=549): getgname
[BaselineOp] Analyzing op @ 217 (end=549): undefined
[BaselineOp] Analyzing op @ 218 (end=549): notearg
[BaselineOp] Analyzing op @ 219 (end=549): int8
[BaselineOp] Analyzing op @ 221 (end=549): notearg
[BaselineOp] Analyzing op @ 222 (end=549): new
[BaselineOp] Analyzing op @ 225 (end=549): setelem
[BaselineOp] Analyzing op @ 226 (end=549): pop
[BaselineOp] Analyzing op @ 227 (end=549): zero
[BaselineOp] Analyzing op @ 228 (end=549): setlocal
[BaselineOp] Analyzing op @ 231 (end=549): pop
[BaselineOp] Analyzing op @ 232 (end=549): goto
[BaselineOp] Analyzing op @ 237 (end=549): loophead
[BaselineOp] Analyzing op @ 238 (end=549): getlocal
[BaselineOp] Analyzing op @ 241 (end=549): getlocal
[BaselineOp] Analyzing op @ 244 (end=549): getlocal
[BaselineOp] Analyzing op @ 247 (end=549): getlocal
[BaselineOp] Analyzing op @ 250 (end=549): one
[BaselineOp] Analyzing op @ 251 (end=549): sub
[BaselineOp] Analyzing op @ 252 (end=549): getelem
[BaselineOp] Analyzing op @ 253 (end=549): getlocal
[BaselineOp] Analyzing op @ 256 (end=549): getelem
[BaselineOp] Analyzing op @ 257 (end=549): setelem
[BaselineOp] Analyzing op @ 258 (end=549): pop
[BaselineOp] Analyzing op @ 259 (end=549): getlocal
[BaselineOp] Analyzing op @ 262 (end=549): pos
[BaselineOp] Analyzing op @ 263 (end=549): dup
[BaselineOp] Analyzing op @ 264 (end=549): one
[BaselineOp] Analyzing op @ 265 (end=549): add
[BaselineOp] Analyzing op @ 266 (end=549): setlocal
[BaselineOp] Analyzing op @ 269 (end=549): pop
[BaselineOp] Analyzing op @ 270 (end=549): pop
[BaselineOp] Analyzing op @ 271 (end=549): loopentry
[BaselineOp] Analyzing op @ 273 (end=549): getlocal
[BaselineOp] Analyzing op @ 276 (end=549): int8
[BaselineOp] Analyzing op @ 278 (end=549): lt
[BaselineOp] Analyzing op @ 279 (end=549): ifne
[BaselineOp] Analyzing op @ 284 (end=549): getlocal
[BaselineOp] Analyzing op @ 287 (end=549): getlocal
[BaselineOp] Analyzing op @ 290 (end=549): mod
[BaselineOp] Analyzing op @ 291 (end=549): zero
[BaselineOp] Analyzing op @ 292 (end=549): eq
[BaselineOp] Analyzing op @ 293 (end=549): ifeq
[BaselineOp] Analyzing op @ 298 (end=549): callgname
[BaselineOp] Analyzing op @ 303 (end=549): undefined
[BaselineOp] Analyzing op @ 304 (end=549): notearg
[BaselineOp] Analyzing op @ 305 (end=549): callgname
[BaselineOp] Analyzing op @ 310 (end=549): undefined
[BaselineOp] Analyzing op @ 311 (end=549): notearg
[BaselineOp] Analyzing op @ 312 (end=549): getlocal
[BaselineOp] Analyzing op @ 315 (end=549): notearg
[BaselineOp] Analyzing op @ 316 (end=549): call
[BaselineOp] Analyzing op @ 319 (end=549): notearg
[BaselineOp] Analyzing op @ 320 (end=549): call
[BaselineOp] Analyzing op @ 323 (end=549): setlocal
[BaselineOp] Analyzing op @ 326 (end=549): pop
[BaselineOp] Analyzing op @ 327 (end=549): zero
[BaselineOp] Analyzing op @ 328 (end=549): setlocal
[BaselineOp] Analyzing op @ 331 (end=549): pop
[BaselineOp] Analyzing op @ 332 (end=549): goto
[BaselineOp] Analyzing op @ 337 (end=549): loophead
[BaselineOp] Analyzing op @ 338 (end=549): getlocal
[BaselineOp] Analyzing op @ 341 (end=549): getlocal
[BaselineOp] Analyzing op @ 344 (end=549): dup2
[BaselineOp] Analyzing op @ 345 (end=549): getelem
[BaselineOp] Analyzing op @ 346 (end=549): getgname
[BaselineOp] Analyzing op @ 351 (end=549): getlocal
[BaselineOp] Analyzing op @ 354 (end=549): getlocal
[BaselineOp] Analyzing op @ 357 (end=549): div
[BaselineOp] Analyzing op @ 358 (end=549): getelem
[BaselineOp] Analyzing op @ 359 (end=549): getlocal
[BaselineOp] Analyzing op @ 362 (end=549): getelem
[BaselineOp] Analyzing op @ 363 (end=549): bitxor
[BaselineOp] Analyzing op @ 364 (end=549): setelem
[BaselineOp] Analyzing op @ 365 (end=549): pop
[BaselineOp] Analyzing op @ 366 (end=549): getlocal
[BaselineOp] Analyzing op @ 369 (end=549): pos
[BaselineOp] Analyzing op @ 370 (end=549): dup
[BaselineOp] Analyzing op @ 371 (end=549): one
[BaselineOp] Analyzing op @ 372 (end=549): add
[BaselineOp] Analyzing op @ 373 (end=549): setlocal
[BaselineOp] Analyzing op @ 376 (end=549): pop
[BaselineOp] Analyzing op @ 377 (end=549): pop
[BaselineOp] Analyzing op @ 378 (end=549): loopentry
[BaselineOp] Analyzing op @ 380 (end=549): getlocal
[BaselineOp] Analyzing op @ 383 (end=549): int8
[BaselineOp] Analyzing op @ 385 (end=549): lt
[BaselineOp] Analyzing op @ 386 (end=549): ifne
[BaselineOp] Analyzing op @ 391 (end=549): goto
[BaselineOp] Analyzing op @ 396 (end=549): getlocal
[BaselineOp] Analyzing op @ 399 (end=549): int8
[BaselineOp] Analyzing op @ 401 (end=549): gt
[BaselineOp] Analyzing op @ 402 (end=549): and
[BaselineOp] Analyzing op @ 407 (end=549): pop
[BaselineOp] Analyzing op @ 408 (end=549): getlocal
[BaselineOp] Analyzing op @ 411 (end=549): getlocal
[BaselineOp] Analyzing op @ 414 (end=549): mod
[BaselineOp] Analyzing op @ 415 (end=549): int8
[BaselineOp] Analyzing op @ 417 (end=549): eq
[BaselineOp] Analyzing op @ 418 (end=549): ifeq
[BaselineOp] Analyzing op @ 423 (end=549): callgname
[BaselineOp] Analyzing op @ 428 (end=549): undefined
[BaselineOp] Analyzing op @ 429 (end=549): notearg
[BaselineOp] Analyzing op @ 430 (end=549): getlocal
[BaselineOp] Analyzing op @ 433 (end=549): notearg
[BaselineOp] Analyzing op @ 434 (end=549): call
[BaselineOp] Analyzing op @ 437 (end=549): setlocal
[BaselineOp] Analyzing op @ 440 (end=549): pop
[BaselineOp] Analyzing op @ 441 (end=549): zero
[BaselineOp] Analyzing op @ 442 (end=549): setlocal
[BaselineOp] Analyzing op @ 445 (end=549): pop
[BaselineOp] Analyzing op @ 446 (end=549): goto
[BaselineOp] Analyzing op @ 451 (end=549): loophead
[BaselineOp] Analyzing op @ 452 (end=549): getlocal
[BaselineOp] Analyzing op @ 455 (end=549): getlocal
[BaselineOp] Analyzing op @ 458 (end=549): getelem
[BaselineOp] Analyzing op @ 459 (end=549): getlocal
[BaselineOp] Analyzing op @ 462 (end=549): getlocal
[BaselineOp] Analyzing op @ 465 (end=549): getlocal
[BaselineOp] Analyzing op @ 468 (end=549): getlocal
[BaselineOp] Analyzing op @ 471 (end=549): sub
[BaselineOp] Analyzing op @ 472 (end=549): getelem
[BaselineOp] Analyzing op @ 473 (end=549): getlocal
[BaselineOp] Analyzing op @ 476 (end=549): getelem
[BaselineOp] Analyzing op @ 477 (end=549): getlocal
[BaselineOp] Analyzing op @ 480 (end=549): getlocal
[BaselineOp] Analyzing op @ 483 (end=549): getelem
[BaselineOp] Analyzing op @ 484 (end=549): bitxor
[BaselineOp] Analyzing op @ 485 (end=549): setelem
[BaselineOp] Analyzing op @ 486 (end=549): pop
[BaselineOp] Analyzing op @ 487 (end=549): getlocal
[BaselineOp] Analyzing op @ 490 (end=549): pos
[BaselineOp] Analyzing op @ 491 (end=549): dup
[BaselineOp] Analyzing op @ 492 (end=549): one
[BaselineOp] Analyzing op @ 493 (end=549): add
[BaselineOp] Analyzing op @ 494 (end=549): setlocal
[BaselineOp] Analyzing op @ 497 (end=549): pop
[BaselineOp] Analyzing op @ 498 (end=549): pop
[BaselineOp] Analyzing op @ 499 (end=549): loopentry
[BaselineOp] Analyzing op @ 501 (end=549): getlocal
[BaselineOp] Analyzing op @ 504 (end=549): int8
[BaselineOp] Analyzing op @ 506 (end=549): lt
[BaselineOp] Analyzing op @ 507 (end=549): ifne
[BaselineOp] Analyzing op @ 512 (end=549): getlocal
[BaselineOp] Analyzing op @ 515 (end=549): pos
[BaselineOp] Analyzing op @ 516 (end=549): dup
[BaselineOp] Analyzing op @ 517 (end=549): one
[BaselineOp] Analyzing op @ 518 (end=549): add
[BaselineOp] Analyzing op @ 519 (end=549): setlocal
[BaselineOp] Analyzing op @ 522 (end=549): pop
[BaselineOp] Analyzing op @ 523 (end=549): pop
[BaselineOp] Analyzing op @ 524 (end=549): loopentry
[BaselineOp] Analyzing op @ 526 (end=549): getlocal
[BaselineOp] Analyzing op @ 529 (end=549): getlocal
[BaselineOp] Analyzing op @ 532 (end=549): getlocal
[BaselineOp] Analyzing op @ 535 (end=549): one
[BaselineOp] Analyzing op @ 536 (end=549): add
[BaselineOp] Analyzing op @ 537 (end=549): mul
[BaselineOp] Analyzing op @ 538 (end=549): lt
[BaselineOp] Analyzing op @ 539 (end=549): ifne
[BaselineOp] Analyzing op @ 206 (end=549): getlocal
[BaselineOp] Analyzing op @ 209 (end=549): getlocal
[BaselineOp] Analyzing op @ 212 (end=549): getgname
[BaselineOp] Analyzing op @ 217 (end=549): undefined
[BaselineOp] Analyzing op @ 218 (end=549): notearg
[BaselineOp] Analyzing op @ 219 (end=549): int8
[BaselineOp] Analyzing op @ 221 (end=549): notearg
[BaselineOp] Analyzing op @ 222 (end=549): new
[BaselineOp] Analyzing op @ 225 (end=549): setelem
[BaselineOp] Analyzing op @ 226 (end=549): pop
[BaselineOp] Analyzing op @ 227 (end=549): zero
[BaselineOp] Analyzing op @ 228 (end=549): setlocal
[BaselineOp] Analyzing op @ 231 (end=549): pop
[BaselineOp] Analyzing op @ 232 (end=549): goto
[BaselineOp] Analyzing op @ 237 (end=549): loophead
[BaselineOp] Analyzing op @ 238 (end=549): getlocal
[BaselineOp] Analyzing op @ 241 (end=549): getlocal
[BaselineOp] Analyzing op @ 244 (end=549): getlocal
[BaselineOp] Analyzing op @ 247 (end=549): getlocal
[BaselineOp] Analyzing op @ 250 (end=549): one
[BaselineOp] Analyzing op @ 251 (end=549): sub
[BaselineOp] Analyzing op @ 252 (end=549): getelem
[BaselineOp] Analyzing op @ 253 (end=549): getlocal
[BaselineOp] Analyzing op @ 256 (end=549): getelem
[BaselineOp] Analyzing op @ 257 (end=549): setelem
[BaselineOp] Analyzing op @ 258 (end=549): pop
[BaselineOp] Analyzing op @ 259 (end=549): getlocal
[BaselineOp] Analyzing op @ 262 (end=549): pos
[BaselineOp] Analyzing op @ 263 (end=549): dup
[BaselineOp] Analyzing op @ 264 (end=549): one
[BaselineOp] Analyzing op @ 265 (end=549): add
[BaselineOp] Analyzing op @ 266 (end=549): setlocal
[BaselineOp] Analyzing op @ 269 (end=549): pop
[BaselineOp] Analyzing op @ 270 (end=549): pop
[BaselineOp] Analyzing op @ 271 (end=549): loopentry
[BaselineOp] Analyzing op @ 273 (end=549): getlocal
[BaselineOp] Analyzing op @ 276 (end=549): int8
[BaselineOp] Analyzing op @ 278 (end=549): lt
[BaselineOp] Analyzing op @ 279 (end=549): ifne
[BaselineOp] Analyzing op @ 238 (end=549): getlocal
[BaselineOp] Analyzing op @ 241 (end=549): getlocal
[BaselineOp] Analyzing op @ 244 (end=549): getlocal
[BaselineOp] Analyzing op @ 247 (end=549): getlocal
[BaselineOp] Analyzing op @ 250 (end=549): one
[BaselineOp] Analyzing op @ 251 (end=549): sub
[BaselineOp] Analyzing op @ 252 (end=549): getelem
[BaselineOp] Analyzing op @ 253 (end=549): getlocal
[BaselineOp] Analyzing op @ 256 (end=549): getelem
[BaselineOp] Analyzing op @ 257 (end=549): setelem
[BaselineOp] Analyzing op @ 258 (end=549): pop
[BaselineOp] Analyzing op @ 259 (end=549): getlocal
[BaselineOp] Analyzing op @ 262 (end=549): pos
[BaselineOp] Analyzing op @ 263 (end=549): dup
[BaselineOp] Analyzing op @ 264 (end=549): one
[BaselineOp] Analyzing op @ 265 (end=549): add
[BaselineOp] Analyzing op @ 266 (end=549): setlocal
[BaselineOp] Analyzing op @ 269 (end=549): pop
[BaselineOp] Analyzing op @ 270 (end=549): pop
[BaselineOp] Analyzing op @ 271 (end=549): loopentry
[BaselineOp] Analyzing op @ 273 (end=549): getlocal
[BaselineOp] Analyzing op @ 276 (end=549): int8
[BaselineOp] Analyzing op @ 278 (end=549): lt
[BaselineOp] Analyzing op @ 279 (end=549): ifne
[BaselineOp] Analyzing op @ 284 (end=549): getlocal
[BaselineOp] Analyzing op @ 287 (end=549): getlocal
[BaselineOp] Analyzing op @ 290 (end=549): mod
[BaselineOp] Analyzing op @ 291 (end=549): zero
[BaselineOp] Analyzing op @ 292 (end=549): eq
[BaselineOp] Analyzing op @ 293 (end=549): ifeq
[BaselineOp] Analyzing op @ 298 (end=549): callgname
[BaselineOp] Analyzing op @ 303 (end=549): undefined
[BaselineOp] Analyzing op @ 304 (end=549): notearg
[BaselineOp] Analyzing op @ 305 (end=549): callgname
[BaselineOp] Analyzing op @ 310 (end=549): undefined
[BaselineOp] Analyzing op @ 311 (end=549): notearg
[BaselineOp] Analyzing op @ 312 (end=549): getlocal
[BaselineOp] Analyzing op @ 315 (end=549): notearg
[BaselineOp] Analyzing op @ 316 (end=549): call
[BaselineOp] Analyzing op @ 319 (end=549): notearg
[BaselineOp] Analyzing op @ 320 (end=549): call
[BaselineOp] Analyzing op @ 323 (end=549): setlocal
[BaselineOp] Analyzing op @ 326 (end=549): pop
[BaselineOp] Analyzing op @ 327 (end=549): zero
[BaselineOp] Analyzing op @ 328 (end=549): setlocal
[BaselineOp] Analyzing op @ 331 (end=549): pop
[BaselineOp] Analyzing op @ 332 (end=549): goto
[BaselineOp] Analyzing op @ 337 (end=549): loophead
[BaselineOp] Analyzing op @ 338 (end=549): getlocal
[BaselineOp] Analyzing op @ 341 (end=549): getlocal
[BaselineOp] Analyzing op @ 344 (end=549): dup2
[BaselineOp] Analyzing op @ 345 (end=549): getelem
[BaselineOp] Analyzing op @ 346 (end=549): getgname
[BaselineOp] Analyzing op @ 351 (end=549): getlocal
[BaselineOp] Analyzing op @ 354 (end=549): getlocal
[BaselineOp] Analyzing op @ 357 (end=549): div
[BaselineOp] Analyzing op @ 358 (end=549): getelem
[BaselineOp] Analyzing op @ 359 (end=549): getlocal
[BaselineOp] Analyzing op @ 362 (end=549): getelem
[BaselineOp] Analyzing op @ 363 (end=549): bitxor
[BaselineOp] Analyzing op @ 364 (end=549): setelem
[BaselineOp] Analyzing op @ 365 (end=549): pop
[BaselineOp] Analyzing op @ 366 (end=549): getlocal
[BaselineOp] Analyzing op @ 369 (end=549): pos
[BaselineOp] Analyzing op @ 370 (end=549): dup
[BaselineOp] Analyzing op @ 371 (end=549): one
[BaselineOp] Analyzing op @ 372 (end=549): add
[BaselineOp] Analyzing op @ 373 (end=549): setlocal
[BaselineOp] Analyzing op @ 376 (end=549): pop
[BaselineOp] Analyzing op @ 377 (end=549): pop
[BaselineOp] Analyzing op @ 378 (end=549): loopentry
[BaselineOp] Analyzing op @ 380 (end=549): getlocal
[BaselineOp] Analyzing op @ 383 (end=549): int8
[BaselineOp] Analyzing op @ 385 (end=549): lt
[BaselineOp] Analyzing op @ 386 (end=549): ifne
[BaselineOp] Analyzing op @ 338 (end=549): getlocal
[BaselineOp] Analyzing op @ 341 (end=549): getlocal
[BaselineOp] Analyzing op @ 344 (end=549): dup2
[BaselineOp] Analyzing op @ 345 (end=549): getelem
[BaselineOp] Analyzing op @ 346 (end=549): getgname
[BaselineOp] Analyzing op @ 351 (end=549): getlocal
[BaselineOp] Analyzing op @ 354 (end=549): getlocal
[BaselineOp] Analyzing op @ 357 (end=549): div
[BaselineOp] Analyzing op @ 358 (end=549): getelem
[BaselineOp] Analyzing op @ 359 (end=549): getlocal
[BaselineOp] Analyzing op @ 362 (end=549): getelem
[BaselineOp] Analyzing op @ 363 (end=549): bitxor
[BaselineOp] Analyzing op @ 364 (end=549): setelem
[BaselineOp] Analyzing op @ 365 (end=549): pop
[BaselineOp] Analyzing op @ 366 (end=549): getlocal
[BaselineOp] Analyzing op @ 369 (end=549): pos
[BaselineOp] Analyzing op @ 370 (end=549): dup
[BaselineOp] Analyzing op @ 371 (end=549): one
[BaselineOp] Analyzing op @ 372 (end=549): add
[BaselineOp] Analyzing op @ 373 (end=549): setlocal
[BaselineOp] Analyzing op @ 376 (end=549): pop
[BaselineOp] Analyzing op @ 377 (end=549): pop
[BaselineOp] Analyzing op @ 378 (end=549): loopentry
[BaselineOp] Analyzing op @ 380 (end=549): getlocal
[BaselineOp] Analyzing op @ 383 (end=549): int8
[BaselineOp] Analyzing op @ 385 (end=549): lt
[BaselineOp] Analyzing op @ 386 (end=549): ifne
[BaselineOp] Analyzing op @ 391 (end=549): goto
[BaselineOp] Analyzing op @ 396 (end=549): getlocal
[BaselineOp] Analyzing op @ 399 (end=549): int8
[BaselineOp] Analyzing op @ 401 (end=549): gt
[BaselineOp] Analyzing op @ 402 (end=549): and
[BaselineOp] Analyzing op @ 407 (end=549): pop
[BaselineOp] Analyzing op @ 408 (end=549): getlocal
[BaselineOp] Analyzing op @ 411 (end=549): getlocal
[BaselineOp] Analyzing op @ 414 (end=549): mod
[BaselineOp] Analyzing op @ 415 (end=549): int8
[BaselineOp] Analyzing op @ 417 (end=549): eq
[BaselineOp] Analyzing op @ 418 (end=549): ifeq
[BaselineOp] Analyzing op @ 423 (end=549): callgname
[BaselineOp] Analyzing op @ 428 (end=549): undefined
[BaselineOp] Analyzing op @ 429 (end=549): notearg
[BaselineOp] Analyzing op @ 430 (end=549): getlocal
[BaselineOp] Analyzing op @ 433 (end=549): notearg
[BaselineOp] Analyzing op @ 434 (end=549): call
[BaselineOp] Analyzing op @ 437 (end=549): setlocal
[BaselineOp] Analyzing op @ 440 (end=549): pop
[BaselineOp] Analyzing op @ 441 (end=549): zero
[BaselineOp] Analyzing op @ 442 (end=549): setlocal
[BaselineOp] Analyzing op @ 445 (end=549): pop
[BaselineOp] Analyzing op @ 446 (end=549): goto
[BaselineOp] Analyzing op @ 451 (end=549): loophead
[BaselineOp] Analyzing op @ 452 (end=549): getlocal
[BaselineOp] Analyzing op @ 455 (end=549): getlocal
[BaselineOp] Analyzing op @ 458 (end=549): getelem
[BaselineOp] Analyzing op @ 459 (end=549): getlocal
[BaselineOp] Analyzing op @ 462 (end=549): getlocal
[BaselineOp] Analyzing op @ 465 (end=549): getlocal
[BaselineOp] Analyzing op @ 468 (end=549): getlocal
[BaselineOp] Analyzing op @ 471 (end=549): sub
[BaselineOp] Analyzing op @ 472 (end=549): getelem
[BaselineOp] Analyzing op @ 473 (end=549): getlocal
[BaselineOp] Analyzing op @ 476 (end=549): getelem
[BaselineOp] Analyzing op @ 477 (end=549): getlocal
[BaselineOp] Analyzing op @ 480 (end=549): getlocal
[BaselineOp] Analyzing op @ 483 (end=549): getelem
[BaselineOp] Analyzing op @ 484 (end=549): bitxor
[BaselineOp] Analyzing op @ 485 (end=549): setelem
[BaselineOp] Analyzing op @ 486 (end=549): pop
[BaselineOp] Analyzing op @ 487 (end=549): getlocal
[BaselineOp] Analyzing op @ 490 (end=549): pos
[BaselineOp] Analyzing op @ 491 (end=549): dup
[BaselineOp] Analyzing op @ 492 (end=549): one
[BaselineOp] Analyzing op @ 493 (end=549): add
[BaselineOp] Analyzing op @ 494 (end=549): setlocal
[BaselineOp] Analyzing op @ 497 (end=549): pop
[BaselineOp] Analyzing op @ 498 (end=549): pop
[BaselineOp] Analyzing op @ 499 (end=549): loopentry
[BaselineOp] Analyzing op @ 501 (end=549): getlocal
[BaselineOp] Analyzing op @ 504 (end=549): int8
[BaselineOp] Analyzing op @ 506 (end=549): lt
[BaselineOp] Analyzing op @ 507 (end=549): ifne
[BaselineOp] Analyzing op @ 452 (end=549): getlocal
[BaselineOp] Analyzing op @ 455 (end=549): getlocal
[BaselineOp] Analyzing op @ 458 (end=549): getelem
[BaselineOp] Analyzing op @ 459 (end=549): getlocal
[BaselineOp] Analyzing op @ 462 (end=549): getlocal
[BaselineOp] Analyzing op @ 465 (end=549): getlocal
[BaselineOp] Analyzing op @ 468 (end=549): getlocal
[BaselineOp] Analyzing op @ 471 (end=549): sub
[BaselineOp] Analyzing op @ 472 (end=549): getelem
[BaselineOp] Analyzing op @ 473 (end=549): getlocal
[BaselineOp] Analyzing op @ 476 (end=549): getelem
[BaselineOp] Analyzing op @ 477 (end=549): getlocal
[BaselineOp] Analyzing op @ 480 (end=549): getlocal
[BaselineOp] Analyzing op @ 483 (end=549): getelem
[BaselineOp] Analyzing op @ 484 (end=549): bitxor
[BaselineOp] Analyzing op @ 485 (end=549): setelem
[BaselineOp] Analyzing op @ 486 (end=549): pop
[BaselineOp] Analyzing op @ 487 (end=549): getlocal
[BaselineOp] Analyzing op @ 490 (end=549): pos
[BaselineOp] Analyzing op @ 491 (end=549): dup
[BaselineOp] Analyzing op @ 492 (end=549): one
[BaselineOp] Analyzing op @ 493 (end=549): add
[BaselineOp] Analyzing op @ 494 (end=549): setlocal
[BaselineOp] Analyzing op @ 497 (end=549): pop
[BaselineOp] Analyzing op @ 498 (end=549): pop
[BaselineOp] Analyzing op @ 499 (end=549): loopentry
[BaselineOp] Analyzing op @ 501 (end=549): getlocal
[BaselineOp] Analyzing op @ 504 (end=549): int8
[BaselineOp] Analyzing op @ 506 (end=549): lt
[BaselineOp] Analyzing op @ 507 (end=549): ifne
[BaselineOp] Analyzing op @ 512 (end=549): getlocal
[BaselineOp] Analyzing op @ 515 (end=549): pos
[BaselineOp] Analyzing op @ 516 (end=549): dup
[BaselineOp] Analyzing op @ 517 (end=549): one
[BaselineOp] Analyzing op @ 518 (end=549): add
[BaselineOp] Analyzing op @ 519 (end=549): setlocal
[BaselineOp] Analyzing op @ 522 (end=549): pop
[BaselineOp] Analyzing op @ 523 (end=549): pop
[BaselineOp] Analyzing op @ 524 (end=549): loopentry
[BaselineOp] Analyzing op @ 526 (end=549): getlocal
[BaselineOp] Analyzing op @ 529 (end=549): getlocal
[BaselineOp] Analyzing op @ 532 (end=549): getlocal
[BaselineOp] Analyzing op @ 535 (end=549): one
[BaselineOp] Analyzing op @ 536 (end=549): add
[BaselineOp] Analyzing op @ 537 (end=549): mul
[BaselineOp] Analyzing op @ 538 (end=549): lt
[BaselineOp] Analyzing op @ 539 (end=549): ifne
[BaselineOp] Analyzing op @ 544 (end=549): getlocal
[BaselineOp] Analyzing op @ 547 (end=549): return
[BaselineOp] Analyzing op @ 548 (end=549): stop
[BaselineScripts] Baseline compiling script crypto-aes.js:83 (0x7fda8d0512b8)
[BaselineOp] Compiling op @ 0: int8
[BaselineOp] Compiling op @ 2: setlocal
[BaselineOp] Compiling op @ 5: pop
[BaselineOp] Compiling op @ 6: getarg
[BaselineOp] Compiling op @ 9: length
[BaselineOp] Compiling op @ 14: int8
[BaselineOp] Compiling op @ 16: div
[BaselineOp] Compiling op @ 17: setlocal
[BaselineOp] Compiling op @ 20: pop
[BaselineOp] Compiling op @ 21: getlocal
[BaselineOp] Compiling op @ 24: int8
[BaselineOp] Compiling op @ 26: add
[BaselineOp] Compiling op @ 27: setlocal
[BaselineOp] Compiling op @ 30: pop
[BaselineOp] Compiling op @ 31: getgname
[BaselineOp] Compiling op @ 36: undefined
[BaselineOp] Compiling op @ 37: notearg
[BaselineOp] Compiling op @ 38: getlocal
[BaselineOp] Compiling op @ 41: getlocal
[BaselineOp] Compiling op @ 44: one
[BaselineOp] Compiling op @ 45: add
[BaselineOp] Compiling op @ 46: mul
[BaselineOp] Compiling op @ 47: notearg
[BaselineOp] Compiling op @ 48: new
[BaselineOp] Compiling op @ 51: setlocal
[BaselineOp] Compiling op @ 54: pop
[BaselineOp] Compiling op @ 55: getgname
[BaselineOp] Compiling op @ 60: undefined
[BaselineOp] Compiling op @ 61: notearg
[BaselineOp] Compiling op @ 62: int8
[BaselineOp] Compiling op @ 64: notearg
[BaselineOp] Compiling op @ 65: new
[BaselineOp] Compiling op @ 68: setlocal
[BaselineOp] Compiling op @ 71: pop
[BaselineOp] Compiling op @ 72: zero
[BaselineOp] Compiling op @ 73: setlocal
[BaselineOp] Compiling op @ 76: pop
[BaselineOp] Compiling op @ 77: goto
[BaselineOp] Compiling op @ 82: loophead
[BaselineOp] [block counter] Emitting a block counter for op @ 82: loophead (lineno: 92 column: 0)
[BaselineOp] Compiling op @ 83: newarray
[BaselineOp] [block counter] Emitting a block counter for op @ 83: newarray (lineno: 92 column: 0)
[BaselineOp] Compiling op @ 87: getarg
[BaselineOp] Compiling op @ 90: int8
[BaselineOp] Compiling op @ 92: getlocal
[BaselineOp] Compiling op @ 95: mul
[BaselineOp] Compiling op @ 96: getelem
[BaselineOp] Compiling op @ 97: initelem_array
[BaselineOp] Compiling op @ 101: getarg
[BaselineOp] Compiling op @ 104: int8
[BaselineOp] Compiling op @ 106: getlocal
[BaselineOp] Compiling op @ 109: mul
[BaselineOp] Compiling op @ 110: one
[BaselineOp] Compiling op @ 111: add
[BaselineOp] Compiling op @ 112: getelem
[BaselineOp] Compiling op @ 113: initelem_array
[BaselineOp] Compiling op @ 117: getarg
[BaselineOp] Compiling op @ 120: int8
[BaselineOp] Compiling op @ 122: getlocal
[BaselineOp] Compiling op @ 125: mul
[BaselineOp] Compiling op @ 126: int8
[BaselineOp] Compiling op @ 128: add
[BaselineOp] Compiling op @ 129: getelem
[BaselineOp] Compiling op @ 130: initelem_array
[BaselineOp] Compiling op @ 134: getarg
[BaselineOp] Compiling op @ 137: int8
[BaselineOp] Compiling op @ 139: getlocal
[BaselineOp] Compiling op @ 142: mul
[BaselineOp] Compiling op @ 143: int8
[BaselineOp] Compiling op @ 145: add
[BaselineOp] Compiling op @ 146: getelem
[BaselineOp] Compiling op @ 147: initelem_array
[BaselineOp] Compiling op @ 151: endinit
[BaselineOp] Compiling op @ 152: setlocal
[BaselineOp] Compiling op @ 155: pop
[BaselineOp] Compiling op @ 156: getlocal
[BaselineOp] Compiling op @ 159: getlocal
[BaselineOp] Compiling op @ 162: getlocal
[BaselineOp] Compiling op @ 165: setelem
[BaselineOp] Compiling op @ 166: pop
[BaselineOp] Compiling op @ 167: getlocal
[BaselineOp] Compiling op @ 170: pos
[BaselineOp] Compiling op @ 171: dup
[BaselineOp] Compiling op @ 172: one
[BaselineOp] Compiling op @ 173: add
[BaselineOp] Compiling op @ 174: setlocal
[BaselineOp] Compiling op @ 177: pop
[BaselineOp] Compiling op @ 178: pop
[BaselineOp] Compiling op @ 179: loopentry
[BaselineOp] [block counter] Emitting a block counter for op @ 179: loopentry (lineno: 91 column: 16)
[BaselineOp] Compiling op @ 181: getlocal
[BaselineOp] Compiling op @ 184: getlocal
[BaselineOp] Compiling op @ 187: lt
[BaselineOp] Compiling op @ 188: ifne
[BaselineOp] Compiling op @ 193: getlocal
[BaselineOp] [block counter] Emitting a block counter for op @ 193: getlocal (lineno: 96 column: 7)
[BaselineOp] Compiling op @ 196: setlocal
[BaselineOp] Compiling op @ 199: pop
[BaselineOp] Compiling op @ 200: goto
[BaselineOp] Compiling op @ 205: loophead
[BaselineOp] [block counter] Emitting a block counter for op @ 205: loophead (lineno: 97 column: 0)
[BaselineOp] Compiling op @ 206: getlocal
[BaselineOp] [block counter] Emitting a block counter for op @ 206: getlocal (lineno: 97 column: 4)
[BaselineOp] Compiling op @ 209: getlocal
[BaselineOp] Compiling op @ 212: getgname
[BaselineOp] Compiling op @ 217: undefined
[BaselineOp] Compiling op @ 218: notearg
[BaselineOp] Compiling op @ 219: int8
[BaselineOp] Compiling op @ 221: notearg
[BaselineOp] Compiling op @ 222: new
[BaselineOp] Compiling op @ 225: setelem
[BaselineOp] Compiling op @ 226: pop
[BaselineOp] Compiling op @ 227: zero
[BaselineOp] Compiling op @ 228: setlocal
[BaselineOp] Compiling op @ 231: pop
[BaselineOp] Compiling op @ 232: goto
[BaselineOp] Compiling op @ 237: loophead
[BaselineOp] [block counter] Emitting a block counter for op @ 237: loophead (lineno: 98 column: 28)
[BaselineOp] Compiling op @ 238: getlocal
[BaselineOp] [block counter] Emitting a block counter for op @ 238: getlocal (lineno: 98 column: 28)
[BaselineOp] Compiling op @ 241: getlocal
[BaselineOp] Compiling op @ 244: getlocal
[BaselineOp] Compiling op @ 247: getlocal
[BaselineOp] Compiling op @ 250: one
[BaselineOp] Compiling op @ 251: sub
[BaselineOp] Compiling op @ 252: getelem
[BaselineOp] Compiling op @ 253: getlocal
[BaselineOp] Compiling op @ 256: getelem
[BaselineOp] Compiling op @ 257: setelem
[BaselineOp] Compiling op @ 258: pop
[BaselineOp] Compiling op @ 259: getlocal
[BaselineOp] Compiling op @ 262: pos
[BaselineOp] Compiling op @ 263: dup
[BaselineOp] Compiling op @ 264: one
[BaselineOp] Compiling op @ 265: add
[BaselineOp] Compiling op @ 266: setlocal
[BaselineOp] Compiling op @ 269: pop
[BaselineOp] Compiling op @ 270: pop
[BaselineOp] Compiling op @ 271: loopentry
[BaselineOp] [block counter] Emitting a block counter for op @ 271: loopentry (lineno: 98 column: 18)
[BaselineOp] Compiling op @ 273: getlocal
[BaselineOp] Compiling op @ 276: int8
[BaselineOp] Compiling op @ 278: lt
[BaselineOp] Compiling op @ 279: ifne
[BaselineOp] Compiling op @ 284: getlocal
[BaselineOp] [block counter] Emitting a block counter for op @ 284: getlocal (lineno: 99 column: 0)
[BaselineOp] Compiling op @ 287: getlocal
[BaselineOp] Compiling op @ 290: mod
[BaselineOp] Compiling op @ 291: zero
[BaselineOp] Compiling op @ 292: eq
[BaselineOp] Compiling op @ 293: ifeq
[BaselineOp] Compiling op @ 298: callgname
[BaselineOp] [block counter] Emitting a block counter for op @ 298: callgname (lineno: 100 column: 6)
[BaselineOp] Compiling op @ 303: undefined
[BaselineOp] Compiling op @ 304: notearg
[BaselineOp] Compiling op @ 305: callgname
[BaselineOp] Compiling op @ 310: undefined
[BaselineOp] Compiling op @ 311: notearg
[BaselineOp] Compiling op @ 312: getlocal
[BaselineOp] Compiling op @ 315: notearg
[BaselineOp] Compiling op @ 316: call
[BaselineOp] Compiling op @ 319: notearg
[BaselineOp] Compiling op @ 320: call
[BaselineOp] Compiling op @ 323: setlocal
[BaselineOp] Compiling op @ 326: pop
[BaselineOp] Compiling op @ 327: zero
[BaselineOp] Compiling op @ 328: setlocal
[BaselineOp] Compiling op @ 331: pop
[BaselineOp] Compiling op @ 332: goto
[BaselineOp] Compiling op @ 337: loophead
[BaselineOp] [block counter] Emitting a block counter for op @ 337: loophead (lineno: 101 column: 30)
[BaselineOp] Compiling op @ 338: getlocal
[BaselineOp] [block counter] Emitting a block counter for op @ 338: getlocal (lineno: 101 column: 30)
[BaselineOp] Compiling op @ 341: getlocal
[BaselineOp] Compiling op @ 344: dup2
[BaselineOp] Compiling op @ 345: getelem
[BaselineOp] Compiling op @ 346: getgname
[BaselineOp] Compiling op @ 351: getlocal
[BaselineOp] Compiling op @ 354: getlocal
[BaselineOp] Compiling op @ 357: div
[BaselineOp] Compiling op @ 358: getelem
[BaselineOp] Compiling op @ 359: getlocal
[BaselineOp] Compiling op @ 362: getelem
[BaselineOp] Compiling op @ 363: bitxor
[BaselineOp] Compiling op @ 364: setelem
[BaselineOp] Compiling op @ 365: pop
[BaselineOp] Compiling op @ 366: getlocal
[BaselineOp] Compiling op @ 369: pos
[BaselineOp] Compiling op @ 370: dup
[BaselineOp] Compiling op @ 371: one
[BaselineOp] Compiling op @ 372: add
[BaselineOp] Compiling op @ 373: setlocal
[BaselineOp] Compiling op @ 376: pop
[BaselineOp] Compiling op @ 377: pop
[BaselineOp] Compiling op @ 378: loopentry
[BaselineOp] [block counter] Emitting a block counter for op @ 378: loopentry (lineno: 101 column: 20)
[BaselineOp] Compiling op @ 380: getlocal
[BaselineOp] Compiling op @ 383: int8
[BaselineOp] Compiling op @ 385: lt
[BaselineOp] Compiling op @ 386: ifne
[BaselineOp] Compiling op @ 391: goto
[BaselineOp] [block counter] Emitting a block counter for op @ 391: goto (lineno: 101 column: 20)
[BaselineOp] Compiling op @ 396: getlocal
[BaselineOp] [block counter] Emitting a block counter for op @ 396: getlocal (lineno: 102 column: 0)
[BaselineOp] Compiling op @ 399: int8
[BaselineOp] Compiling op @ 401: gt
[BaselineOp] Compiling op @ 402: and
[BaselineOp] Compiling op @ 407: pop
[BaselineOp] [block counter] Emitting a block counter for op @ 407: pop (lineno: 102 column: 0)
[BaselineOp] Compiling op @ 408: getlocal
[BaselineOp] Compiling op @ 411: getlocal
[BaselineOp] Compiling op @ 414: mod
[BaselineOp] Compiling op @ 415: int8
[BaselineOp] Compiling op @ 417: eq
[BaselineOp] Compiling op @ 418: ifeq
[BaselineOp] [block counter] Emitting a block counter for op @ 418: ifeq (lineno: 102 column: 0)
[BaselineOp] Compiling op @ 423: callgname
[BaselineOp] [block counter] Emitting a block counter for op @ 423: callgname (lineno: 103 column: 6)
[BaselineOp] Compiling op @ 428: undefined
[BaselineOp] Compiling op @ 429: notearg
[BaselineOp] Compiling op @ 430: getlocal
[BaselineOp] Compiling op @ 433: notearg
[BaselineOp] Compiling op @ 434: call
[BaselineOp] Compiling op @ 437: setlocal
[BaselineOp] Compiling op @ 440: pop
[BaselineOp] Compiling op @ 441: zero
[BaselineOp] [block counter] Emitting a block counter for op @ 441: zero (lineno: 105 column: 9)
[BaselineOp] Compiling op @ 442: setlocal
[BaselineOp] Compiling op @ 445: pop
[BaselineOp] Compiling op @ 446: goto
[BaselineOp] Compiling op @ 451: loophead
[BaselineOp] [block counter] Emitting a block counter for op @ 451: loophead (lineno: 105 column: 28)
[BaselineOp] Compiling op @ 452: getlocal
[BaselineOp] [block counter] Emitting a block counter for op @ 452: getlocal (lineno: 105 column: 28)
[BaselineOp] Compiling op @ 455: getlocal
[BaselineOp] Compiling op @ 458: getelem
[BaselineOp] Compiling op @ 459: getlocal
[BaselineOp] Compiling op @ 462: getlocal
[BaselineOp] Compiling op @ 465: getlocal
[BaselineOp] Compiling op @ 468: getlocal
[BaselineOp] Compiling op @ 471: sub
[BaselineOp] Compiling op @ 472: getelem
[BaselineOp] Compiling op @ 473: getlocal
[BaselineOp] Compiling op @ 476: getelem
[BaselineOp] Compiling op @ 477: getlocal
[BaselineOp] Compiling op @ 480: getlocal
[BaselineOp] Compiling op @ 483: getelem
[BaselineOp] Compiling op @ 484: bitxor
[BaselineOp] Compiling op @ 485: setelem
[BaselineOp] Compiling op @ 486: pop
[BaselineOp] Compiling op @ 487: getlocal
[BaselineOp] Compiling op @ 490: pos
[BaselineOp] Compiling op @ 491: dup
[BaselineOp] Compiling op @ 492: one
[BaselineOp] Compiling op @ 493: add
[BaselineOp] Compiling op @ 494: setlocal
[BaselineOp] Compiling op @ 497: pop
[BaselineOp] Compiling op @ 498: pop
[BaselineOp] Compiling op @ 499: loopentry
[BaselineOp] [block counter] Emitting a block counter for op @ 499: loopentry (lineno: 105 column: 18)
[BaselineOp] Compiling op @ 501: getlocal
[BaselineOp] Compiling op @ 504: int8
[BaselineOp] Compiling op @ 506: lt
[BaselineOp] Compiling op @ 507: ifne
[BaselineOp] Compiling op @ 512: getlocal
[BaselineOp] [block counter] Emitting a block counter for op @ 512: getlocal (lineno: 96 column: 32)
[BaselineOp] Compiling op @ 515: pos
[BaselineOp] Compiling op @ 516: dup
[BaselineOp] Compiling op @ 517: one
[BaselineOp] Compiling op @ 518: add
[BaselineOp] Compiling op @ 519: setlocal
[BaselineOp] Compiling op @ 522: pop
[BaselineOp] Compiling op @ 523: pop
[BaselineOp] Compiling op @ 524: loopentry
[BaselineOp] [block counter] Emitting a block counter for op @ 524: loopentry (lineno: 96 column: 17)
[BaselineOp] Compiling op @ 526: getlocal
[BaselineOp] Compiling op @ 529: getlocal
[BaselineOp] Compiling op @ 532: getlocal
[BaselineOp] Compiling op @ 535: one
[BaselineOp] Compiling op @ 536: add
[BaselineOp] Compiling op @ 537: mul
[BaselineOp] Compiling op @ 538: lt
[BaselineOp] Compiling op @ 539: ifne
[BaselineOp] Compiling op @ 544: getlocal
[BaselineOp] [block counter] Emitting a block counter for op @ 544: getlocal (lineno: 108 column: 2)
[BaselineOp] Compiling op @ 547: return
[BaselineOp] Compiling op @ 548: stop
[BaselineScripts] Created BaselineScript 0x1d769c0 (raw 0x7fda8ed2f008) for crypto-aes.js:83
[BaselineScripts] [block counter] 26 block counters were emitted for script crypto-aes.js:83 (0x1d769c0) (lineno: 108 column: 11)
[BaselineOp] Analyzing op @ 0 (end=62): zero
[BaselineOp] Analyzing op @ 1 (end=62): setlocal
[BaselineOp] Analyzing op @ 4 (end=62): pop
[BaselineOp] Analyzing op @ 5 (end=62): goto
[BaselineOp] Analyzing op @ 10 (end=62): loophead
[BaselineOp] Analyzing op @ 11 (end=62): getarg
[BaselineOp] Analyzing op @ 14 (end=62): getlocal
[BaselineOp] Analyzing op @ 17 (end=62): getgname
[BaselineOp] Analyzing op @ 22 (end=62): getarg
[BaselineOp] Analyzing op @ 25 (end=62): getlocal
[BaselineOp] Analyzing op @ 28 (end=62): getelem
[BaselineOp] Analyzing op @ 29 (end=62): getelem
[BaselineOp] Analyzing op @ 30 (end=62): setelem
[BaselineOp] Analyzing op @ 31 (end=62): pop
[BaselineOp] Analyzing op @ 32 (end=62): getlocal
[BaselineOp] Analyzing op @ 35 (end=62): pos
[BaselineOp] Analyzing op @ 36 (end=62): dup
[BaselineOp] Analyzing op @ 37 (end=62): one
[BaselineOp] Analyzing op @ 38 (end=62): add
[BaselineOp] Analyzing op @ 39 (end=62): setlocal
[BaselineOp] Analyzing op @ 42 (end=62): pop
[BaselineOp] Analyzing op @ 43 (end=62): pop
[BaselineOp] Analyzing op @ 44 (end=62): loopentry
[BaselineOp] Analyzing op @ 46 (end=62): getlocal
[BaselineOp] Analyzing op @ 49 (end=62): int8
[BaselineOp] Analyzing op @ 51 (end=62): lt
[BaselineOp] Analyzing op @ 52 (end=62): ifne
[BaselineOp] Analyzing op @ 11 (end=62): getarg
[BaselineOp] Analyzing op @ 14 (end=62): getlocal
[BaselineOp] Analyzing op @ 17 (end=62): getgname
[BaselineOp] Analyzing op @ 22 (end=62): getarg
[BaselineOp] Analyzing op @ 25 (end=62): getlocal
[BaselineOp] Analyzing op @ 28 (end=62): getelem
[BaselineOp] Analyzing op @ 29 (end=62): getelem
[BaselineOp] Analyzing op @ 30 (end=62): setelem
[BaselineOp] Analyzing op @ 31 (end=62): pop
[BaselineOp] Analyzing op @ 32 (end=62): getlocal
[BaselineOp] Analyzing op @ 35 (end=62): pos
[BaselineOp] Analyzing op @ 36 (end=62): dup
[BaselineOp] Analyzing op @ 37 (end=62): one
[BaselineOp] Analyzing op @ 38 (end=62): add
[BaselineOp] Analyzing op @ 39 (end=62): setlocal
[BaselineOp] Analyzing op @ 42 (end=62): pop
[BaselineOp] Analyzing op @ 43 (end=62): pop
[BaselineOp] Analyzing op @ 44 (end=62): loopentry
[BaselineOp] Analyzing op @ 46 (end=62): getlocal
[BaselineOp] Analyzing op @ 49 (end=62): int8
[BaselineOp] Analyzing op @ 51 (end=62): lt
[BaselineOp] Analyzing op @ 52 (end=62): ifne
[BaselineOp] Analyzing op @ 57 (end=62): getarg
[BaselineOp] Analyzing op @ 60 (end=62): return
[BaselineOp] Analyzing op @ 61 (end=62): stop
[BaselineScripts] Baseline compiling script crypto-aes.js:111 (0x7fda8d051448)
[BaselineOp] Compiling op @ 0: zero
[BaselineOp] Compiling op @ 1: setlocal
[BaselineOp] Compiling op @ 4: pop
[BaselineOp] Compiling op @ 5: goto
[BaselineOp] Compiling op @ 10: loophead
[BaselineOp] [block counter] Emitting a block counter for op @ 10: loophead (lineno: 112 column: 26)
[BaselineOp] Compiling op @ 11: getarg
[BaselineOp] [block counter] Emitting a block counter for op @ 11: getarg (lineno: 112 column: 26)
[BaselineOp] Compiling op @ 14: getlocal
[BaselineOp] Compiling op @ 17: getgname
[BaselineOp] Compiling op @ 22: getarg
[BaselineOp] Compiling op @ 25: getlocal
[BaselineOp] Compiling op @ 28: getelem
[BaselineOp] Compiling op @ 29: getelem
[BaselineOp] Compiling op @ 30: setelem
[BaselineOp] Compiling op @ 31: pop
[BaselineOp] Compiling op @ 32: getlocal
[BaselineOp] Compiling op @ 35: pos
[BaselineOp] Compiling op @ 36: dup
[BaselineOp] Compiling op @ 37: one
[BaselineOp] Compiling op @ 38: add
[BaselineOp] Compiling op @ 39: setlocal
[BaselineOp] Compiling op @ 42: pop
[BaselineOp] Compiling op @ 43: pop
[BaselineOp] Compiling op @ 44: loopentry
[BaselineOp] [block counter] Emitting a block counter for op @ 44: loopentry (lineno: 112 column: 16)
[BaselineOp] Compiling op @ 46: getlocal
[BaselineOp] Compiling op @ 49: int8
[BaselineOp] Compiling op @ 51: lt
[BaselineOp] Compiling op @ 52: ifne
[BaselineOp] Compiling op @ 57: getarg
[BaselineOp] [block counter] Emitting a block counter for op @ 57: getarg (lineno: 113 column: 2)
[BaselineOp] Compiling op @ 60: return
[BaselineOp] Compiling op @ 61: stop
[BaselineScripts] Created BaselineScript 0x1d56bf0 (raw 0x7fda8ed4ead0) for crypto-aes.js:111
[BaselineScripts] [block counter] 4 block counters were emitted for script crypto-aes.js:111 (0x1d56bf0) (lineno: 113 column: 11)
[BaselineOp] Analyzing op @ 0 (end=70): getarg
[BaselineOp] Analyzing op @ 3 (end=70): int8
[BaselineOp] Analyzing op @ 5 (end=70): getarg
[BaselineOp] Analyzing op @ 8 (end=70): zero
[BaselineOp] Analyzing op @ 9 (end=70): getelem
[BaselineOp] Analyzing op @ 10 (end=70): setelem
[BaselineOp] Analyzing op @ 11 (end=70): pop
[BaselineOp] Analyzing op @ 12 (end=70): zero
[BaselineOp] Analyzing op @ 13 (end=70): setlocal
[BaselineOp] Analyzing op @ 16 (end=70): pop
[BaselineOp] Analyzing op @ 17 (end=70): goto
[BaselineOp] Analyzing op @ 22 (end=70): loophead
[BaselineOp] Analyzing op @ 23 (end=70): getarg
[BaselineOp] Analyzing op @ 26 (end=70): getlocal
[BaselineOp] Analyzing op @ 29 (end=70): getarg
[BaselineOp] Analyzing op @ 32 (end=70): getlocal
[BaselineOp] Analyzing op @ 35 (end=70): one
[BaselineOp] Analyzing op @ 36 (end=70): add
[BaselineOp] Analyzing op @ 37 (end=70): getelem
[BaselineOp] Analyzing op @ 38 (end=70): setelem
[BaselineOp] Analyzing op @ 39 (end=70): pop
[BaselineOp] Analyzing op @ 40 (end=70): getlocal
[BaselineOp] Analyzing op @ 43 (end=70): pos
[BaselineOp] Analyzing op @ 44 (end=70): dup
[BaselineOp] Analyzing op @ 45 (end=70): one
[BaselineOp] Analyzing op @ 46 (end=70): add
[BaselineOp] Analyzing op @ 47 (end=70): setlocal
[BaselineOp] Analyzing op @ 50 (end=70): pop
[BaselineOp] Analyzing op @ 51 (end=70): pop
[BaselineOp] Analyzing op @ 52 (end=70): loopentry
[BaselineOp] Analyzing op @ 54 (end=70): getlocal
[BaselineOp] Analyzing op @ 57 (end=70): int8
[BaselineOp] Analyzing op @ 59 (end=70): lt
[BaselineOp] Analyzing op @ 60 (end=70): ifne
[BaselineOp] Analyzing op @ 23 (end=70): getarg
[BaselineOp] Analyzing op @ 26 (end=70): getlocal
[BaselineOp] Analyzing op @ 29 (end=70): getarg
[BaselineOp] Analyzing op @ 32 (end=70): getlocal
[BaselineOp] Analyzing op @ 35 (end=70): one
[BaselineOp] Analyzing op @ 36 (end=70): add
[BaselineOp] Analyzing op @ 37 (end=70): getelem
[BaselineOp] Analyzing op @ 38 (end=70): setelem
[BaselineOp] Analyzing op @ 39 (end=70): pop
[BaselineOp] Analyzing op @ 40 (end=70): getlocal
[BaselineOp] Analyzing op @ 43 (end=70): pos
[BaselineOp] Analyzing op @ 44 (end=70): dup
[BaselineOp] Analyzing op @ 45 (end=70): one
[BaselineOp] Analyzing op @ 46 (end=70): add
[BaselineOp] Analyzing op @ 47 (end=70): setlocal
[BaselineOp] Analyzing op @ 50 (end=70): pop
[BaselineOp] Analyzing op @ 51 (end=70): pop
[BaselineOp] Analyzing op @ 52 (end=70): loopentry
[BaselineOp] Analyzing op @ 54 (end=70): getlocal
[BaselineOp] Analyzing op @ 57 (end=70): int8
[BaselineOp] Analyzing op @ 59 (end=70): lt
[BaselineOp] Analyzing op @ 60 (end=70): ifne
[BaselineOp] Analyzing op @ 65 (end=70): getarg
[BaselineOp] Analyzing op @ 68 (end=70): return
[BaselineOp] Analyzing op @ 69 (end=70): stop
[BaselineScripts] Baseline compiling script crypto-aes.js:116 (0x7fda8d051380)
[BaselineOp] Compiling op @ 0: getarg
[BaselineOp] Compiling op @ 3: int8
[BaselineOp] Compiling op @ 5: getarg
[BaselineOp] Compiling op @ 8: zero
[BaselineOp] Compiling op @ 9: getelem
[BaselineOp] Compiling op @ 10: setelem
[BaselineOp] Compiling op @ 11: pop
[BaselineOp] Compiling op @ 12: zero
[BaselineOp] Compiling op @ 13: setlocal
[BaselineOp] Compiling op @ 16: pop
[BaselineOp] Compiling op @ 17: goto
[BaselineOp] Compiling op @ 22: loophead
[BaselineOp] [block counter] Emitting a block counter for op @ 22: loophead (lineno: 118 column: 26)
[BaselineOp] Compiling op @ 23: getarg
[BaselineOp] [block counter] Emitting a block counter for op @ 23: getarg (lineno: 118 column: 26)
[BaselineOp] Compiling op @ 26: getlocal
[BaselineOp] Compiling op @ 29: getarg
[BaselineOp] Compiling op @ 32: getlocal
[BaselineOp] Compiling op @ 35: one
[BaselineOp] Compiling op @ 36: add
[BaselineOp] Compiling op @ 37: getelem
[BaselineOp] Compiling op @ 38: setelem
[BaselineOp] Compiling op @ 39: pop
[BaselineOp] Compiling op @ 40: getlocal
[BaselineOp] Compiling op @ 43: pos
[BaselineOp] Compiling op @ 44: dup
[BaselineOp] Compiling op @ 45: one
[BaselineOp] Compiling op @ 46: add
[BaselineOp] Compiling op @ 47: setlocal
[BaselineOp] Compiling op @ 50: pop
[BaselineOp] Compiling op @ 51: pop
[BaselineOp] Compiling op @ 52: loopentry
[BaselineOp] [block counter] Emitting a block counter for op @ 52: loopentry (lineno: 118 column: 16)
[BaselineOp] Compiling op @ 54: getlocal
[BaselineOp] Compiling op @ 57: int8
[BaselineOp] Compiling op @ 59: lt
[BaselineOp] Compiling op @ 60: ifne
[BaselineOp] Compiling op @ 65: getarg
[BaselineOp] [block counter] Emitting a block counter for op @ 65: getarg (lineno: 119 column: 2)
[BaselineOp] Compiling op @ 68: return
[BaselineOp] Compiling op @ 69: stop
[BaselineScripts] Created BaselineScript 0x1d57350 (raw 0x7fda8ed2ffc8) for crypto-aes.js:116
[BaselineScripts] [block counter] 4 block counters were emitted for script crypto-aes.js:116 (0x1d57350) (lineno: 119 column: 11)
[BaselineOp] Analyzing op @ 0 (end=494): int8
[BaselineOp] Analyzing op @ 2 (end=494): setlocal
[BaselineOp] Analyzing op @ 5 (end=494): pop
[BaselineOp] Analyzing op @ 6 (end=494): getarg
[BaselineOp] Analyzing op @ 9 (end=494): length
[BaselineOp] Analyzing op @ 14 (end=494): getlocal
[BaselineOp] Analyzing op @ 17 (end=494): div
[BaselineOp] Analyzing op @ 18 (end=494): one
[BaselineOp] Analyzing op @ 19 (end=494): sub
[BaselineOp] Analyzing op @ 20 (end=494): setlocal
[BaselineOp] Analyzing op @ 23 (end=494): pop
[BaselineOp] Analyzing op @ 24 (end=494): newarray
[BaselineOp] Analyzing op @ 28 (end=494): newarray
[BaselineOp] Analyzing op @ 32 (end=494): endinit
[BaselineOp] Analyzing op @ 33 (end=494): initelem_array
[BaselineOp] Analyzing op @ 37 (end=494): newarray
[BaselineOp] Analyzing op @ 41 (end=494): endinit
[BaselineOp] Analyzing op @ 42 (end=494): initelem_array
[BaselineOp] Analyzing op @ 46 (end=494): newarray
[BaselineOp] Analyzing op @ 50 (end=494): endinit
[BaselineOp] Analyzing op @ 51 (end=494): initelem_array
[BaselineOp] Analyzing op @ 55 (end=494): newarray
[BaselineOp] Analyzing op @ 59 (end=494): endinit
[BaselineOp] Analyzing op @ 60 (end=494): initelem_array
[BaselineOp] Analyzing op @ 64 (end=494): endinit
[BaselineOp] Analyzing op @ 65 (end=494): setlocal
[BaselineOp] Analyzing op @ 68 (end=494): pop
[BaselineOp] Analyzing op @ 69 (end=494): zero
[BaselineOp] Analyzing op @ 70 (end=494): setlocal
[BaselineOp] Analyzing op @ 73 (end=494): pop
[BaselineOp] Analyzing op @ 74 (end=494): goto
[BaselineOp] Analyzing op @ 79 (end=494): loophead
[BaselineOp] Analyzing op @ 80 (end=494): getlocal
[BaselineOp] Analyzing op @ 83 (end=494): getlocal
[BaselineOp] Analyzing op @ 86 (end=494): int8
[BaselineOp] Analyzing op @ 88 (end=494): mod
[BaselineOp] Analyzing op @ 89 (end=494): getelem
[BaselineOp] Analyzing op @ 90 (end=494): getgname
[BaselineOp] Analyzing op @ 95 (end=494): dup
[BaselineOp] Analyzing op @ 96 (end=494): callprop
[BaselineOp] Analyzing op @ 101 (end=494): swap
[BaselineOp] Analyzing op @ 102 (end=494): notearg
[BaselineOp] Analyzing op @ 103 (end=494): getlocal
[BaselineOp] Analyzing op @ 106 (end=494): int8
[BaselineOp] Analyzing op @ 108 (end=494): div
[BaselineOp] Analyzing op @ 109 (end=494): notearg
[BaselineOp] Analyzing op @ 110 (end=494): call
[BaselineOp] Analyzing op @ 113 (end=494): getarg
[BaselineOp] Analyzing op @ 116 (end=494): getlocal
[BaselineOp] Analyzing op @ 119 (end=494): getelem
[BaselineOp] Analyzing op @ 120 (end=494): setelem
[BaselineOp] Analyzing op @ 121 (end=494): pop
[BaselineOp] Analyzing op @ 122 (end=494): getlocal
[BaselineOp] Analyzing op @ 125 (end=494): pos
[BaselineOp] Analyzing op @ 126 (end=494): dup
[BaselineOp] Analyzing op @ 127 (end=494): one
[BaselineOp] Analyzing op @ 128 (end=494): add
[BaselineOp] Analyzing op @ 129 (end=494): setlocal
[BaselineOp] Analyzing op @ 132 (end=494): pop
[BaselineOp] Analyzing op @ 133 (end=494): pop
[BaselineOp] Analyzing op @ 134 (end=494): loopentry
[BaselineOp] Analyzing op @ 136 (end=494): getlocal
[BaselineOp] Analyzing op @ 139 (end=494): int8
[BaselineOp] Analyzing op @ 141 (end=494): getlocal
[BaselineOp] Analyzing op @ 144 (end=494): mul
[BaselineOp] Analyzing op @ 145 (end=494): lt
[BaselineOp] Analyzing op @ 146 (end=494): ifne
[BaselineOp] Analyzing op @ 80 (end=494): getlocal
[BaselineOp] Analyzing op @ 83 (end=494): getlocal
[BaselineOp] Analyzing op @ 86 (end=494): int8
[BaselineOp] Analyzing op @ 88 (end=494): mod
[BaselineOp] Analyzing op @ 89 (end=494): getelem
[BaselineOp] Analyzing op @ 90 (end=494): getgname
[BaselineOp] Analyzing op @ 95 (end=494): dup
[BaselineOp] Analyzing op @ 96 (end=494): callprop
[BaselineOp] Analyzing op @ 101 (end=494): swap
[BaselineOp] Analyzing op @ 102 (end=494): notearg
[BaselineOp] Analyzing op @ 103 (end=494): getlocal
[BaselineOp] Analyzing op @ 106 (end=494): int8
[BaselineOp] Analyzing op @ 108 (end=494): div
[BaselineOp] Analyzing op @ 109 (end=494): notearg
[BaselineOp] Analyzing op @ 110 (end=494): call
[BaselineOp] Analyzing op @ 113 (end=494): getarg
[BaselineOp] Analyzing op @ 116 (end=494): getlocal
[BaselineOp] Analyzing op @ 119 (end=494): getelem
[BaselineOp] Analyzing op @ 120 (end=494): setelem
[BaselineOp] Analyzing op @ 121 (end=494): pop
[BaselineOp] Analyzing op @ 122 (end=494): getlocal
[BaselineOp] Analyzing op @ 125 (end=494): pos
[BaselineOp] Analyzing op @ 126 (end=494): dup
[BaselineOp] Analyzing op @ 127 (end=494): one
[BaselineOp] Analyzing op @ 128 (end=494): add
[BaselineOp] Analyzing op @ 129 (end=494): setlocal
[BaselineOp] Analyzing op @ 132 (end=494): pop
[BaselineOp] Analyzing op @ 133 (end=494): pop
[BaselineOp] Analyzing op @ 134 (end=494): loopentry
[BaselineOp] Analyzing op @ 136 (end=494): getlocal
[BaselineOp] Analyzing op @ 139 (end=494): int8
[BaselineOp] Analyzing op @ 141 (end=494): getlocal
[BaselineOp] Analyzing op @ 144 (end=494): mul
[BaselineOp] Analyzing op @ 145 (end=494): lt
[BaselineOp] Analyzing op @ 146 (end=494): ifne
[BaselineOp] Analyzing op @ 151 (end=494): callgname
[BaselineOp] Analyzing op @ 156 (end=494): undefined
[BaselineOp] Analyzing op @ 157 (end=494): notearg
[BaselineOp] Analyzing op @ 158 (end=494): getlocal
[BaselineOp] Analyzing op @ 161 (end=494): notearg
[BaselineOp] Analyzing op @ 162 (end=494): getarg
[BaselineOp] Analyzing op @ 165 (end=494): notearg
[BaselineOp] Analyzing op @ 166 (end=494): zero
[BaselineOp] Analyzing op @ 167 (end=494): notearg
[BaselineOp] Analyzing op @ 168 (end=494): getlocal
[BaselineOp] Analyzing op @ 171 (end=494): notearg
[BaselineOp] Analyzing op @ 172 (end=494): call
[BaselineOp] Analyzing op @ 175 (end=494): setlocal
[BaselineOp] Analyzing op @ 178 (end=494): pop
[BaselineOp] Analyzing op @ 179 (end=494): one
[BaselineOp] Analyzing op @ 180 (end=494): setlocal
[BaselineOp] Analyzing op @ 183 (end=494): pop
[BaselineOp] Analyzing op @ 184 (end=494): goto
[BaselineOp] Analyzing op @ 189 (end=494): loophead
[BaselineOp] Analyzing op @ 190 (end=494): callgname
[BaselineOp] Analyzing op @ 195 (end=494): undefined
[BaselineOp] Analyzing op @ 196 (end=494): notearg
[BaselineOp] Analyzing op @ 197 (end=494): getlocal
[BaselineOp] Analyzing op @ 200 (end=494): notearg
[BaselineOp] Analyzing op @ 201 (end=494): getlocal
[BaselineOp] Analyzing op @ 204 (end=494): notearg
[BaselineOp] Analyzing op @ 205 (end=494): call
[BaselineOp] Analyzing op @ 208 (end=494): setlocal
[BaselineOp] Analyzing op @ 211 (end=494): pop
[BaselineOp] Analyzing op @ 212 (end=494): callgname
[BaselineOp] Analyzing op @ 217 (end=494): undefined
[BaselineOp] Analyzing op @ 218 (end=494): notearg
[BaselineOp] Analyzing op @ 219 (end=494): getlocal
[BaselineOp] Analyzing op @ 222 (end=494): notearg
[BaselineOp] Analyzing op @ 223 (end=494): getlocal
[BaselineOp] Analyzing op @ 226 (end=494): notearg
[BaselineOp] Analyzing op @ 227 (end=494): call
[BaselineOp] Analyzing op @ 230 (end=494): setlocal
[BaselineOp] Analyzing op @ 233 (end=494): pop
[BaselineOp] Analyzing op @ 234 (end=494): callgname
[BaselineOp] Analyzing op @ 239 (end=494): undefined
[BaselineOp] Analyzing op @ 240 (end=494): notearg
[BaselineOp] Analyzing op @ 241 (end=494): getlocal
[BaselineOp] Analyzing op @ 244 (end=494): notearg
[BaselineOp] Analyzing op @ 245 (end=494): getlocal
[BaselineOp] Analyzing op @ 248 (end=494): notearg
[BaselineOp] Analyzing op @ 249 (end=494): call
[BaselineOp] Analyzing op @ 252 (end=494): setlocal
[BaselineOp] Analyzing op @ 255 (end=494): pop
[BaselineOp] Analyzing op @ 256 (end=494): callgname
[BaselineOp] Analyzing op @ 261 (end=494): undefined
[BaselineOp] Analyzing op @ 262 (end=494): notearg
[BaselineOp] Analyzing op @ 263 (end=494): getlocal
[BaselineOp] Analyzing op @ 266 (end=494): notearg
[BaselineOp] Analyzing op @ 267 (end=494): getarg
[BaselineOp] Analyzing op @ 270 (end=494): notearg
[BaselineOp] Analyzing op @ 271 (end=494): getlocal
[BaselineOp] Analyzing op @ 274 (end=494): notearg
[BaselineOp] Analyzing op @ 275 (end=494): getlocal
[BaselineOp] Analyzing op @ 278 (end=494): notearg
[BaselineOp] Analyzing op @ 279 (end=494): call
[BaselineOp] Analyzing op @ 282 (end=494): setlocal
[BaselineOp] Analyzing op @ 285 (end=494): pop
[BaselineOp] Analyzing op @ 286 (end=494): getlocal
[BaselineOp] Analyzing op @ 289 (end=494): pos
[BaselineOp] Analyzing op @ 290 (end=494): dup
[BaselineOp] Analyzing op @ 291 (end=494): one
[BaselineOp] Analyzing op @ 292 (end=494): add
[BaselineOp] Analyzing op @ 293 (end=494): setlocal
[BaselineOp] Analyzing op @ 296 (end=494): pop
[BaselineOp] Analyzing op @ 297 (end=494): pop
[BaselineOp] Analyzing op @ 298 (end=494): loopentry
[BaselineOp] Analyzing op @ 300 (end=494): getlocal
[BaselineOp] Analyzing op @ 303 (end=494): getlocal
[BaselineOp] Analyzing op @ 306 (end=494): lt
[BaselineOp] Analyzing op @ 307 (end=494): ifne
[BaselineOp] Analyzing op @ 190 (end=494): callgname
[BaselineOp] Analyzing op @ 195 (end=494): undefined
[BaselineOp] Analyzing op @ 196 (end=494): notearg
[BaselineOp] Analyzing op @ 197 (end=494): getlocal
[BaselineOp] Analyzing op @ 200 (end=494): notearg
[BaselineOp] Analyzing op @ 201 (end=494): getlocal
[BaselineOp] Analyzing op @ 204 (end=494): notearg
[BaselineOp] Analyzing op @ 205 (end=494): call
[BaselineOp] Analyzing op @ 208 (end=494): setlocal
[BaselineOp] Analyzing op @ 211 (end=494): pop
[BaselineOp] Analyzing op @ 212 (end=494): callgname
[BaselineOp] Analyzing op @ 217 (end=494): undefined
[BaselineOp] Analyzing op @ 218 (end=494): notearg
[BaselineOp] Analyzing op @ 219 (end=494): getlocal
[BaselineOp] Analyzing op @ 222 (end=494): notearg
[BaselineOp] Analyzing op @ 223 (end=494): getlocal
[BaselineOp] Analyzing op @ 226 (end=494): notearg
[BaselineOp] Analyzing op @ 227 (end=494): call
[BaselineOp] Analyzing op @ 230 (end=494): setlocal
[BaselineOp] Analyzing op @ 233 (end=494): pop
[BaselineOp] Analyzing op @ 234 (end=494): callgname
[BaselineOp] Analyzing op @ 239 (end=494): undefined
[BaselineOp] Analyzing op @ 240 (end=494): notearg
[BaselineOp] Analyzing op @ 241 (end=494): getlocal
[BaselineOp] Analyzing op @ 244 (end=494): notearg
[BaselineOp] Analyzing op @ 245 (end=494): getlocal
[BaselineOp] Analyzing op @ 248 (end=494): notearg
[BaselineOp] Analyzing op @ 249 (end=494): call
[BaselineOp] Analyzing op @ 252 (end=494): setlocal
[BaselineOp] Analyzing op @ 255 (end=494): pop
[BaselineOp] Analyzing op @ 256 (end=494): callgname
[BaselineOp] Analyzing op @ 261 (end=494): undefined
[BaselineOp] Analyzing op @ 262 (end=494): notearg
[BaselineOp] Analyzing op @ 263 (end=494): getlocal
[BaselineOp] Analyzing op @ 266 (end=494): notearg
[BaselineOp] Analyzing op @ 267 (end=494): getarg
[BaselineOp] Analyzing op @ 270 (end=494): notearg
[BaselineOp] Analyzing op @ 271 (end=494): getlocal
[BaselineOp] Analyzing op @ 274 (end=494): notearg
[BaselineOp] Analyzing op @ 275 (end=494): getlocal
[BaselineOp] Analyzing op @ 278 (end=494): notearg
[BaselineOp] Analyzing op @ 279 (end=494): call
[BaselineOp] Analyzing op @ 282 (end=494): setlocal
[BaselineOp] Analyzing op @ 285 (end=494): pop
[BaselineOp] Analyzing op @ 286 (end=494): getlocal
[BaselineOp] Analyzing op @ 289 (end=494): pos
[BaselineOp] Analyzing op @ 290 (end=494): dup
[BaselineOp] Analyzing op @ 291 (end=494): one
[BaselineOp] Analyzing op @ 292 (end=494): add
[BaselineOp] Analyzing op @ 293 (end=494): setlocal
[BaselineOp] Analyzing op @ 296 (end=494): pop
[BaselineOp] Analyzing op @ 297 (end=494): pop
[BaselineOp] Analyzing op @ 298 (end=494): loopentry
[BaselineOp] Analyzing op @ 300 (end=494): getlocal
[BaselineOp] Analyzing op @ 303 (end=494): getlocal
[BaselineOp] Analyzing op @ 306 (end=494): lt
[BaselineOp] Analyzing op @ 307 (end=494): ifne
[BaselineOp] Analyzing op @ 312 (end=494): callgname
[BaselineOp] Analyzing op @ 317 (end=494): undefined
[BaselineOp] Analyzing op @ 318 (end=494): notearg
[BaselineOp] Analyzing op @ 319 (end=494): getlocal
[BaselineOp] Analyzing op @ 322 (end=494): notearg
[BaselineOp] Analyzing op @ 323 (end=494): getlocal
[BaselineOp] Analyzing op @ 326 (end=494): notearg
[BaselineOp] Analyzing op @ 327 (end=494): call
[BaselineOp] Analyzing op @ 330 (end=494): setlocal
[BaselineOp] Analyzing op @ 333 (end=494): pop
[BaselineOp] Analyzing op @ 334 (end=494): callgname
[BaselineOp] Analyzing op @ 339 (end=494): undefined
[BaselineOp] Analyzing op @ 340 (end=494): notearg
[BaselineOp] Analyzing op @ 341 (end=494): getlocal
[BaselineOp] Analyzing op @ 344 (end=494): notearg
[BaselineOp] Analyzing op @ 345 (end=494): getlocal
[BaselineOp] Analyzing op @ 348 (end=494): notearg
[BaselineOp] Analyzing op @ 349 (end=494): call
[BaselineOp] Analyzing op @ 352 (end=494): setlocal
[BaselineOp] Analyzing op @ 355 (end=494): pop
[BaselineOp] Analyzing op @ 356 (end=494): callgname
[BaselineOp] Analyzing op @ 361 (end=494): undefined
[BaselineOp] Analyzing op @ 362 (end=494): notearg
[BaselineOp] Analyzing op @ 363 (end=494): getlocal
[BaselineOp] Analyzing op @ 366 (end=494): notearg
[BaselineOp] Analyzing op @ 367 (end=494): getarg
[BaselineOp] Analyzing op @ 370 (end=494): notearg
[BaselineOp] Analyzing op @ 371 (end=494): getlocal
[BaselineOp] Analyzing op @ 374 (end=494): notearg
[BaselineOp] Analyzing op @ 375 (end=494): getlocal
[BaselineOp] Analyzing op @ 378 (end=494): notearg
[BaselineOp] Analyzing op @ 379 (end=494): call
[BaselineOp] Analyzing op @ 382 (end=494): setlocal
[BaselineOp] Analyzing op @ 385 (end=494): pop
[BaselineOp] Analyzing op @ 386 (end=494): getgname
[BaselineOp] Analyzing op @ 391 (end=494): undefined
[BaselineOp] Analyzing op @ 392 (end=494): notearg
[BaselineOp] Analyzing op @ 393 (end=494): int8
[BaselineOp] Analyzing op @ 395 (end=494): getlocal
[BaselineOp] Analyzing op @ 398 (end=494): mul
[BaselineOp] Analyzing op @ 399 (end=494): notearg
[BaselineOp] Analyzing op @ 400 (end=494): new
[BaselineOp] Analyzing op @ 403 (end=494): setlocal
[BaselineOp] Analyzing op @ 406 (end=494): pop
[BaselineOp] Analyzing op @ 407 (end=494): zero
[BaselineOp] Analyzing op @ 408 (end=494): setlocal
[BaselineOp] Analyzing op @ 411 (end=494): pop
[BaselineOp] Analyzing op @ 412 (end=494): goto
[BaselineOp] Analyzing op @ 417 (end=494): loophead
[BaselineOp] Analyzing op @ 418 (end=494): getlocal
[BaselineOp] Analyzing op @ 421 (end=494): getlocal
[BaselineOp] Analyzing op @ 424 (end=494): getlocal
[BaselineOp] Analyzing op @ 427 (end=494): getlocal
[BaselineOp] Analyzing op @ 430 (end=494): int8
[BaselineOp] Analyzing op @ 432 (end=494): mod
[BaselineOp] Analyzing op @ 433 (end=494): getelem
[BaselineOp] Analyzing op @ 434 (end=494): getgname
[BaselineOp] Analyzing op @ 439 (end=494): dup
[BaselineOp] Analyzing op @ 440 (end=494): callprop
[BaselineOp] Analyzing op @ 445 (end=494): swap
[BaselineOp] Analyzing op @ 446 (end=494): notearg
[BaselineOp] Analyzing op @ 447 (end=494): getlocal
[BaselineOp] Analyzing op @ 450 (end=494): int8
[BaselineOp] Analyzing op @ 452 (end=494): div
[BaselineOp] Analyzing op @ 453 (end=494): notearg
[BaselineOp] Analyzing op @ 454 (end=494): call
[BaselineOp] Analyzing op @ 457 (end=494): getelem
[BaselineOp] Analyzing op @ 458 (end=494): setelem
[BaselineOp] Analyzing op @ 459 (end=494): pop
[BaselineOp] Analyzing op @ 460 (end=494): getlocal
[BaselineOp] Analyzing op @ 463 (end=494): pos
[BaselineOp] Analyzing op @ 464 (end=494): dup
[BaselineOp] Analyzing op @ 465 (end=494): one
[BaselineOp] Analyzing op @ 466 (end=494): add
[BaselineOp] Analyzing op @ 467 (end=494): setlocal
[BaselineOp] Analyzing op @ 470 (end=494): pop
[BaselineOp] Analyzing op @ 471 (end=494): pop
[BaselineOp] Analyzing op @ 472 (end=494): loopentry
[BaselineOp] Analyzing op @ 474 (end=494): getlocal
[BaselineOp] Analyzing op @ 477 (end=494): int8
[BaselineOp] Analyzing op @ 479 (end=494): getlocal
[BaselineOp] Analyzing op @ 482 (end=494): mul
[BaselineOp] Analyzing op @ 483 (end=494): lt
[BaselineOp] Analyzing op @ 484 (end=494): ifne
[BaselineOp] Analyzing op @ 418 (end=494): getlocal
[BaselineOp] Analyzing op @ 421 (end=494): getlocal
[BaselineOp] Analyzing op @ 424 (end=494): getlocal
[BaselineOp] Analyzing op @ 427 (end=494): getlocal
[BaselineOp] Analyzing op @ 430 (end=494): int8
[BaselineOp] Analyzing op @ 432 (end=494): mod
[BaselineOp] Analyzing op @ 433 (end=494): getelem
[BaselineOp] Analyzing op @ 434 (end=494): getgname
[BaselineOp] Analyzing op @ 439 (end=494): dup
[BaselineOp] Analyzing op @ 440 (end=494): callprop
[BaselineOp] Analyzing op @ 445 (end=494): swap
[BaselineOp] Analyzing op @ 446 (end=494): notearg
[BaselineOp] Analyzing op @ 447 (end=494): getlocal
[BaselineOp] Analyzing op @ 450 (end=494): int8
[BaselineOp] Analyzing op @ 452 (end=494): div
[BaselineOp] Analyzing op @ 453 (end=494): notearg
[BaselineOp] Analyzing op @ 454 (end=494): call
[BaselineOp] Analyzing op @ 457 (end=494): getelem
[BaselineOp] Analyzing op @ 458 (end=494): setelem
[BaselineOp] Analyzing op @ 459 (end=494): pop
[BaselineOp] Analyzing op @ 460 (end=494): getlocal
[BaselineOp] Analyzing op @ 463 (end=494): pos
[BaselineOp] Analyzing op @ 464 (end=494): dup
[BaselineOp] Analyzing op @ 465 (end=494): one
[BaselineOp] Analyzing op @ 466 (end=494): add
[BaselineOp] Analyzing op @ 467 (end=494): setlocal
[BaselineOp] Analyzing op @ 470 (end=494): pop
[BaselineOp] Analyzing op @ 471 (end=494): pop
[BaselineOp] Analyzing op @ 472 (end=494): loopentry
[BaselineOp] Analyzing op @ 474 (end=494): getlocal
[BaselineOp] Analyzing op @ 477 (end=494): int8
[BaselineOp] Analyzing op @ 479 (end=494): getlocal
[BaselineOp] Analyzing op @ 482 (end=494): mul
[BaselineOp] Analyzing op @ 483 (end=494): lt
[BaselineOp] Analyzing op @ 484 (end=494): ifne
[BaselineOp] Analyzing op @ 489 (end=494): getlocal
[BaselineOp] Analyzing op @ 492 (end=494): return
[BaselineOp] Analyzing op @ 493 (end=494): stop
[BaselineScripts] Baseline compiling script crypto-aes.js:13 (0x7fda8d051510)
[BaselineOp] Compiling op @ 0: int8
[BaselineOp] Compiling op @ 2: setlocal
[BaselineOp] Compiling op @ 5: pop
[BaselineOp] Compiling op @ 6: getarg
[BaselineOp] Compiling op @ 9: length
[BaselineOp] Compiling op @ 14: getlocal
[BaselineOp] Compiling op @ 17: div
[BaselineOp] Compiling op @ 18: one
[BaselineOp] Compiling op @ 19: sub
[BaselineOp] Compiling op @ 20: setlocal
[BaselineOp] Compiling op @ 23: pop
[BaselineOp] Compiling op @ 24: newarray
[BaselineOp] Compiling op @ 28: newarray
[BaselineOp] Compiling op @ 32: endinit
[BaselineOp] Compiling op @ 33: initelem_array
[BaselineOp] Compiling op @ 37: newarray
[BaselineOp] Compiling op @ 41: endinit
[BaselineOp] Compiling op @ 42: initelem_array
[BaselineOp] Compiling op @ 46: newarray
[BaselineOp] Compiling op @ 50: endinit
[BaselineOp] Compiling op @ 51: initelem_array
[BaselineOp] Compiling op @ 55: newarray
[BaselineOp] Compiling op @ 59: endinit
[BaselineOp] Compiling op @ 60: initelem_array
[BaselineOp] Compiling op @ 64: endinit
[BaselineOp] Compiling op @ 65: setlocal
[BaselineOp] Compiling op @ 68: pop
[BaselineOp] Compiling op @ 69: zero
[BaselineOp] Compiling op @ 70: setlocal
[BaselineOp] Compiling op @ 73: pop
[BaselineOp] Compiling op @ 74: goto
[BaselineOp] Compiling op @ 79: loophead
[BaselineOp] [block counter] Emitting a block counter for op @ 79: loophead (lineno: 18 column: 29)
[BaselineOp] Compiling op @ 80: getlocal
[BaselineOp] [block counter] Emitting a block counter for op @ 80: getlocal (lineno: 18 column: 29)
[BaselineOp] Compiling op @ 83: getlocal
[BaselineOp] Compiling op @ 86: int8
[BaselineOp] Compiling op @ 88: mod
[BaselineOp] Compiling op @ 89: getelem
[BaselineOp] Compiling op @ 90: getgname
[BaselineOp] Compiling op @ 95: dup
[BaselineOp] Compiling op @ 96: callprop
[BaselineOp] Compiling op @ 101: swap
[BaselineOp] Compiling op @ 102: notearg
[BaselineOp] Compiling op @ 103: getlocal
[BaselineOp] Compiling op @ 106: int8
[BaselineOp] Compiling op @ 108: div
[BaselineOp] Compiling op @ 109: notearg
[BaselineOp] Compiling op @ 110: call
[BaselineOp] Compiling op @ 113: getarg
[BaselineOp] Compiling op @ 116: getlocal
[BaselineOp] Compiling op @ 119: getelem
[BaselineOp] Compiling op @ 120: setelem
[BaselineOp] Compiling op @ 121: pop
[BaselineOp] Compiling op @ 122: getlocal
[BaselineOp] Compiling op @ 125: pos
[BaselineOp] Compiling op @ 126: dup
[BaselineOp] Compiling op @ 127: one
[BaselineOp] Compiling op @ 128: add
[BaselineOp] Compiling op @ 129: setlocal
[BaselineOp] Compiling op @ 132: pop
[BaselineOp] Compiling op @ 133: pop
[BaselineOp] Compiling op @ 134: loopentry
[BaselineOp] [block counter] Emitting a block counter for op @ 134: loopentry (lineno: 18 column: 16)
[BaselineOp] Compiling op @ 136: getlocal
[BaselineOp] Compiling op @ 139: int8
[BaselineOp] Compiling op @ 141: getlocal
[BaselineOp] Compiling op @ 144: mul
[BaselineOp] Compiling op @ 145: lt
[BaselineOp] Compiling op @ 146: ifne
[BaselineOp] Compiling op @ 151: callgname
[BaselineOp] [block counter] Emitting a block counter for op @ 151: callgname (lineno: 20 column: 2)
[BaselineOp] Compiling op @ 156: undefined
[BaselineOp] Compiling op @ 157: notearg
[BaselineOp] Compiling op @ 158: getlocal
[BaselineOp] Compiling op @ 161: notearg
[BaselineOp] Compiling op @ 162: getarg
[BaselineOp] Compiling op @ 165: notearg
[BaselineOp] Compiling op @ 166: zero
[BaselineOp] Compiling op @ 167: notearg
[BaselineOp] Compiling op @ 168: getlocal
[BaselineOp] Compiling op @ 171: notearg
[BaselineOp] Compiling op @ 172: call
[BaselineOp] Compiling op @ 175: setlocal
[BaselineOp] Compiling op @ 178: pop
[BaselineOp] Compiling op @ 179: one
[BaselineOp] Compiling op @ 180: setlocal
[BaselineOp] Compiling op @ 183: pop
[BaselineOp] Compiling op @ 184: goto
[BaselineOp] Compiling op @ 189: loophead
[BaselineOp] [block counter] Emitting a block counter for op @ 189: loophead (lineno: 23 column: 0)
[BaselineOp] Compiling op @ 190: callgname
[BaselineOp] [block counter] Emitting a block counter for op @ 190: callgname (lineno: 23 column: 4)
[BaselineOp] Compiling op @ 195: undefined
[BaselineOp] Compiling op @ 196: notearg
[BaselineOp] Compiling op @ 197: getlocal
[BaselineOp] Compiling op @ 200: notearg
[BaselineOp] Compiling op @ 201: getlocal
[BaselineOp] Compiling op @ 204: notearg
[BaselineOp] Compiling op @ 205: call
[BaselineOp] Compiling op @ 208: setlocal
[BaselineOp] Compiling op @ 211: pop
[BaselineOp] Compiling op @ 212: callgname
[BaselineOp] Compiling op @ 217: undefined
[BaselineOp] Compiling op @ 218: notearg
[BaselineOp] Compiling op @ 219: getlocal
[BaselineOp] Compiling op @ 222: notearg
[BaselineOp] Compiling op @ 223: getlocal
[BaselineOp] Compiling op @ 226: notearg
[BaselineOp] Compiling op @ 227: call
[BaselineOp] Compiling op @ 230: setlocal
[BaselineOp] Compiling op @ 233: pop
[BaselineOp] Compiling op @ 234: callgname
[BaselineOp] Compiling op @ 239: undefined
[BaselineOp] Compiling op @ 240: notearg
[BaselineOp] Compiling op @ 241: getlocal
[BaselineOp] Compiling op @ 244: notearg
[BaselineOp] Compiling op @ 245: getlocal
[BaselineOp] Compiling op @ 248: notearg
[BaselineOp] Compiling op @ 249: call
[BaselineOp] Compiling op @ 252: setlocal
[BaselineOp] Compiling op @ 255: pop
[BaselineOp] Compiling op @ 256: callgname
[BaselineOp] Compiling op @ 261: undefined
[BaselineOp] Compiling op @ 262: notearg
[BaselineOp] Compiling op @ 263: getlocal
[BaselineOp] Compiling op @ 266: notearg
[BaselineOp] Compiling op @ 267: getarg
[BaselineOp] Compiling op @ 270: notearg
[BaselineOp] Compiling op @ 271: getlocal
[BaselineOp] Compiling op @ 274: notearg
[BaselineOp] Compiling op @ 275: getlocal
[BaselineOp] Compiling op @ 278: notearg
[BaselineOp] Compiling op @ 279: call
[BaselineOp] Compiling op @ 282: setlocal
[BaselineOp] Compiling op @ 285: pop
[BaselineOp] Compiling op @ 286: getlocal
[BaselineOp] Compiling op @ 289: pos
[BaselineOp] Compiling op @ 290: dup
[BaselineOp] Compiling op @ 291: one
[BaselineOp] Compiling op @ 292: add
[BaselineOp] Compiling op @ 293: setlocal
[BaselineOp] Compiling op @ 296: pop
[BaselineOp] Compiling op @ 297: pop
[BaselineOp] Compiling op @ 298: loopentry
[BaselineOp] [block counter] Emitting a block counter for op @ 298: loopentry (lineno: 22 column: 20)
[BaselineOp] Compiling op @ 300: getlocal
[BaselineOp] Compiling op @ 303: getlocal
[BaselineOp] Compiling op @ 306: lt
[BaselineOp] Compiling op @ 307: ifne
[BaselineOp] Compiling op @ 312: callgname
[BaselineOp] [block counter] Emitting a block counter for op @ 312: callgname (lineno: 29 column: 2)
[BaselineOp] Compiling op @ 317: undefined
[BaselineOp] Compiling op @ 318: notearg
[BaselineOp] Compiling op @ 319: getlocal
[BaselineOp] Compiling op @ 322: notearg
[BaselineOp] Compiling op @ 323: getlocal
[BaselineOp] Compiling op @ 326: notearg
[BaselineOp] Compiling op @ 327: call
[BaselineOp] Compiling op @ 330: setlocal
[BaselineOp] Compiling op @ 333: pop
[BaselineOp] Compiling op @ 334: callgname
[BaselineOp] Compiling op @ 339: undefined
[BaselineOp] Compiling op @ 340: notearg
[BaselineOp] Compiling op @ 341: getlocal
[BaselineOp] Compiling op @ 344: notearg
[BaselineOp] Compiling op @ 345: getlocal
[BaselineOp] Compiling op @ 348: notearg
[BaselineOp] Compiling op @ 349: call
[BaselineOp] Compiling op @ 352: setlocal
[BaselineOp] Compiling op @ 355: pop
[BaselineOp] Compiling op @ 356: callgname
[BaselineOp] Compiling op @ 361: undefined
[BaselineOp] Compiling op @ 362: notearg
[BaselineOp] Compiling op @ 363: getlocal
[BaselineOp] Compiling op @ 366: notearg
[BaselineOp] Compiling op @ 367: getarg
[BaselineOp] Compiling op @ 370: notearg
[BaselineOp] Compiling op @ 371: getlocal
[BaselineOp] Compiling op @ 374: notearg
[BaselineOp] Compiling op @ 375: getlocal
[BaselineOp] Compiling op @ 378: notearg
[BaselineOp] Compiling op @ 379: call
[BaselineOp] Compiling op @ 382: setlocal
[BaselineOp] Compiling op @ 385: pop
[BaselineOp] Compiling op @ 386: getgname
[BaselineOp] Compiling op @ 391: undefined
[BaselineOp] Compiling op @ 392: notearg
[BaselineOp] Compiling op @ 393: int8
[BaselineOp] Compiling op @ 395: getlocal
[BaselineOp] Compiling op @ 398: mul
[BaselineOp] Compiling op @ 399: notearg
[BaselineOp] Compiling op @ 400: new
[BaselineOp] Compiling op @ 403: setlocal
[BaselineOp] Compiling op @ 406: pop
[BaselineOp] Compiling op @ 407: zero
[BaselineOp] Compiling op @ 408: setlocal
[BaselineOp] Compiling op @ 411: pop
[BaselineOp] Compiling op @ 412: goto
[BaselineOp] Compiling op @ 417: loophead
[BaselineOp] [block counter] Emitting a block counter for op @ 417: loophead (lineno: 34 column: 29)
[BaselineOp] Compiling op @ 418: getlocal
[BaselineOp] [block counter] Emitting a block counter for op @ 418: getlocal (lineno: 34 column: 29)
[BaselineOp] Compiling op @ 421: getlocal
[BaselineOp] Compiling op @ 424: getlocal
[BaselineOp] Compiling op @ 427: getlocal
[BaselineOp] Compiling op @ 430: int8
[BaselineOp] Compiling op @ 432: mod
[BaselineOp] Compiling op @ 433: getelem
[BaselineOp] Compiling op @ 434: getgname
[BaselineOp] Compiling op @ 439: dup
[BaselineOp] Compiling op @ 440: callprop
[BaselineOp] Compiling op @ 445: swap
[BaselineOp] Compiling op @ 446: notearg
[BaselineOp] Compiling op @ 447: getlocal
[BaselineOp] Compiling op @ 450: int8
[BaselineOp] Compiling op @ 452: div
[BaselineOp] Compiling op @ 453: notearg
[BaselineOp] Compiling op @ 454: call
[BaselineOp] Compiling op @ 457: getelem
[BaselineOp] Compiling op @ 458: setelem
[BaselineOp] Compiling op @ 459: pop
[BaselineOp] Compiling op @ 460: getlocal
[BaselineOp] Compiling op @ 463: pos
[BaselineOp] Compiling op @ 464: dup
[BaselineOp] Compiling op @ 465: one
[BaselineOp] Compiling op @ 466: add
[BaselineOp] Compiling op @ 467: setlocal
[BaselineOp] Compiling op @ 470: pop
[BaselineOp] Compiling op @ 471: pop
[BaselineOp] Compiling op @ 472: loopentry
[BaselineOp] [block counter] Emitting a block counter for op @ 472: loopentry (lineno: 34 column: 16)
[BaselineOp] Compiling op @ 474: getlocal
[BaselineOp] Compiling op @ 477: int8
[BaselineOp] Compiling op @ 479: getlocal
[BaselineOp] Compiling op @ 482: mul
[BaselineOp] Compiling op @ 483: lt
[BaselineOp] Compiling op @ 484: ifne
[BaselineOp] Compiling op @ 489: getlocal
[BaselineOp] [block counter] Emitting a block counter for op @ 489: getlocal (lineno: 35 column: 2)
[BaselineOp] Compiling op @ 492: return
[BaselineOp] Compiling op @ 493: stop
[BaselineScripts] Created BaselineScript 0x1d78b80 (raw 0x7fda8ed302e8) for crypto-aes.js:13
[BaselineScripts] [block counter] 12 block counters were emitted for script crypto-aes.js:13 (0x1d78b80) (lineno: 35 column: 16)
[BaselineOp] Analyzing op @ 0 (end=111): zero
[BaselineOp] Analyzing op @ 1 (end=111): setlocal
[BaselineOp] Analyzing op @ 4 (end=111): pop
[BaselineOp] Analyzing op @ 5 (end=111): goto
[BaselineOp] Analyzing op @ 10 (end=111): loophead
[BaselineOp] Analyzing op @ 11 (end=111): zero
[BaselineOp] Analyzing op @ 12 (end=111): setlocal
[BaselineOp] Analyzing op @ 15 (end=111): pop
[BaselineOp] Analyzing op @ 16 (end=111): goto
[BaselineOp] Analyzing op @ 21 (end=111): loophead
[BaselineOp] Analyzing op @ 22 (end=111): getarg
[BaselineOp] Analyzing op @ 25 (end=111): getlocal
[BaselineOp] Analyzing op @ 28 (end=111): getelem
[BaselineOp] Analyzing op @ 29 (end=111): getlocal
[BaselineOp] Analyzing op @ 32 (end=111): dup2
[BaselineOp] Analyzing op @ 33 (end=111): getelem
[BaselineOp] Analyzing op @ 34 (end=111): getarg
[BaselineOp] Analyzing op @ 37 (end=111): getarg
[BaselineOp] Analyzing op @ 40 (end=111): int8
[BaselineOp] Analyzing op @ 42 (end=111): mul
[BaselineOp] Analyzing op @ 43 (end=111): getlocal
[BaselineOp] Analyzing op @ 46 (end=111): add
[BaselineOp] Analyzing op @ 47 (end=111): getelem
[BaselineOp] Analyzing op @ 48 (end=111): getlocal
[BaselineOp] Analyzing op @ 51 (end=111): getelem
[BaselineOp] Analyzing op @ 52 (end=111): bitxor
[BaselineOp] Analyzing op @ 53 (end=111): setelem
[BaselineOp] Analyzing op @ 54 (end=111): pop
[BaselineOp] Analyzing op @ 55 (end=111): getlocal
[BaselineOp] Analyzing op @ 58 (end=111): pos
[BaselineOp] Analyzing op @ 59 (end=111): dup
[BaselineOp] Analyzing op @ 60 (end=111): one
[BaselineOp] Analyzing op @ 61 (end=111): add
[BaselineOp] Analyzing op @ 62 (end=111): setlocal
[BaselineOp] Analyzing op @ 65 (end=111): pop
[BaselineOp] Analyzing op @ 66 (end=111): pop
[BaselineOp] Analyzing op @ 67 (end=111): loopentry
[BaselineOp] Analyzing op @ 69 (end=111): getlocal
[BaselineOp] Analyzing op @ 72 (end=111): getarg
[BaselineOp] Analyzing op @ 75 (end=111): lt
[BaselineOp] Analyzing op @ 76 (end=111): ifne
[BaselineOp] Analyzing op @ 81 (end=111): getlocal
[BaselineOp] Analyzing op @ 84 (end=111): pos
[BaselineOp] Analyzing op @ 85 (end=111): dup
[BaselineOp] Analyzing op @ 86 (end=111): one
[BaselineOp] Analyzing op @ 87 (end=111): add
[BaselineOp] Analyzing op @ 88 (end=111): setlocal
[BaselineOp] Analyzing op @ 91 (end=111): pop
[BaselineOp] Analyzing op @ 92 (end=111): pop
[BaselineOp] Analyzing op @ 93 (end=111): loopentry
[BaselineOp] Analyzing op @ 95 (end=111): getlocal
[BaselineOp] Analyzing op @ 98 (end=111): int8
[BaselineOp] Analyzing op @ 100 (end=111): lt
[BaselineOp] Analyzing op @ 101 (end=111): ifne
[BaselineOp] Analyzing op @ 11 (end=111): zero
[BaselineOp] Analyzing op @ 12 (end=111): setlocal
[BaselineOp] Analyzing op @ 15 (end=111): pop
[BaselineOp] Analyzing op @ 16 (end=111): goto
[BaselineOp] Analyzing op @ 21 (end=111): loophead
[BaselineOp] Analyzing op @ 22 (end=111): getarg
[BaselineOp] Analyzing op @ 25 (end=111): getlocal
[BaselineOp] Analyzing op @ 28 (end=111): getelem
[BaselineOp] Analyzing op @ 29 (end=111): getlocal
[BaselineOp] Analyzing op @ 32 (end=111): dup2
[BaselineOp] Analyzing op @ 33 (end=111): getelem
[BaselineOp] Analyzing op @ 34 (end=111): getarg
[BaselineOp] Analyzing op @ 37 (end=111): getarg
[BaselineOp] Analyzing op @ 40 (end=111): int8
[BaselineOp] Analyzing op @ 42 (end=111): mul
[BaselineOp] Analyzing op @ 43 (end=111): getlocal
[BaselineOp] Analyzing op @ 46 (end=111): add
[BaselineOp] Analyzing op @ 47 (end=111): getelem
[BaselineOp] Analyzing op @ 48 (end=111): getlocal
[BaselineOp] Analyzing op @ 51 (end=111): getelem
[BaselineOp] Analyzing op @ 52 (end=111): bitxor
[BaselineOp] Analyzing op @ 53 (end=111): setelem
[BaselineOp] Analyzing op @ 54 (end=111): pop
[BaselineOp] Analyzing op @ 55 (end=111): getlocal
[BaselineOp] Analyzing op @ 58 (end=111): pos
[BaselineOp] Analyzing op @ 59 (end=111): dup
[BaselineOp] Analyzing op @ 60 (end=111): one
[BaselineOp] Analyzing op @ 61 (end=111): add
[BaselineOp] Analyzing op @ 62 (end=111): setlocal
[BaselineOp] Analyzing op @ 65 (end=111): pop
[BaselineOp] Analyzing op @ 66 (end=111): pop
[BaselineOp] Analyzing op @ 67 (end=111): loopentry
[BaselineOp] Analyzing op @ 69 (end=111): getlocal
[BaselineOp] Analyzing op @ 72 (end=111): getarg
[BaselineOp] Analyzing op @ 75 (end=111): lt
[BaselineOp] Analyzing op @ 76 (end=111): ifne
[BaselineOp] Analyzing op @ 22 (end=111): getarg
[BaselineOp] Analyzing op @ 25 (end=111): getlocal
[BaselineOp] Analyzing op @ 28 (end=111): getelem
[BaselineOp] Analyzing op @ 29 (end=111): getlocal
[BaselineOp] Analyzing op @ 32 (end=111): dup2
[BaselineOp] Analyzing op @ 33 (end=111): getelem
[BaselineOp] Analyzing op @ 34 (end=111): getarg
[BaselineOp] Analyzing op @ 37 (end=111): getarg
[BaselineOp] Analyzing op @ 40 (end=111): int8
[BaselineOp] Analyzing op @ 42 (end=111): mul
[BaselineOp] Analyzing op @ 43 (end=111): getlocal
[BaselineOp] Analyzing op @ 46 (end=111): add
[BaselineOp] Analyzing op @ 47 (end=111): getelem
[BaselineOp] Analyzing op @ 48 (end=111): getlocal
[BaselineOp] Analyzing op @ 51 (end=111): getelem
[BaselineOp] Analyzing op @ 52 (end=111): bitxor
[BaselineOp] Analyzing op @ 53 (end=111): setelem
[BaselineOp] Analyzing op @ 54 (end=111): pop
[BaselineOp] Analyzing op @ 55 (end=111): getlocal
[BaselineOp] Analyzing op @ 58 (end=111): pos
[BaselineOp] Analyzing op @ 59 (end=111): dup
[BaselineOp] Analyzing op @ 60 (end=111): one
[BaselineOp] Analyzing op @ 61 (end=111): add
[BaselineOp] Analyzing op @ 62 (end=111): setlocal
[BaselineOp] Analyzing op @ 65 (end=111): pop
[BaselineOp] Analyzing op @ 66 (end=111): pop
[BaselineOp] Analyzing op @ 67 (end=111): loopentry
[BaselineOp] Analyzing op @ 69 (end=111): getlocal
[BaselineOp] Analyzing op @ 72 (end=111): getarg
[BaselineOp] Analyzing op @ 75 (end=111): lt
[BaselineOp] Analyzing op @ 76 (end=111): ifne
[BaselineOp] Analyzing op @ 81 (end=111): getlocal
[BaselineOp] Analyzing op @ 84 (end=111): pos
[BaselineOp] Analyzing op @ 85 (end=111): dup
[BaselineOp] Analyzing op @ 86 (end=111): one
[BaselineOp] Analyzing op @ 87 (end=111): add
[BaselineOp] Analyzing op @ 88 (end=111): setlocal
[BaselineOp] Analyzing op @ 91 (end=111): pop
[BaselineOp] Analyzing op @ 92 (end=111): pop
[BaselineOp] Analyzing op @ 93 (end=111): loopentry
[BaselineOp] Analyzing op @ 95 (end=111): getlocal
[BaselineOp] Analyzing op @ 98 (end=111): int8
[BaselineOp] Analyzing op @ 100 (end=111): lt
[BaselineOp] Analyzing op @ 101 (end=111): ifne
[BaselineOp] Analyzing op @ 106 (end=111): getarg
[BaselineOp] Analyzing op @ 109 (end=111): return
[BaselineOp] Analyzing op @ 110 (end=111): stop
[BaselineScripts] Baseline compiling script crypto-aes.js:75 (0x7fda8d0515d8)
[BaselineOp] Compiling op @ 0: zero
[BaselineOp] Compiling op @ 1: setlocal
[BaselineOp] Compiling op @ 4: pop
[BaselineOp] Compiling op @ 5: goto
[BaselineOp] Compiling op @ 10: loophead
[BaselineOp] [block counter] Emitting a block counter for op @ 10: loophead (lineno: 77 column: 0)
[BaselineOp] Compiling op @ 11: zero
[BaselineOp] [block counter] Emitting a block counter for op @ 11: zero (lineno: 77 column: 9)
[BaselineOp] Compiling op @ 12: setlocal
[BaselineOp] Compiling op @ 15: pop
[BaselineOp] Compiling op @ 16: goto
[BaselineOp] Compiling op @ 21: loophead
[BaselineOp] [block counter] Emitting a block counter for op @ 21: loophead (lineno: 77 column: 29)
[BaselineOp] Compiling op @ 22: getarg
[BaselineOp] [block counter] Emitting a block counter for op @ 22: getarg (lineno: 77 column: 29)
[BaselineOp] Compiling op @ 25: getlocal
[BaselineOp] Compiling op @ 28: getelem
[BaselineOp] Compiling op @ 29: getlocal
[BaselineOp] Compiling op @ 32: dup2
[BaselineOp] Compiling op @ 33: getelem
[BaselineOp] Compiling op @ 34: getarg
[BaselineOp] Compiling op @ 37: getarg
[BaselineOp] Compiling op @ 40: int8
[BaselineOp] Compiling op @ 42: mul
[BaselineOp] Compiling op @ 43: getlocal
[BaselineOp] Compiling op @ 46: add
[BaselineOp] Compiling op @ 47: getelem
[BaselineOp] Compiling op @ 48: getlocal
[BaselineOp] Compiling op @ 51: getelem
[BaselineOp] Compiling op @ 52: bitxor
[BaselineOp] Compiling op @ 53: setelem
[BaselineOp] Compiling op @ 54: pop
[BaselineOp] Compiling op @ 55: getlocal
[BaselineOp] Compiling op @ 58: pos
[BaselineOp] Compiling op @ 59: dup
[BaselineOp] Compiling op @ 60: one
[BaselineOp] Compiling op @ 61: add
[BaselineOp] Compiling op @ 62: setlocal
[BaselineOp] Compiling op @ 65: pop
[BaselineOp] Compiling op @ 66: pop
[BaselineOp] Compiling op @ 67: loopentry
[BaselineOp] [block counter] Emitting a block counter for op @ 67: loopentry (lineno: 77 column: 18)
[BaselineOp] Compiling op @ 69: getlocal
[BaselineOp] Compiling op @ 72: getarg
[BaselineOp] Compiling op @ 75: lt
[BaselineOp] Compiling op @ 76: ifne
[BaselineOp] Compiling op @ 81: getlocal
[BaselineOp] [block counter] Emitting a block counter for op @ 81: getlocal (lineno: 76 column: 21)
[BaselineOp] Compiling op @ 84: pos
[BaselineOp] Compiling op @ 85: dup
[BaselineOp] Compiling op @ 86: one
[BaselineOp] Compiling op @ 87: add
[BaselineOp] Compiling op @ 88: setlocal
[BaselineOp] Compiling op @ 91: pop
[BaselineOp] Compiling op @ 92: pop
[BaselineOp] Compiling op @ 93: loopentry
[BaselineOp] [block counter] Emitting a block counter for op @ 93: loopentry (lineno: 76 column: 16)
[BaselineOp] Compiling op @ 95: getlocal
[BaselineOp] Compiling op @ 98: int8
[BaselineOp] Compiling op @ 100: lt
[BaselineOp] Compiling op @ 101: ifne
[BaselineOp] Compiling op @ 106: getarg
[BaselineOp] [block counter] Emitting a block counter for op @ 106: getarg (lineno: 79 column: 2)
[BaselineOp] Compiling op @ 109: return
[BaselineOp] Compiling op @ 110: stop
[BaselineScripts] Created BaselineScript 0x1d708b0 (raw 0x7fda8ed30f08) for crypto-aes.js:75
[BaselineScripts] [block counter] 8 block counters were emitted for script crypto-aes.js:75 (0x1d708b0) (lineno: 79 column: 15)
[BaselineOp] Analyzing op @ 0 (end=107): zero
[BaselineOp] Analyzing op @ 1 (end=107): setlocal
[BaselineOp] Analyzing op @ 4 (end=107): pop
[BaselineOp] Analyzing op @ 5 (end=107): goto
[BaselineOp] Analyzing op @ 10 (end=107): loophead
[BaselineOp] Analyzing op @ 11 (end=107): zero
[BaselineOp] Analyzing op @ 12 (end=107): setlocal
[BaselineOp] Analyzing op @ 15 (end=107): pop
[BaselineOp] Analyzing op @ 16 (end=107): goto
[BaselineOp] Analyzing op @ 21 (end=107): loophead
[BaselineOp] Analyzing op @ 22 (end=107): getarg
[BaselineOp] Analyzing op @ 25 (end=107): getlocal
[BaselineOp] Analyzing op @ 28 (end=107): getelem
[BaselineOp] Analyzing op @ 29 (end=107): getlocal
[BaselineOp] Analyzing op @ 32 (end=107): getgname
[BaselineOp] Analyzing op @ 37 (end=107): getarg
[BaselineOp] Analyzing op @ 40 (end=107): getlocal
[BaselineOp] Analyzing op @ 43 (end=107): getelem
[BaselineOp] Analyzing op @ 44 (end=107): getlocal
[BaselineOp] Analyzing op @ 47 (end=107): getelem
[BaselineOp] Analyzing op @ 48 (end=107): getelem
[BaselineOp] Analyzing op @ 49 (end=107): setelem
[BaselineOp] Analyzing op @ 50 (end=107): pop
[BaselineOp] Analyzing op @ 51 (end=107): getlocal
[BaselineOp] Analyzing op @ 54 (end=107): pos
[BaselineOp] Analyzing op @ 55 (end=107): dup
[BaselineOp] Analyzing op @ 56 (end=107): one
[BaselineOp] Analyzing op @ 57 (end=107): add
[BaselineOp] Analyzing op @ 58 (end=107): setlocal
[BaselineOp] Analyzing op @ 61 (end=107): pop
[BaselineOp] Analyzing op @ 62 (end=107): pop
[BaselineOp] Analyzing op @ 63 (end=107): loopentry
[BaselineOp] Analyzing op @ 65 (end=107): getlocal
[BaselineOp] Analyzing op @ 68 (end=107): getarg
[BaselineOp] Analyzing op @ 71 (end=107): lt
[BaselineOp] Analyzing op @ 72 (end=107): ifne
[BaselineOp] Analyzing op @ 77 (end=107): getlocal
[BaselineOp] Analyzing op @ 80 (end=107): pos
[BaselineOp] Analyzing op @ 81 (end=107): dup
[BaselineOp] Analyzing op @ 82 (end=107): one
[BaselineOp] Analyzing op @ 83 (end=107): add
[BaselineOp] Analyzing op @ 84 (end=107): setlocal
[BaselineOp] Analyzing op @ 87 (end=107): pop
[BaselineOp] Analyzing op @ 88 (end=107): pop
[BaselineOp] Analyzing op @ 89 (end=107): loopentry
[BaselineOp] Analyzing op @ 91 (end=107): getlocal
[BaselineOp] Analyzing op @ 94 (end=107): int8
[BaselineOp] Analyzing op @ 96 (end=107): lt
[BaselineOp] Analyzing op @ 97 (end=107): ifne
[BaselineOp] Analyzing op @ 11 (end=107): zero
[BaselineOp] Analyzing op @ 12 (end=107): setlocal
[BaselineOp] Analyzing op @ 15 (end=107): pop
[BaselineOp] Analyzing op @ 16 (end=107): goto
[BaselineOp] Analyzing op @ 21 (end=107): loophead
[BaselineOp] Analyzing op @ 22 (end=107): getarg
[BaselineOp] Analyzing op @ 25 (end=107): getlocal
[BaselineOp] Analyzing op @ 28 (end=107): getelem
[BaselineOp] Analyzing op @ 29 (end=107): getlocal
[BaselineOp] Analyzing op @ 32 (end=107): getgname
[BaselineOp] Analyzing op @ 37 (end=107): getarg
[BaselineOp] Analyzing op @ 40 (end=107): getlocal
[BaselineOp] Analyzing op @ 43 (end=107): getelem
[BaselineOp] Analyzing op @ 44 (end=107): getlocal
[BaselineOp] Analyzing op @ 47 (end=107): getelem
[BaselineOp] Analyzing op @ 48 (end=107): getelem
[BaselineOp] Analyzing op @ 49 (end=107): setelem
[BaselineOp] Analyzing op @ 50 (end=107): pop
[BaselineOp] Analyzing op @ 51 (end=107): getlocal
[BaselineOp] Analyzing op @ 54 (end=107): pos
[BaselineOp] Analyzing op @ 55 (end=107): dup
[BaselineOp] Analyzing op @ 56 (end=107): one
[BaselineOp] Analyzing op @ 57 (end=107): add
[BaselineOp] Analyzing op @ 58 (end=107): setlocal
[BaselineOp] Analyzing op @ 61 (end=107): pop
[BaselineOp] Analyzing op @ 62 (end=107): pop
[BaselineOp] Analyzing op @ 63 (end=107): loopentry
[BaselineOp] Analyzing op @ 65 (end=107): getlocal
[BaselineOp] Analyzing op @ 68 (end=107): getarg
[BaselineOp] Analyzing op @ 71 (end=107): lt
[BaselineOp] Analyzing op @ 72 (end=107): ifne
[BaselineOp] Analyzing op @ 22 (end=107): getarg
[BaselineOp] Analyzing op @ 25 (end=107): getlocal
[BaselineOp] Analyzing op @ 28 (end=107): getelem
[BaselineOp] Analyzing op @ 29 (end=107): getlocal
[BaselineOp] Analyzing op @ 32 (end=107): getgname
[BaselineOp] Analyzing op @ 37 (end=107): getarg
[BaselineOp] Analyzing op @ 40 (end=107): getlocal
[BaselineOp] Analyzing op @ 43 (end=107): getelem
[BaselineOp] Analyzing op @ 44 (end=107): getlocal
[BaselineOp] Analyzing op @ 47 (end=107): getelem
[BaselineOp] Analyzing op @ 48 (end=107): getelem
[BaselineOp] Analyzing op @ 49 (end=107): setelem
[BaselineOp] Analyzing op @ 50 (end=107): pop
[BaselineOp] Analyzing op @ 51 (end=107): getlocal
[BaselineOp] Analyzing op @ 54 (end=107): pos
[BaselineOp] Analyzing op @ 55 (end=107): dup
[BaselineOp] Analyzing op @ 56 (end=107): one
[BaselineOp] Analyzing op @ 57 (end=107): add
[BaselineOp] Analyzing op @ 58 (end=107): setlocal
[BaselineOp] Analyzing op @ 61 (end=107): pop
[BaselineOp] Analyzing op @ 62 (end=107): pop
[BaselineOp] Analyzing op @ 63 (end=107): loopentry
[BaselineOp] Analyzing op @ 65 (end=107): getlocal
[BaselineOp] Analyzing op @ 68 (end=107): getarg
[BaselineOp] Analyzing op @ 71 (end=107): lt
[BaselineOp] Analyzing op @ 72 (end=107): ifne
[BaselineOp] Analyzing op @ 77 (end=107): getlocal
[BaselineOp] Analyzing op @ 80 (end=107): pos
[BaselineOp] Analyzing op @ 81 (end=107): dup
[BaselineOp] Analyzing op @ 82 (end=107): one
[BaselineOp] Analyzing op @ 83 (end=107): add
[BaselineOp] Analyzing op @ 84 (end=107): setlocal
[BaselineOp] Analyzing op @ 87 (end=107): pop
[BaselineOp] Analyzing op @ 88 (end=107): pop
[BaselineOp] Analyzing op @ 89 (end=107): loopentry
[BaselineOp] Analyzing op @ 91 (end=107): getlocal
[BaselineOp] Analyzing op @ 94 (end=107): int8
[BaselineOp] Analyzing op @ 96 (end=107): lt
[BaselineOp] Analyzing op @ 97 (end=107): ifne
[BaselineOp] Analyzing op @ 102 (end=107): getarg
[BaselineOp] Analyzing op @ 105 (end=107): return
[BaselineOp] Analyzing op @ 106 (end=107): stop
[BaselineScripts] Baseline compiling script crypto-aes.js:39 (0x7fda8d0516a0)
[BaselineOp] Compiling op @ 0: zero
[BaselineOp] Compiling op @ 1: setlocal
[BaselineOp] Compiling op @ 4: pop
[BaselineOp] Compiling op @ 5: goto
[BaselineOp] Compiling op @ 10: loophead
[BaselineOp] [block counter] Emitting a block counter for op @ 10: loophead (lineno: 41 column: 0)
[BaselineOp] Compiling op @ 11: zero
[BaselineOp] [block counter] Emitting a block counter for op @ 11: zero (lineno: 41 column: 9)
[BaselineOp] Compiling op @ 12: setlocal
[BaselineOp] Compiling op @ 15: pop
[BaselineOp] Compiling op @ 16: goto
[BaselineOp] Compiling op @ 21: loophead
[BaselineOp] [block counter] Emitting a block counter for op @ 21: loophead (lineno: 41 column: 29)
[BaselineOp] Compiling op @ 22: getarg
[BaselineOp] [block counter] Emitting a block counter for op @ 22: getarg (lineno: 41 column: 29)
[BaselineOp] Compiling op @ 25: getlocal
[BaselineOp] Compiling op @ 28: getelem
[BaselineOp] Compiling op @ 29: getlocal
[BaselineOp] Compiling op @ 32: getgname
[BaselineOp] Compiling op @ 37: getarg
[BaselineOp] Compiling op @ 40: getlocal
[BaselineOp] Compiling op @ 43: getelem
[BaselineOp] Compiling op @ 44: getlocal
[BaselineOp] Compiling op @ 47: getelem
[BaselineOp] Compiling op @ 48: getelem
[BaselineOp] Compiling op @ 49: setelem
[BaselineOp] Compiling op @ 50: pop
[BaselineOp] Compiling op @ 51: getlocal
[BaselineOp] Compiling op @ 54: pos
[BaselineOp] Compiling op @ 55: dup
[BaselineOp] Compiling op @ 56: one
[BaselineOp] Compiling op @ 57: add
[BaselineOp] Compiling op @ 58: setlocal
[BaselineOp] Compiling op @ 61: pop
[BaselineOp] Compiling op @ 62: pop
[BaselineOp] Compiling op @ 63: loopentry
[BaselineOp] [block counter] Emitting a block counter for op @ 63: loopentry (lineno: 41 column: 18)
[BaselineOp] Compiling op @ 65: getlocal
[BaselineOp] Compiling op @ 68: getarg
[BaselineOp] Compiling op @ 71: lt
[BaselineOp] Compiling op @ 72: ifne
[BaselineOp] Compiling op @ 77: getlocal
[BaselineOp] [block counter] Emitting a block counter for op @ 77: getlocal (lineno: 40 column: 21)
[BaselineOp] Compiling op @ 80: pos
[BaselineOp] Compiling op @ 81: dup
[BaselineOp] Compiling op @ 82: one
[BaselineOp] Compiling op @ 83: add
[BaselineOp] Compiling op @ 84: setlocal
[BaselineOp] Compiling op @ 87: pop
[BaselineOp] Compiling op @ 88: pop
[BaselineOp] Compiling op @ 89: loopentry
[BaselineOp] [block counter] Emitting a block counter for op @ 89: loopentry (lineno: 40 column: 16)
[BaselineOp] Compiling op @ 91: getlocal
[BaselineOp] Compiling op @ 94: int8
[BaselineOp] Compiling op @ 96: lt
[BaselineOp] Compiling op @ 97: ifne
[BaselineOp] Compiling op @ 102: getarg
[BaselineOp] [block counter] Emitting a block counter for op @ 102: getarg (lineno: 43 column: 2)
[BaselineOp] Compiling op @ 105: return
[BaselineOp] Compiling op @ 106: stop
[BaselineScripts] Created BaselineScript 0x1d77cd0 (raw 0x7fda8ed313d0) for crypto-aes.js:39
[BaselineScripts] [block counter] 8 block counters were emitted for script crypto-aes.js:39 (0x1d77cd0) (lineno: 43 column: 11)
[BaselineOp] Analyzing op @ 0 (end=176): getgname
[BaselineOp] Analyzing op @ 5 (end=176): undefined
[BaselineOp] Analyzing op @ 6 (end=176): notearg
[BaselineOp] Analyzing op @ 7 (end=176): int8
[BaselineOp] Analyzing op @ 9 (end=176): notearg
[BaselineOp] Analyzing op @ 10 (end=176): new
[BaselineOp] Analyzing op @ 13 (end=176): setlocal
[BaselineOp] Analyzing op @ 16 (end=176): pop
[BaselineOp] Analyzing op @ 17 (end=176): one
[BaselineOp] Analyzing op @ 18 (end=176): setlocal
[BaselineOp] Analyzing op @ 21 (end=176): pop
[BaselineOp] Analyzing op @ 22 (end=176): goto
[BaselineOp] Analyzing op @ 27 (end=176): loophead
[BaselineOp] Analyzing op @ 28 (end=176): zero
[BaselineOp] Analyzing op @ 29 (end=176): setlocal
[BaselineOp] Analyzing op @ 32 (end=176): pop
[BaselineOp] Analyzing op @ 33 (end=176): goto
[BaselineOp] Analyzing op @ 38 (end=176): loophead
[BaselineOp] Analyzing op @ 39 (end=176): getlocal
[BaselineOp] Analyzing op @ 42 (end=176): getlocal
[BaselineOp] Analyzing op @ 45 (end=176): getarg
[BaselineOp] Analyzing op @ 48 (end=176): getlocal
[BaselineOp] Analyzing op @ 51 (end=176): getelem
[BaselineOp] Analyzing op @ 52 (end=176): getlocal
[BaselineOp] Analyzing op @ 55 (end=176): getlocal
[BaselineOp] Analyzing op @ 58 (end=176): add
[BaselineOp] Analyzing op @ 59 (end=176): getarg
[BaselineOp] Analyzing op @ 62 (end=176): mod
[BaselineOp] Analyzing op @ 63 (end=176): getelem
[BaselineOp] Analyzing op @ 64 (end=176): setelem
[BaselineOp] Analyzing op @ 65 (end=176): pop
[BaselineOp] Analyzing op @ 66 (end=176): getlocal
[BaselineOp] Analyzing op @ 69 (end=176): pos
[BaselineOp] Analyzing op @ 70 (end=176): dup
[BaselineOp] Analyzing op @ 71 (end=176): one
[BaselineOp] Analyzing op @ 72 (end=176): add
[BaselineOp] Analyzing op @ 73 (end=176): setlocal
[BaselineOp] Analyzing op @ 76 (end=176): pop
[BaselineOp] Analyzing op @ 77 (end=176): pop
[BaselineOp] Analyzing op @ 78 (end=176): loopentry
[BaselineOp] Analyzing op @ 80 (end=176): getlocal
[BaselineOp] Analyzing op @ 83 (end=176): int8
[BaselineOp] Analyzing op @ 85 (end=176): lt
[BaselineOp] Analyzing op @ 86 (end=176): ifne
[BaselineOp] Analyzing op @ 91 (end=176): zero
[BaselineOp] Analyzing op @ 92 (end=176): setlocal
[BaselineOp] Analyzing op @ 95 (end=176): pop
[BaselineOp] Analyzing op @ 96 (end=176): goto
[BaselineOp] Analyzing op @ 101 (end=176): loophead
[BaselineOp] Analyzing op @ 102 (end=176): getarg
[BaselineOp] Analyzing op @ 105 (end=176): getlocal
[BaselineOp] Analyzing op @ 108 (end=176): getelem
[BaselineOp] Analyzing op @ 109 (end=176): getlocal
[BaselineOp] Analyzing op @ 112 (end=176): getlocal
[BaselineOp] Analyzing op @ 115 (end=176): getlocal
[BaselineOp] Analyzing op @ 118 (end=176): getelem
[BaselineOp] Analyzing op @ 119 (end=176): setelem
[BaselineOp] Analyzing op @ 120 (end=176): pop
[BaselineOp] Analyzing op @ 121 (end=176): getlocal
[BaselineOp] Analyzing op @ 124 (end=176): pos
[BaselineOp] Analyzing op @ 125 (end=176): dup
[BaselineOp] Analyzing op @ 126 (end=176): one
[BaselineOp] Analyzing op @ 127 (end=176): add
[BaselineOp] Analyzing op @ 128 (end=176): setlocal
[BaselineOp] Analyzing op @ 131 (end=176): pop
[BaselineOp] Analyzing op @ 132 (end=176): pop
[BaselineOp] Analyzing op @ 133 (end=176): loopentry
[BaselineOp] Analyzing op @ 135 (end=176): getlocal
[BaselineOp] Analyzing op @ 138 (end=176): int8
[BaselineOp] Analyzing op @ 140 (end=176): lt
[BaselineOp] Analyzing op @ 141 (end=176): ifne
[BaselineOp] Analyzing op @ 146 (end=176): getlocal
[BaselineOp] Analyzing op @ 149 (end=176): pos
[BaselineOp] Analyzing op @ 150 (end=176): dup
[BaselineOp] Analyzing op @ 151 (end=176): one
[BaselineOp] Analyzing op @ 152 (end=176): add
[BaselineOp] Analyzing op @ 153 (end=176): setlocal
[BaselineOp] Analyzing op @ 156 (end=176): pop
[BaselineOp] Analyzing op @ 157 (end=176): pop
[BaselineOp] Analyzing op @ 158 (end=176): loopentry
[BaselineOp] Analyzing op @ 160 (end=176): getlocal
[BaselineOp] Analyzing op @ 163 (end=176): int8
[BaselineOp] Analyzing op @ 165 (end=176): lt
[BaselineOp] Analyzing op @ 166 (end=176): ifne
[BaselineOp] Analyzing op @ 28 (end=176): zero
[BaselineOp] Analyzing op @ 29 (end=176): setlocal
[BaselineOp] Analyzing op @ 32 (end=176): pop
[BaselineOp] Analyzing op @ 33 (end=176): goto
[BaselineOp] Analyzing op @ 38 (end=176): loophead
[BaselineOp] Analyzing op @ 39 (end=176): getlocal
[BaselineOp] Analyzing op @ 42 (end=176): getlocal
[BaselineOp] Analyzing op @ 45 (end=176): getarg
[BaselineOp] Analyzing op @ 48 (end=176): getlocal
[BaselineOp] Analyzing op @ 51 (end=176): getelem
[BaselineOp] Analyzing op @ 52 (end=176): getlocal
[BaselineOp] Analyzing op @ 55 (end=176): getlocal
[BaselineOp] Analyzing op @ 58 (end=176): add
[BaselineOp] Analyzing op @ 59 (end=176): getarg
[BaselineOp] Analyzing op @ 62 (end=176): mod
[BaselineOp] Analyzing op @ 63 (end=176): getelem
[BaselineOp] Analyzing op @ 64 (end=176): setelem
[BaselineOp] Analyzing op @ 65 (end=176): pop
[BaselineOp] Analyzing op @ 66 (end=176): getlocal
[BaselineOp] Analyzing op @ 69 (end=176): pos
[BaselineOp] Analyzing op @ 70 (end=176): dup
[BaselineOp] Analyzing op @ 71 (end=176): one
[BaselineOp] Analyzing op @ 72 (end=176): add
[BaselineOp] Analyzing op @ 73 (end=176): setlocal
[BaselineOp] Analyzing op @ 76 (end=176): pop
[BaselineOp] Analyzing op @ 77 (end=176): pop
[BaselineOp] Analyzing op @ 78 (end=176): loopentry
[BaselineOp] Analyzing op @ 80 (end=176): getlocal
[BaselineOp] Analyzing op @ 83 (end=176): int8
[BaselineOp] Analyzing op @ 85 (end=176): lt
[BaselineOp] Analyzing op @ 86 (end=176): ifne
[BaselineOp] Analyzing op @ 39 (end=176): getlocal
[BaselineOp] Analyzing op @ 42 (end=176): getlocal
[BaselineOp] Analyzing op @ 45 (end=176): getarg
[BaselineOp] Analyzing op @ 48 (end=176): getlocal
[BaselineOp] Analyzing op @ 51 (end=176): getelem
[BaselineOp] Analyzing op @ 52 (end=176): getlocal
[BaselineOp] Analyzing op @ 55 (end=176): getlocal
[BaselineOp] Analyzing op @ 58 (end=176): add
[BaselineOp] Analyzing op @ 59 (end=176): getarg
[BaselineOp] Analyzing op @ 62 (end=176): mod
[BaselineOp] Analyzing op @ 63 (end=176): getelem
[BaselineOp] Analyzing op @ 64 (end=176): setelem
[BaselineOp] Analyzing op @ 65 (end=176): pop
[BaselineOp] Analyzing op @ 66 (end=176): getlocal
[BaselineOp] Analyzing op @ 69 (end=176): pos
[BaselineOp] Analyzing op @ 70 (end=176): dup
[BaselineOp] Analyzing op @ 71 (end=176): one
[BaselineOp] Analyzing op @ 72 (end=176): add
[BaselineOp] Analyzing op @ 73 (end=176): setlocal
[BaselineOp] Analyzing op @ 76 (end=176): pop
[BaselineOp] Analyzing op @ 77 (end=176): pop
[BaselineOp] Analyzing op @ 78 (end=176): loopentry
[BaselineOp] Analyzing op @ 80 (end=176): getlocal
[BaselineOp] Analyzing op @ 83 (end=176): int8
[BaselineOp] Analyzing op @ 85 (end=176): lt
[BaselineOp] Analyzing op @ 86 (end=176): ifne
[BaselineOp] Analyzing op @ 91 (end=176): zero
[BaselineOp] Analyzing op @ 92 (end=176): setlocal
[BaselineOp] Analyzing op @ 95 (end=176): pop
[BaselineOp] Analyzing op @ 96 (end=176): goto
[BaselineOp] Analyzing op @ 101 (end=176): loophead
[BaselineOp] Analyzing op @ 102 (end=176): getarg
[BaselineOp] Analyzing op @ 105 (end=176): getlocal
[BaselineOp] Analyzing op @ 108 (end=176): getelem
[BaselineOp] Analyzing op @ 109 (end=176): getlocal
[BaselineOp] Analyzing op @ 112 (end=176): getlocal
[BaselineOp] Analyzing op @ 115 (end=176): getlocal
[BaselineOp] Analyzing op @ 118 (end=176): getelem
[BaselineOp] Analyzing op @ 119 (end=176): setelem
[BaselineOp] Analyzing op @ 120 (end=176): pop
[BaselineOp] Analyzing op @ 121 (end=176): getlocal
[BaselineOp] Analyzing op @ 124 (end=176): pos
[BaselineOp] Analyzing op @ 125 (end=176): dup
[BaselineOp] Analyzing op @ 126 (end=176): one
[BaselineOp] Analyzing op @ 127 (end=176): add
[BaselineOp] Analyzing op @ 128 (end=176): setlocal
[BaselineOp] Analyzing op @ 131 (end=176): pop
[BaselineOp] Analyzing op @ 132 (end=176): pop
[BaselineOp] Analyzing op @ 133 (end=176): loopentry
[BaselineOp] Analyzing op @ 135 (end=176): getlocal
[BaselineOp] Analyzing op @ 138 (end=176): int8
[BaselineOp] Analyzing op @ 140 (end=176): lt
[BaselineOp] Analyzing op @ 141 (end=176): ifne
[BaselineOp] Analyzing op @ 102 (end=176): getarg
[BaselineOp] Analyzing op @ 105 (end=176): getlocal
[BaselineOp] Analyzing op @ 108 (end=176): getelem
[BaselineOp] Analyzing op @ 109 (end=176): getlocal
[BaselineOp] Analyzing op @ 112 (end=176): getlocal
[BaselineOp] Analyzing op @ 115 (end=176): getlocal
[BaselineOp] Analyzing op @ 118 (end=176): getelem
[BaselineOp] Analyzing op @ 119 (end=176): setelem
[BaselineOp] Analyzing op @ 120 (end=176): pop
[BaselineOp] Analyzing op @ 121 (end=176): getlocal
[BaselineOp] Analyzing op @ 124 (end=176): pos
[BaselineOp] Analyzing op @ 125 (end=176): dup
[BaselineOp] Analyzing op @ 126 (end=176): one
[BaselineOp] Analyzing op @ 127 (end=176): add
[BaselineOp] Analyzing op @ 128 (end=176): setlocal
[BaselineOp] Analyzing op @ 131 (end=176): pop
[BaselineOp] Analyzing op @ 132 (end=176): pop
[BaselineOp] Analyzing op @ 133 (end=176): loopentry
[BaselineOp] Analyzing op @ 135 (end=176): getlocal
[BaselineOp] Analyzing op @ 138 (end=176): int8
[BaselineOp] Analyzing op @ 140 (end=176): lt
[BaselineOp] Analyzing op @ 141 (end=176): ifne
[BaselineOp] Analyzing op @ 146 (end=176): getlocal
[BaselineOp] Analyzing op @ 149 (end=176): pos
[BaselineOp] Analyzing op @ 150 (end=176): dup
[BaselineOp] Analyzing op @ 151 (end=176): one
[BaselineOp] Analyzing op @ 152 (end=176): add
[BaselineOp] Analyzing op @ 153 (end=176): setlocal
[BaselineOp] Analyzing op @ 156 (end=176): pop
[BaselineOp] Analyzing op @ 157 (end=176): pop
[BaselineOp] Analyzing op @ 158 (end=176): loopentry
[BaselineOp] Analyzing op @ 160 (end=176): getlocal
[BaselineOp] Analyzing op @ 163 (end=176): int8
[BaselineOp] Analyzing op @ 165 (end=176): lt
[BaselineOp] Analyzing op @ 166 (end=176): ifne
[BaselineOp] Analyzing op @ 171 (end=176): getarg
[BaselineOp] Analyzing op @ 174 (end=176): return
[BaselineOp] Analyzing op @ 175 (end=176): stop
[BaselineScripts] Baseline compiling script crypto-aes.js:47 (0x7fda8d051768)
[BaselineOp] Compiling op @ 0: getgname
[BaselineOp] Compiling op @ 5: undefined
[BaselineOp] Compiling op @ 6: notearg
[BaselineOp] Compiling op @ 7: int8
[BaselineOp] Compiling op @ 9: notearg
[BaselineOp] Compiling op @ 10: new
[BaselineOp] Compiling op @ 13: setlocal
[BaselineOp] Compiling op @ 16: pop
[BaselineOp] Compiling op @ 17: one
[BaselineOp] Compiling op @ 18: setlocal
[BaselineOp] Compiling op @ 21: pop
[BaselineOp] Compiling op @ 22: goto
[BaselineOp] Compiling op @ 27: loophead
[BaselineOp] [block counter] Emitting a block counter for op @ 27: loophead (lineno: 50 column: 0)
[BaselineOp] Compiling op @ 28: zero
[BaselineOp] [block counter] Emitting a block counter for op @ 28: zero (lineno: 50 column: 9)
[BaselineOp] Compiling op @ 29: setlocal
[BaselineOp] Compiling op @ 32: pop
[BaselineOp] Compiling op @ 33: goto
[BaselineOp] Compiling op @ 38: loophead
[BaselineOp] [block counter] Emitting a block counter for op @ 38: loophead (lineno: 50 column: 28)
[BaselineOp] Compiling op @ 39: getlocal
[BaselineOp] [block counter] Emitting a block counter for op @ 39: getlocal (lineno: 50 column: 28)
[BaselineOp] Compiling op @ 42: getlocal
[BaselineOp] Compiling op @ 45: getarg
[BaselineOp] Compiling op @ 48: getlocal
[BaselineOp] Compiling op @ 51: getelem
[BaselineOp] Compiling op @ 52: getlocal
[BaselineOp] Compiling op @ 55: getlocal
[BaselineOp] Compiling op @ 58: add
[BaselineOp] Compiling op @ 59: getarg
[BaselineOp] Compiling op @ 62: mod
[BaselineOp] Compiling op @ 63: getelem
[BaselineOp] Compiling op @ 64: setelem
[BaselineOp] Compiling op @ 65: pop
[BaselineOp] Compiling op @ 66: getlocal
[BaselineOp] Compiling op @ 69: pos
[BaselineOp] Compiling op @ 70: dup
[BaselineOp] Compiling op @ 71: one
[BaselineOp] Compiling op @ 72: add
[BaselineOp] Compiling op @ 73: setlocal
[BaselineOp] Compiling op @ 76: pop
[BaselineOp] Compiling op @ 77: pop
[BaselineOp] Compiling op @ 78: loopentry
[BaselineOp] [block counter] Emitting a block counter for op @ 78: loopentry (lineno: 50 column: 18)
[BaselineOp] Compiling op @ 80: getlocal
[BaselineOp] Compiling op @ 83: int8
[BaselineOp] Compiling op @ 85: lt
[BaselineOp] Compiling op @ 86: ifne
[BaselineOp] Compiling op @ 91: zero
[BaselineOp] [block counter] Emitting a block counter for op @ 91: zero (lineno: 51 column: 9)
[BaselineOp] Compiling op @ 92: setlocal
[BaselineOp] Compiling op @ 95: pop
[BaselineOp] Compiling op @ 96: goto
[BaselineOp] Compiling op @ 101: loophead
[BaselineOp] [block counter] Emitting a block counter for op @ 101: loophead (lineno: 51 column: 28)
[BaselineOp] Compiling op @ 102: getarg
[BaselineOp] [block counter] Emitting a block counter for op @ 102: getarg (lineno: 51 column: 28)
[BaselineOp] Compiling op @ 105: getlocal
[BaselineOp] Compiling op @ 108: getelem
[BaselineOp] Compiling op @ 109: getlocal
[BaselineOp] Compiling op @ 112: getlocal
[BaselineOp] Compiling op @ 115: getlocal
[BaselineOp] Compiling op @ 118: getelem
[BaselineOp] Compiling op @ 119: setelem
[BaselineOp] Compiling op @ 120: pop
[BaselineOp] Compiling op @ 121: getlocal
[BaselineOp] Compiling op @ 124: pos
[BaselineOp] Compiling op @ 125: dup
[BaselineOp] Compiling op @ 126: one
[BaselineOp] Compiling op @ 127: add
[BaselineOp] Compiling op @ 128: setlocal
[BaselineOp] Compiling op @ 131: pop
[BaselineOp] Compiling op @ 132: pop
[BaselineOp] Compiling op @ 133: loopentry
[BaselineOp] [block counter] Emitting a block counter for op @ 133: loopentry (lineno: 51 column: 18)
[BaselineOp] Compiling op @ 135: getlocal
[BaselineOp] Compiling op @ 138: int8
[BaselineOp] Compiling op @ 140: lt
[BaselineOp] Compiling op @ 141: ifne
[BaselineOp] Compiling op @ 146: getlocal
[BaselineOp] [block counter] Emitting a block counter for op @ 146: getlocal (lineno: 49 column: 21)
[BaselineOp] Compiling op @ 149: pos
[BaselineOp] Compiling op @ 150: dup
[BaselineOp] Compiling op @ 151: one
[BaselineOp] Compiling op @ 152: add
[BaselineOp] Compiling op @ 153: setlocal
[BaselineOp] Compiling op @ 156: pop
[BaselineOp] Compiling op @ 157: pop
[BaselineOp] Compiling op @ 158: loopentry
[BaselineOp] [block counter] Emitting a block counter for op @ 158: loopentry (lineno: 49 column: 16)
[BaselineOp] Compiling op @ 160: getlocal
[BaselineOp] Compiling op @ 163: int8
[BaselineOp] Compiling op @ 165: lt
[BaselineOp] Compiling op @ 166: ifne
[BaselineOp] Compiling op @ 171: getarg
[BaselineOp] [block counter] Emitting a block counter for op @ 171: getarg (lineno: 53 column: 2)
[BaselineOp] Compiling op @ 174: return
[BaselineOp] Compiling op @ 175: stop
[BaselineScripts] Created BaselineScript 0x1d795f0 (raw 0x7fda8ed31838) for crypto-aes.js:47
[BaselineScripts] [block counter] 12 block counters were emitted for script crypto-aes.js:47 (0x1d795f0) (lineno: 53 column: 11)
[BaselineOp] Analyzing op @ 0 (end=361): zero
[BaselineOp] Analyzing op @ 1 (end=361): setlocal
[BaselineOp] Analyzing op @ 4 (end=361): pop
[BaselineOp] Analyzing op @ 5 (end=361): goto
[BaselineOp] Analyzing op @ 10 (end=361): loophead
[BaselineOp] Analyzing op @ 11 (end=361): getgname
[BaselineOp] Analyzing op @ 16 (end=361): undefined
[BaselineOp] Analyzing op @ 17 (end=361): notearg
[BaselineOp] Analyzing op @ 18 (end=361): int8
[BaselineOp] Analyzing op @ 20 (end=361): notearg
[BaselineOp] Analyzing op @ 21 (end=361): new
[BaselineOp] Analyzing op @ 24 (end=361): setlocal
[BaselineOp] Analyzing op @ 27 (end=361): pop
[BaselineOp] Analyzing op @ 28 (end=361): getgname
[BaselineOp] Analyzing op @ 33 (end=361): undefined
[BaselineOp] Analyzing op @ 34 (end=361): notearg
[BaselineOp] Analyzing op @ 35 (end=361): int8
[BaselineOp] Analyzing op @ 37 (end=361): notearg
[BaselineOp] Analyzing op @ 38 (end=361): new
[BaselineOp] Analyzing op @ 41 (end=361): setlocal
[BaselineOp] Analyzing op @ 44 (end=361): pop
[BaselineOp] Analyzing op @ 45 (end=361): zero
[BaselineOp] Analyzing op @ 46 (end=361): setlocal
[BaselineOp] Analyzing op @ 49 (end=361): pop
[BaselineOp] Analyzing op @ 50 (end=361): goto
[BaselineOp] Analyzing op @ 55 (end=361): loophead
[BaselineOp] Analyzing op @ 56 (end=361): getlocal
[BaselineOp] Analyzing op @ 59 (end=361): getlocal
[BaselineOp] Analyzing op @ 62 (end=361): getarg
[BaselineOp] Analyzing op @ 65 (end=361): getlocal
[BaselineOp] Analyzing op @ 68 (end=361): getelem
[BaselineOp] Analyzing op @ 69 (end=361): getlocal
[BaselineOp] Analyzing op @ 72 (end=361): getelem
[BaselineOp] Analyzing op @ 73 (end=361): setelem
[BaselineOp] Analyzing op @ 74 (end=361): pop
[BaselineOp] Analyzing op @ 75 (end=361): getlocal
[BaselineOp] Analyzing op @ 78 (end=361): getlocal
[BaselineOp] Analyzing op @ 81 (end=361): getarg
[BaselineOp] Analyzing op @ 84 (end=361): getlocal
[BaselineOp] Analyzing op @ 87 (end=361): getelem
[BaselineOp] Analyzing op @ 88 (end=361): getlocal
[BaselineOp] Analyzing op @ 91 (end=361): getelem
[BaselineOp] Analyzing op @ 92 (end=361): uint16
[BaselineOp] Analyzing op @ 95 (end=361): bitand
[BaselineOp] Analyzing op @ 96 (end=361): ifeq
[BaselineOp] Analyzing op @ 101 (end=361): getarg
[BaselineOp] Analyzing op @ 104 (end=361): getlocal
[BaselineOp] Analyzing op @ 107 (end=361): getelem
[BaselineOp] Analyzing op @ 108 (end=361): getlocal
[BaselineOp] Analyzing op @ 111 (end=361): getelem
[BaselineOp] Analyzing op @ 112 (end=361): one
[BaselineOp] Analyzing op @ 113 (end=361): lsh
[BaselineOp] Analyzing op @ 114 (end=361): uint16
[BaselineOp] Analyzing op @ 117 (end=361): bitxor
[BaselineOp] Analyzing op @ 118 (end=361): goto
[BaselineOp] Analyzing op @ 123 (end=361): getarg
[BaselineOp] Analyzing op @ 126 (end=361): getlocal
[BaselineOp] Analyzing op @ 129 (end=361): getelem
[BaselineOp] Analyzing op @ 130 (end=361): getlocal
[BaselineOp] Analyzing op @ 133 (end=361): getelem
[BaselineOp] Analyzing op @ 134 (end=361): one
[BaselineOp] Analyzing op @ 135 (end=361): lsh
[BaselineOp] Analyzing op @ 136 (end=361): setelem
[BaselineOp] Analyzing op @ 137 (end=361): pop
[BaselineOp] Analyzing op @ 138 (end=361): getlocal
[BaselineOp] Analyzing op @ 141 (end=361): pos
[BaselineOp] Analyzing op @ 142 (end=361): dup
[BaselineOp] Analyzing op @ 143 (end=361): one
[BaselineOp] Analyzing op @ 144 (end=361): add
[BaselineOp] Analyzing op @ 145 (end=361): setlocal
[BaselineOp] Analyzing op @ 148 (end=361): pop
[BaselineOp] Analyzing op @ 149 (end=361): pop
[BaselineOp] Analyzing op @ 150 (end=361): loopentry
[BaselineOp] Analyzing op @ 152 (end=361): getlocal
[BaselineOp] Analyzing op @ 155 (end=361): int8
[BaselineOp] Analyzing op @ 157 (end=361): lt
[BaselineOp] Analyzing op @ 158 (end=361): ifne
[BaselineOp] Analyzing op @ 163 (end=361): getarg
[BaselineOp] Analyzing op @ 166 (end=361): zero
[BaselineOp] Analyzing op @ 167 (end=361): getelem
[BaselineOp] Analyzing op @ 168 (end=361): getlocal
[BaselineOp] Analyzing op @ 171 (end=361): getlocal
[BaselineOp] Analyzing op @ 174 (end=361): zero
[BaselineOp] Analyzing op @ 175 (end=361): getelem
[BaselineOp] Analyzing op @ 176 (end=361): getlocal
[BaselineOp] Analyzing op @ 179 (end=361): one
[BaselineOp] Analyzing op @ 180 (end=361): getelem
[BaselineOp] Analyzing op @ 181 (end=361): bitxor
[BaselineOp] Analyzing op @ 182 (end=361): getlocal
[BaselineOp] Analyzing op @ 185 (end=361): one
[BaselineOp] Analyzing op @ 186 (end=361): getelem
[BaselineOp] Analyzing op @ 187 (end=361): bitxor
[BaselineOp] Analyzing op @ 188 (end=361): getlocal
[BaselineOp] Analyzing op @ 191 (end=361): int8
[BaselineOp] Analyzing op @ 193 (end=361): getelem
[BaselineOp] Analyzing op @ 194 (end=361): bitxor
[BaselineOp] Analyzing op @ 195 (end=361): getlocal
[BaselineOp] Analyzing op @ 198 (end=361): int8
[BaselineOp] Analyzing op @ 200 (end=361): getelem
[BaselineOp] Analyzing op @ 201 (end=361): bitxor
[BaselineOp] Analyzing op @ 202 (end=361): setelem
[BaselineOp] Analyzing op @ 203 (end=361): pop
[BaselineOp] Analyzing op @ 204 (end=361): getarg
[BaselineOp] Analyzing op @ 207 (end=361): one
[BaselineOp] Analyzing op @ 208 (end=361): getelem
[BaselineOp] Analyzing op @ 209 (end=361): getlocal
[BaselineOp] Analyzing op @ 212 (end=361): getlocal
[BaselineOp] Analyzing op @ 215 (end=361): zero
[BaselineOp] Analyzing op @ 216 (end=361): getelem
[BaselineOp] Analyzing op @ 217 (end=361): getlocal
[BaselineOp] Analyzing op @ 220 (end=361): one
[BaselineOp] Analyzing op @ 221 (end=361): getelem
[BaselineOp] Analyzing op @ 222 (end=361): bitxor
[BaselineOp] Analyzing op @ 223 (end=361): getlocal
[BaselineOp] Analyzing op @ 226 (end=361): int8
[BaselineOp] Analyzing op @ 228 (end=361): getelem
[BaselineOp] Analyzing op @ 229 (end=361): bitxor
[BaselineOp] Analyzing op @ 230 (end=361): getlocal
[BaselineOp] Analyzing op @ 233 (end=361): int8
[BaselineOp] Analyzing op @ 235 (end=361): getelem
[BaselineOp] Analyzing op @ 236 (end=361): bitxor
[BaselineOp] Analyzing op @ 237 (end=361): getlocal
[BaselineOp] Analyzing op @ 240 (end=361): int8
[BaselineOp] Analyzing op @ 242 (end=361): getelem
[BaselineOp] Analyzing op @ 243 (end=361): bitxor
[BaselineOp] Analyzing op @ 244 (end=361): setelem
[BaselineOp] Analyzing op @ 245 (end=361): pop
[BaselineOp] Analyzing op @ 246 (end=361): getarg
[BaselineOp] Analyzing op @ 249 (end=361): int8
[BaselineOp] Analyzing op @ 251 (end=361): getelem
[BaselineOp] Analyzing op @ 252 (end=361): getlocal
[BaselineOp] Analyzing op @ 255 (end=361): getlocal
[BaselineOp] Analyzing op @ 258 (end=361): zero
[BaselineOp] Analyzing op @ 259 (end=361): getelem
[BaselineOp] Analyzing op @ 260 (end=361): getlocal
[BaselineOp] Analyzing op @ 263 (end=361): one
[BaselineOp] Analyzing op @ 264 (end=361): getelem
[BaselineOp] Analyzing op @ 265 (end=361): bitxor
[BaselineOp] Analyzing op @ 266 (end=361): getlocal
[BaselineOp] Analyzing op @ 269 (end=361): int8
[BaselineOp] Analyzing op @ 271 (end=361): getelem
[BaselineOp] Analyzing op @ 272 (end=361): bitxor
[BaselineOp] Analyzing op @ 273 (end=361): getlocal
[BaselineOp] Analyzing op @ 276 (end=361): int8
[BaselineOp] Analyzing op @ 278 (end=361): getelem
[BaselineOp] Analyzing op @ 279 (end=361): bitxor
[BaselineOp] Analyzing op @ 280 (end=361): getlocal
[BaselineOp] Analyzing op @ 283 (end=361): int8
[BaselineOp] Analyzing op @ 285 (end=361): getelem
[BaselineOp] Analyzing op @ 286 (end=361): bitxor
[BaselineOp] Analyzing op @ 287 (end=361): setelem
[BaselineOp] Analyzing op @ 288 (end=361): pop
[BaselineOp] Analyzing op @ 289 (end=361): getarg
[BaselineOp] Analyzing op @ 292 (end=361): int8
[BaselineOp] Analyzing op @ 294 (end=361): getelem
[BaselineOp] Analyzing op @ 295 (end=361): getlocal
[BaselineOp] Analyzing op @ 298 (end=361): getlocal
[BaselineOp] Analyzing op @ 301 (end=361): zero
[BaselineOp] Analyzing op @ 302 (end=361): getelem
[BaselineOp] Analyzing op @ 303 (end=361): getlocal
[BaselineOp] Analyzing op @ 306 (end=361): zero
[BaselineOp] Analyzing op @ 307 (end=361): getelem
[BaselineOp] Analyzing op @ 308 (end=361): bitxor
[BaselineOp] Analyzing op @ 309 (end=361): getlocal
[BaselineOp] Analyzing op @ 312 (end=361): one
[BaselineOp] Analyzing op @ 313 (end=361): getelem
[BaselineOp] Analyzing op @ 314 (end=361): bitxor
[BaselineOp] Analyzing op @ 315 (end=361): getlocal
[BaselineOp] Analyzing op @ 318 (end=361): int8
[BaselineOp] Analyzing op @ 320 (end=361): getelem
[BaselineOp] Analyzing op @ 321 (end=361): bitxor
[BaselineOp] Analyzing op @ 322 (end=361): getlocal
[BaselineOp] Analyzing op @ 325 (end=361): int8
[BaselineOp] Analyzing op @ 327 (end=361): getelem
[BaselineOp] Analyzing op @ 328 (end=361): bitxor
[BaselineOp] Analyzing op @ 329 (end=361): setelem
[BaselineOp] Analyzing op @ 330 (end=361): pop
[BaselineOp] Analyzing op @ 331 (end=361): getlocal
[BaselineOp] Analyzing op @ 334 (end=361): pos
[BaselineOp] Analyzing op @ 335 (end=361): dup
[BaselineOp] Analyzing op @ 336 (end=361): one
[BaselineOp] Analyzing op @ 337 (end=361): add
[BaselineOp] Analyzing op @ 338 (end=361): setlocal
[BaselineOp] Analyzing op @ 341 (end=361): pop
[BaselineOp] Analyzing op @ 342 (end=361): pop
[BaselineOp] Analyzing op @ 343 (end=361): loopentry
[BaselineOp] Analyzing op @ 345 (end=361): getlocal
[BaselineOp] Analyzing op @ 348 (end=361): int8
[BaselineOp] Analyzing op @ 350 (end=361): lt
[BaselineOp] Analyzing op @ 351 (end=361): ifne
[BaselineOp] Analyzing op @ 11 (end=361): getgname
[BaselineOp] Analyzing op @ 16 (end=361): undefined
[BaselineOp] Analyzing op @ 17 (end=361): notearg
[BaselineOp] Analyzing op @ 18 (end=361): int8
[BaselineOp] Analyzing op @ 20 (end=361): notearg
[BaselineOp] Analyzing op @ 21 (end=361): new
[BaselineOp] Analyzing op @ 24 (end=361): setlocal
[BaselineOp] Analyzing op @ 27 (end=361): pop
[BaselineOp] Analyzing op @ 28 (end=361): getgname
[BaselineOp] Analyzing op @ 33 (end=361): undefined
[BaselineOp] Analyzing op @ 34 (end=361): notearg
[BaselineOp] Analyzing op @ 35 (end=361): int8
[BaselineOp] Analyzing op @ 37 (end=361): notearg
[BaselineOp] Analyzing op @ 38 (end=361): new
[BaselineOp] Analyzing op @ 41 (end=361): setlocal
[BaselineOp] Analyzing op @ 44 (end=361): pop
[BaselineOp] Analyzing op @ 45 (end=361): zero
[BaselineOp] Analyzing op @ 46 (end=361): setlocal
[BaselineOp] Analyzing op @ 49 (end=361): pop
[BaselineOp] Analyzing op @ 50 (end=361): goto
[BaselineOp] Analyzing op @ 55 (end=361): loophead
[BaselineOp] Analyzing op @ 56 (end=361): getlocal
[BaselineOp] Analyzing op @ 59 (end=361): getlocal
[BaselineOp] Analyzing op @ 62 (end=361): getarg
[BaselineOp] Analyzing op @ 65 (end=361): getlocal
[BaselineOp] Analyzing op @ 68 (end=361): getelem
[BaselineOp] Analyzing op @ 69 (end=361): getlocal
[BaselineOp] Analyzing op @ 72 (end=361): getelem
[BaselineOp] Analyzing op @ 73 (end=361): setelem
[BaselineOp] Analyzing op @ 74 (end=361): pop
[BaselineOp] Analyzing op @ 75 (end=361): getlocal
[BaselineOp] Analyzing op @ 78 (end=361): getlocal
[BaselineOp] Analyzing op @ 81 (end=361): getarg
[BaselineOp] Analyzing op @ 84 (end=361): getlocal
[BaselineOp] Analyzing op @ 87 (end=361): getelem
[BaselineOp] Analyzing op @ 88 (end=361): getlocal
[BaselineOp] Analyzing op @ 91 (end=361): getelem
[BaselineOp] Analyzing op @ 92 (end=361): uint16
[BaselineOp] Analyzing op @ 95 (end=361): bitand
[BaselineOp] Analyzing op @ 96 (end=361): ifeq
[BaselineOp] Analyzing op @ 101 (end=361): getarg
[BaselineOp] Analyzing op @ 104 (end=361): getlocal
[BaselineOp] Analyzing op @ 107 (end=361): getelem
[BaselineOp] Analyzing op @ 108 (end=361): getlocal
[BaselineOp] Analyzing op @ 111 (end=361): getelem
[BaselineOp] Analyzing op @ 112 (end=361): one
[BaselineOp] Analyzing op @ 113 (end=361): lsh
[BaselineOp] Analyzing op @ 114 (end=361): uint16
[BaselineOp] Analyzing op @ 117 (end=361): bitxor
[BaselineOp] Analyzing op @ 118 (end=361): goto
[BaselineOp] Analyzing op @ 123 (end=361): getarg
[BaselineOp] Analyzing op @ 126 (end=361): getlocal
[BaselineOp] Analyzing op @ 129 (end=361): getelem
[BaselineOp] Analyzing op @ 130 (end=361): getlocal
[BaselineOp] Analyzing op @ 133 (end=361): getelem
[BaselineOp] Analyzing op @ 134 (end=361): one
[BaselineOp] Analyzing op @ 135 (end=361): lsh
[BaselineOp] Analyzing op @ 136 (end=361): setelem
[BaselineOp] Analyzing op @ 137 (end=361): pop
[BaselineOp] Analyzing op @ 138 (end=361): getlocal
[BaselineOp] Analyzing op @ 141 (end=361): pos
[BaselineOp] Analyzing op @ 142 (end=361): dup
[BaselineOp] Analyzing op @ 143 (end=361): one
[BaselineOp] Analyzing op @ 144 (end=361): add
[BaselineOp] Analyzing op @ 145 (end=361): setlocal
[BaselineOp] Analyzing op @ 148 (end=361): pop
[BaselineOp] Analyzing op @ 149 (end=361): pop
[BaselineOp] Analyzing op @ 150 (end=361): loopentry
[BaselineOp] Analyzing op @ 152 (end=361): getlocal
[BaselineOp] Analyzing op @ 155 (end=361): int8
[BaselineOp] Analyzing op @ 157 (end=361): lt
[BaselineOp] Analyzing op @ 158 (end=361): ifne
[BaselineOp] Analyzing op @ 56 (end=361): getlocal
[BaselineOp] Analyzing op @ 59 (end=361): getlocal
[BaselineOp] Analyzing op @ 62 (end=361): getarg
[BaselineOp] Analyzing op @ 65 (end=361): getlocal
[BaselineOp] Analyzing op @ 68 (end=361): getelem
[BaselineOp] Analyzing op @ 69 (end=361): getlocal
[BaselineOp] Analyzing op @ 72 (end=361): getelem
[BaselineOp] Analyzing op @ 73 (end=361): setelem
[BaselineOp] Analyzing op @ 74 (end=361): pop
[BaselineOp] Analyzing op @ 75 (end=361): getlocal
[BaselineOp] Analyzing op @ 78 (end=361): getlocal
[BaselineOp] Analyzing op @ 81 (end=361): getarg
[BaselineOp] Analyzing op @ 84 (end=361): getlocal
[BaselineOp] Analyzing op @ 87 (end=361): getelem
[BaselineOp] Analyzing op @ 88 (end=361): getlocal
[BaselineOp] Analyzing op @ 91 (end=361): getelem
[BaselineOp] Analyzing op @ 92 (end=361): uint16
[BaselineOp] Analyzing op @ 95 (end=361): bitand
[BaselineOp] Analyzing op @ 96 (end=361): ifeq
[BaselineOp] Analyzing op @ 101 (end=361): getarg
[BaselineOp] Analyzing op @ 104 (end=361): getlocal
[BaselineOp] Analyzing op @ 107 (end=361): getelem
[BaselineOp] Analyzing op @ 108 (end=361): getlocal
[BaselineOp] Analyzing op @ 111 (end=361): getelem
[BaselineOp] Analyzing op @ 112 (end=361): one
[BaselineOp] Analyzing op @ 113 (end=361): lsh
[BaselineOp] Analyzing op @ 114 (end=361): uint16
[BaselineOp] Analyzing op @ 117 (end=361): bitxor
[BaselineOp] Analyzing op @ 118 (end=361): goto
[BaselineOp] Analyzing op @ 123 (end=361): getarg
[BaselineOp] Analyzing op @ 126 (end=361): getlocal
[BaselineOp] Analyzing op @ 129 (end=361): getelem
[BaselineOp] Analyzing op @ 130 (end=361): getlocal
[BaselineOp] Analyzing op @ 133 (end=361): getelem
[BaselineOp] Analyzing op @ 134 (end=361): one
[BaselineOp] Analyzing op @ 135 (end=361): lsh
[BaselineOp] Analyzing op @ 136 (end=361): setelem
[BaselineOp] Analyzing op @ 137 (end=361): pop
[BaselineOp] Analyzing op @ 138 (end=361): getlocal
[BaselineOp] Analyzing op @ 141 (end=361): pos
[BaselineOp] Analyzing op @ 142 (end=361): dup
[BaselineOp] Analyzing op @ 143 (end=361): one
[BaselineOp] Analyzing op @ 144 (end=361): add
[BaselineOp] Analyzing op @ 145 (end=361): setlocal
[BaselineOp] Analyzing op @ 148 (end=361): pop
[BaselineOp] Analyzing op @ 149 (end=361): pop
[BaselineOp] Analyzing op @ 150 (end=361): loopentry
[BaselineOp] Analyzing op @ 152 (end=361): getlocal
[BaselineOp] Analyzing op @ 155 (end=361): int8
[BaselineOp] Analyzing op @ 157 (end=361): lt
[BaselineOp] Analyzing op @ 158 (end=361): ifne
[BaselineOp] Analyzing op @ 163 (end=361): getarg
[BaselineOp] Analyzing op @ 166 (end=361): zero
[BaselineOp] Analyzing op @ 167 (end=361): getelem
[BaselineOp] Analyzing op @ 168 (end=361): getlocal
[BaselineOp] Analyzing op @ 171 (end=361): getlocal
[BaselineOp] Analyzing op @ 174 (end=361): zero
[BaselineOp] Analyzing op @ 175 (end=361): getelem
[BaselineOp] Analyzing op @ 176 (end=361): getlocal
[BaselineOp] Analyzing op @ 179 (end=361): one
[BaselineOp] Analyzing op @ 180 (end=361): getelem
[BaselineOp] Analyzing op @ 181 (end=361): bitxor
[BaselineOp] Analyzing op @ 182 (end=361): getlocal
[BaselineOp] Analyzing op @ 185 (end=361): one
[BaselineOp] Analyzing op @ 186 (end=361): getelem
[BaselineOp] Analyzing op @ 187 (end=361): bitxor
[BaselineOp] Analyzing op @ 188 (end=361): getlocal
[BaselineOp] Analyzing op @ 191 (end=361): int8
[BaselineOp] Analyzing op @ 193 (end=361): getelem
[BaselineOp] Analyzing op @ 194 (end=361): bitxor
[BaselineOp] Analyzing op @ 195 (end=361): getlocal
[BaselineOp] Analyzing op @ 198 (end=361): int8
[BaselineOp] Analyzing op @ 200 (end=361): getelem
[BaselineOp] Analyzing op @ 201 (end=361): bitxor
[BaselineOp] Analyzing op @ 202 (end=361): setelem
[BaselineOp] Analyzing op @ 203 (end=361): pop
[BaselineOp] Analyzing op @ 204 (end=361): getarg
[BaselineOp] Analyzing op @ 207 (end=361): one
[BaselineOp] Analyzing op @ 208 (end=361): getelem
[BaselineOp] Analyzing op @ 209 (end=361): getlocal
[BaselineOp] Analyzing op @ 212 (end=361): getlocal
[BaselineOp] Analyzing op @ 215 (end=361): zero
[BaselineOp] Analyzing op @ 216 (end=361): getelem
[BaselineOp] Analyzing op @ 217 (end=361): getlocal
[BaselineOp] Analyzing op @ 220 (end=361): one
[BaselineOp] Analyzing op @ 221 (end=361): getelem
[BaselineOp] Analyzing op @ 222 (end=361): bitxor
[BaselineOp] Analyzing op @ 223 (end=361): getlocal
[BaselineOp] Analyzing op @ 226 (end=361): int8
[BaselineOp] Analyzing op @ 228 (end=361): getelem
[BaselineOp] Analyzing op @ 229 (end=361): bitxor
[BaselineOp] Analyzing op @ 230 (end=361): getlocal
[BaselineOp] Analyzing op @ 233 (end=361): int8
[BaselineOp] Analyzing op @ 235 (end=361): getelem
[BaselineOp] Analyzing op @ 236 (end=361): bitxor
[BaselineOp] Analyzing op @ 237 (end=361): getlocal
[BaselineOp] Analyzing op @ 240 (end=361): int8
[BaselineOp] Analyzing op @ 242 (end=361): getelem
[BaselineOp] Analyzing op @ 243 (end=361): bitxor
[BaselineOp] Analyzing op @ 244 (end=361): setelem
[BaselineOp] Analyzing op @ 245 (end=361): pop
[BaselineOp] Analyzing op @ 246 (end=361): getarg
[BaselineOp] Analyzing op @ 249 (end=361): int8
[BaselineOp] Analyzing op @ 251 (end=361): getelem
[BaselineOp] Analyzing op @ 252 (end=361): getlocal
[BaselineOp] Analyzing op @ 255 (end=361): getlocal
[BaselineOp] Analyzing op @ 258 (end=361): zero
[BaselineOp] Analyzing op @ 259 (end=361): getelem
[BaselineOp] Analyzing op @ 260 (end=361): getlocal
[BaselineOp] Analyzing op @ 263 (end=361): one
[BaselineOp] Analyzing op @ 264 (end=361): getelem
[BaselineOp] Analyzing op @ 265 (end=361): bitxor
[BaselineOp] Analyzing op @ 266 (end=361): getlocal
[BaselineOp] Analyzing op @ 269 (end=361): int8
[BaselineOp] Analyzing op @ 271 (end=361): getelem
[BaselineOp] Analyzing op @ 272 (end=361): bitxor
[BaselineOp] Analyzing op @ 273 (end=361): getlocal
[BaselineOp] Analyzing op @ 276 (end=361): int8
[BaselineOp] Analyzing op @ 278 (end=361): getelem
[BaselineOp] Analyzing op @ 279 (end=361): bitxor
[BaselineOp] Analyzing op @ 280 (end=361): getlocal
[BaselineOp] Analyzing op @ 283 (end=361): int8
[BaselineOp] Analyzing op @ 285 (end=361): getelem
[BaselineOp] Analyzing op @ 286 (end=361): bitxor
[BaselineOp] Analyzing op @ 287 (end=361): setelem
[BaselineOp] Analyzing op @ 288 (end=361): pop
[BaselineOp] Analyzing op @ 289 (end=361): getarg
[BaselineOp] Analyzing op @ 292 (end=361): int8
[BaselineOp] Analyzing op @ 294 (end=361): getelem
[BaselineOp] Analyzing op @ 295 (end=361): getlocal
[BaselineOp] Analyzing op @ 298 (end=361): getlocal
[BaselineOp] Analyzing op @ 301 (end=361): zero
[BaselineOp] Analyzing op @ 302 (end=361): getelem
[BaselineOp] Analyzing op @ 303 (end=361): getlocal
[BaselineOp] Analyzing op @ 306 (end=361): zero
[BaselineOp] Analyzing op @ 307 (end=361): getelem
[BaselineOp] Analyzing op @ 308 (end=361): bitxor
[BaselineOp] Analyzing op @ 309 (end=361): getlocal
[BaselineOp] Analyzing op @ 312 (end=361): one
[BaselineOp] Analyzing op @ 313 (end=361): getelem
[BaselineOp] Analyzing op @ 314 (end=361): bitxor
[BaselineOp] Analyzing op @ 315 (end=361): getlocal
[BaselineOp] Analyzing op @ 318 (end=361): int8
[BaselineOp] Analyzing op @ 320 (end=361): getelem
[BaselineOp] Analyzing op @ 321 (end=361): bitxor
[BaselineOp] Analyzing op @ 322 (end=361): getlocal
[BaselineOp] Analyzing op @ 325 (end=361): int8
[BaselineOp] Analyzing op @ 327 (end=361): getelem
[BaselineOp] Analyzing op @ 328 (end=361): bitxor
[BaselineOp] Analyzing op @ 329 (end=361): setelem
[BaselineOp] Analyzing op @ 330 (end=361): pop
[BaselineOp] Analyzing op @ 331 (end=361): getlocal
[BaselineOp] Analyzing op @ 334 (end=361): pos
[BaselineOp] Analyzing op @ 335 (end=361): dup
[BaselineOp] Analyzing op @ 336 (end=361): one
[BaselineOp] Analyzing op @ 337 (end=361): add
[BaselineOp] Analyzing op @ 338 (end=361): setlocal
[BaselineOp] Analyzing op @ 341 (end=361): pop
[BaselineOp] Analyzing op @ 342 (end=361): pop
[BaselineOp] Analyzing op @ 343 (end=361): loopentry
[BaselineOp] Analyzing op @ 345 (end=361): getlocal
[BaselineOp] Analyzing op @ 348 (end=361): int8
[BaselineOp] Analyzing op @ 350 (end=361): lt
[BaselineOp] Analyzing op @ 351 (end=361): ifne
[BaselineOp] Analyzing op @ 356 (end=361): getarg
[BaselineOp] Analyzing op @ 359 (end=361): return
[BaselineOp] Analyzing op @ 360 (end=361): stop
[BaselineScripts] Baseline compiling script crypto-aes.js:57 (0x7fda8d051830)
[BaselineOp] Compiling op @ 0: zero
[BaselineOp] Compiling op @ 1: setlocal
[BaselineOp] Compiling op @ 4: pop
[BaselineOp] Compiling op @ 5: goto
[BaselineOp] Compiling op @ 10: loophead
[BaselineOp] [block counter] Emitting a block counter for op @ 10: loophead (lineno: 59 column: 0)
[BaselineOp] Compiling op @ 11: getgname
[BaselineOp] [block counter] Emitting a block counter for op @ 11: getgname (lineno: 59 column: 0)
[BaselineOp] Compiling op @ 16: undefined
[BaselineOp] Compiling op @ 17: notearg
[BaselineOp] Compiling op @ 18: int8
[BaselineOp] Compiling op @ 20: notearg
[BaselineOp] Compiling op @ 21: new
[BaselineOp] Compiling op @ 24: setlocal
[BaselineOp] Compiling op @ 27: pop
[BaselineOp] Compiling op @ 28: getgname
[BaselineOp] Compiling op @ 33: undefined
[BaselineOp] Compiling op @ 34: notearg
[BaselineOp] Compiling op @ 35: int8
[BaselineOp] Compiling op @ 37: notearg
[BaselineOp] Compiling op @ 38: new
[BaselineOp] Compiling op @ 41: setlocal
[BaselineOp] Compiling op @ 44: pop
[BaselineOp] Compiling op @ 45: zero
[BaselineOp] Compiling op @ 46: setlocal
[BaselineOp] Compiling op @ 49: pop
[BaselineOp] Compiling op @ 50: goto
[BaselineOp] Compiling op @ 55: loophead
[BaselineOp] [block counter] Emitting a block counter for op @ 55: loophead (lineno: 62 column: 0)
[BaselineOp] Compiling op @ 56: getlocal
[BaselineOp] [block counter] Emitting a block counter for op @ 56: getlocal (lineno: 62 column: 6)
[BaselineOp] Compiling op @ 59: getlocal
[BaselineOp] Compiling op @ 62: getarg
[BaselineOp] Compiling op @ 65: getlocal
[BaselineOp] Compiling op @ 68: getelem
[BaselineOp] Compiling op @ 69: getlocal
[BaselineOp] Compiling op @ 72: getelem
[BaselineOp] Compiling op @ 73: setelem
[BaselineOp] Compiling op @ 74: pop
[BaselineOp] Compiling op @ 75: getlocal
[BaselineOp] Compiling op @ 78: getlocal
[BaselineOp] Compiling op @ 81: getarg
[BaselineOp] Compiling op @ 84: getlocal
[BaselineOp] Compiling op @ 87: getelem
[BaselineOp] Compiling op @ 88: getlocal
[BaselineOp] Compiling op @ 91: getelem
[BaselineOp] Compiling op @ 92: uint16
[BaselineOp] Compiling op @ 95: bitand
[BaselineOp] Compiling op @ 96: ifeq
[BaselineOp] Compiling op @ 101: getarg
[BaselineOp] [block counter] Emitting a block counter for op @ 101: getarg (lineno: 63 column: 6)
[BaselineOp] Compiling op @ 104: getlocal
[BaselineOp] Compiling op @ 107: getelem
[BaselineOp] Compiling op @ 108: getlocal
[BaselineOp] Compiling op @ 111: getelem
[BaselineOp] Compiling op @ 112: one
[BaselineOp] Compiling op @ 113: lsh
[BaselineOp] Compiling op @ 114: uint16
[BaselineOp] Compiling op @ 117: bitxor
[BaselineOp] Compiling op @ 118: goto
[BaselineOp] Compiling op @ 123: getarg
[BaselineOp] [block counter] Emitting a block counter for op @ 123: getarg (lineno: 63 column: 6)
[BaselineOp] Compiling op @ 126: getlocal
[BaselineOp] Compiling op @ 129: getelem
[BaselineOp] Compiling op @ 130: getlocal
[BaselineOp] Compiling op @ 133: getelem
[BaselineOp] Compiling op @ 134: one
[BaselineOp] Compiling op @ 135: lsh
[BaselineOp] Compiling op @ 136: setelem
[BaselineOp] [block counter] Emitting a block counter for op @ 136: setelem (lineno: 63 column: 6)
[BaselineOp] Compiling op @ 137: pop
[BaselineOp] Compiling op @ 138: getlocal
[BaselineOp] Compiling op @ 141: pos
[BaselineOp] Compiling op @ 142: dup
[BaselineOp] Compiling op @ 143: one
[BaselineOp] Compiling op @ 144: add
[BaselineOp] Compiling op @ 145: setlocal
[BaselineOp] Compiling op @ 148: pop
[BaselineOp] Compiling op @ 149: pop
[BaselineOp] Compiling op @ 150: loopentry
[BaselineOp] [block counter] Emitting a block counter for op @ 150: loopentry (lineno: 61 column: 18)
[BaselineOp] Compiling op @ 152: getlocal
[BaselineOp] Compiling op @ 155: int8
[BaselineOp] Compiling op @ 157: lt
[BaselineOp] Compiling op @ 158: ifne
[BaselineOp] Compiling op @ 163: getarg
[BaselineOp] [block counter] Emitting a block counter for op @ 163: getarg (lineno: 66 column: 4)
[BaselineOp] Compiling op @ 166: zero
[BaselineOp] Compiling op @ 167: getelem
[BaselineOp] Compiling op @ 168: getlocal
[BaselineOp] Compiling op @ 171: getlocal
[BaselineOp] Compiling op @ 174: zero
[BaselineOp] Compiling op @ 175: getelem
[BaselineOp] Compiling op @ 176: getlocal
[BaselineOp] Compiling op @ 179: one
[BaselineOp] Compiling op @ 180: getelem
[BaselineOp] Compiling op @ 181: bitxor
[BaselineOp] Compiling op @ 182: getlocal
[BaselineOp] Compiling op @ 185: one
[BaselineOp] Compiling op @ 186: getelem
[BaselineOp] Compiling op @ 187: bitxor
[BaselineOp] Compiling op @ 188: getlocal
[BaselineOp] Compiling op @ 191: int8
[BaselineOp] Compiling op @ 193: getelem
[BaselineOp] Compiling op @ 194: bitxor
[BaselineOp] Compiling op @ 195: getlocal
[BaselineOp] Compiling op @ 198: int8
[BaselineOp] Compiling op @ 200: getelem
[BaselineOp] Compiling op @ 201: bitxor
[BaselineOp] Compiling op @ 202: setelem
[BaselineOp] Compiling op @ 203: pop
[BaselineOp] Compiling op @ 204: getarg
[BaselineOp] Compiling op @ 207: one
[BaselineOp] Compiling op @ 208: getelem
[BaselineOp] Compiling op @ 209: getlocal
[BaselineOp] Compiling op @ 212: getlocal
[BaselineOp] Compiling op @ 215: zero
[BaselineOp] Compiling op @ 216: getelem
[BaselineOp] Compiling op @ 217: getlocal
[BaselineOp] Compiling op @ 220: one
[BaselineOp] Compiling op @ 221: getelem
[BaselineOp] Compiling op @ 222: bitxor
[BaselineOp] Compiling op @ 223: getlocal
[BaselineOp] Compiling op @ 226: int8
[BaselineOp] Compiling op @ 228: getelem
[BaselineOp] Compiling op @ 229: bitxor
[BaselineOp] Compiling op @ 230: getlocal
[BaselineOp] Compiling op @ 233: int8
[BaselineOp] Compiling op @ 235: getelem
[BaselineOp] Compiling op @ 236: bitxor
[BaselineOp] Compiling op @ 237: getlocal
[BaselineOp] Compiling op @ 240: int8
[BaselineOp] Compiling op @ 242: getelem
[BaselineOp] Compiling op @ 243: bitxor
[BaselineOp] Compiling op @ 244: setelem
[BaselineOp] Compiling op @ 245: pop
[BaselineOp] Compiling op @ 246: getarg
[BaselineOp] Compiling op @ 249: int8
[BaselineOp] Compiling op @ 251: getelem
[BaselineOp] Compiling op @ 252: getlocal
[BaselineOp] Compiling op @ 255: getlocal
[BaselineOp] Compiling op @ 258: zero
[BaselineOp] Compiling op @ 259: getelem
[BaselineOp] Compiling op @ 260: getlocal
[BaselineOp] Compiling op @ 263: one
[BaselineOp] Compiling op @ 264: getelem
[BaselineOp] Compiling op @ 265: bitxor
[BaselineOp] Compiling op @ 266: getlocal
[BaselineOp] Compiling op @ 269: int8
[BaselineOp] Compiling op @ 271: getelem
[BaselineOp] Compiling op @ 272: bitxor
[BaselineOp] Compiling op @ 273: getlocal
[BaselineOp] Compiling op @ 276: int8
[BaselineOp] Compiling op @ 278: getelem
[BaselineOp] Compiling op @ 279: bitxor
[BaselineOp] Compiling op @ 280: getlocal
[BaselineOp] Compiling op @ 283: int8
[BaselineOp] Compiling op @ 285: getelem
[BaselineOp] Compiling op @ 286: bitxor
[BaselineOp] Compiling op @ 287: setelem
[BaselineOp] Compiling op @ 288: pop
[BaselineOp] Compiling op @ 289: getarg
[BaselineOp] Compiling op @ 292: int8
[BaselineOp] Compiling op @ 294: getelem
[BaselineOp] Compiling op @ 295: getlocal
[BaselineOp] Compiling op @ 298: getlocal
[BaselineOp] Compiling op @ 301: zero
[BaselineOp] Compiling op @ 302: getelem
[BaselineOp] Compiling op @ 303: getlocal
[BaselineOp] Compiling op @ 306: zero
[BaselineOp] Compiling op @ 307: getelem
[BaselineOp] Compiling op @ 308: bitxor
[BaselineOp] Compiling op @ 309: getlocal
[BaselineOp] Compiling op @ 312: one
[BaselineOp] Compiling op @ 313: getelem
[BaselineOp] Compiling op @ 314: bitxor
[BaselineOp] Compiling op @ 315: getlocal
[BaselineOp] Compiling op @ 318: int8
[BaselineOp] Compiling op @ 320: getelem
[BaselineOp] Compiling op @ 321: bitxor
[BaselineOp] Compiling op @ 322: getlocal
[BaselineOp] Compiling op @ 325: int8
[BaselineOp] Compiling op @ 327: getelem
[BaselineOp] Compiling op @ 328: bitxor
[BaselineOp] Compiling op @ 329: setelem
[BaselineOp] Compiling op @ 330: pop
[BaselineOp] Compiling op @ 331: getlocal
[BaselineOp] Compiling op @ 334: pos
[BaselineOp] Compiling op @ 335: dup
[BaselineOp] Compiling op @ 336: one
[BaselineOp] Compiling op @ 337: add
[BaselineOp] Compiling op @ 338: setlocal
[BaselineOp] Compiling op @ 341: pop
[BaselineOp] Compiling op @ 342: pop
[BaselineOp] Compiling op @ 343: loopentry
[BaselineOp] [block counter] Emitting a block counter for op @ 343: loopentry (lineno: 58 column: 16)
[BaselineOp] Compiling op @ 345: getlocal
[BaselineOp] Compiling op @ 348: int8
[BaselineOp] Compiling op @ 350: lt
[BaselineOp] Compiling op @ 351: ifne
[BaselineOp] Compiling op @ 356: getarg
[BaselineOp] [block counter] Emitting a block counter for op @ 356: getarg (lineno: 71 column: 2)
[BaselineOp] Compiling op @ 359: return
[BaselineOp] Compiling op @ 360: stop
[BaselineScripts] Created BaselineScript 0x1d7bac0 (raw 0x7fda8ed31e80) for crypto-aes.js:57
[BaselineScripts] [block counter] 11 block counters were emitted for script crypto-aes.js:57 (0x1d7bac0) (lineno: 71 column: 11)
[BaselineScripts] [block counter] Dump 26 block counters for 0x1d769c0
[BaselineScripts] [block counter] Op offset: 82, count: 8
[BaselineScripts] [block counter] Op offset: 83, count: 8
[BaselineScripts] [block counter] Op offset: 179, count: 9
[BaselineScripts] [block counter] Op offset: 193, count: 1
[BaselineScripts] [block counter] Op offset: 205, count: 93
[BaselineScripts] [block counter] Op offset: 206, count: 93
[BaselineScripts] [block counter] Op offset: 237, count: 372
[BaselineScripts] [block counter] Op offset: 238, count: 372
[BaselineScripts] [block counter] Op offset: 271, count: 465
[BaselineScripts] [block counter] Op offset: 284, count: 93
[BaselineScripts] [block counter] Op offset: 298, count: 13
[BaselineScripts] [block counter] Op offset: 337, count: 52
[BaselineScripts] [block counter] Op offset: 338, count: 52
[BaselineScripts] [block counter] Op offset: 378, count: 65
[BaselineScripts] [block counter] Op offset: 391, count: 13
[BaselineScripts] [block counter] Op offset: 396, count: 80
[BaselineScripts] [block counter] Op offset: 407, count: 80
[BaselineScripts] [block counter] Op offset: 418, count: 80
[BaselineScripts] [block counter] Op offset: 423, count: 11
[BaselineScripts] [block counter] Op offset: 441, count: 93
[BaselineScripts] [block counter] Op offset: 451, count: 372
[BaselineScripts] [block counter] Op offset: 452, count: 372
[BaselineScripts] [block counter] Op offset: 499, count: 465
[BaselineScripts] [block counter] Op offset: 512, count: 93
[BaselineScripts] [block counter] Op offset: 524, count: 95
[BaselineScripts] [block counter] Op offset: 544, count: 1
[BaselineScripts] [block counter] Dump 12 block counters for 0x1d795f0
[BaselineScripts] [block counter] Op offset: 27, count: 86
[BaselineScripts] [block counter] Op offset: 28, count: 86
[BaselineScripts] [block counter] Op offset: 38, count: 344
[BaselineScripts] [block counter] Op offset: 39, count: 344
[BaselineScripts] [block counter] Op offset: 78, count: 430
[BaselineScripts] [block counter] Op offset: 91, count: 86
[BaselineScripts] [block counter] Op offset: 101, count: 345
[BaselineScripts] [block counter] Op offset: 102, count: 345
[BaselineScripts] [block counter] Op offset: 133, count: 432
[BaselineScripts] [block counter] Op offset: 146, count: 87
[BaselineScripts] [block counter] Op offset: 158, count: 115
[BaselineScripts] [block counter] Op offset: 171, count: 29
[BaselineScripts] [block counter] Dump 8 block counters for 0x1d708b0
[BaselineScripts] [block counter] Op offset: 10, count: 154
[BaselineScripts] [block counter] Op offset: 11, count: 154
[BaselineScripts] [block counter] Op offset: 21, count: 618
[BaselineScripts] [block counter] Op offset: 22, count: 618
[BaselineScripts] [block counter] Op offset: 67, count: 773
[BaselineScripts] [block counter] Op offset: 81, count: 155
[BaselineScripts] [block counter] Op offset: 93, count: 193
[BaselineScripts] [block counter] Op offset: 106, count: 39
[BaselineScripts] [block counter] Dump 8 block counters for 0x1d77cd0
[BaselineScripts] [block counter] Op offset: 10, count: 154
[BaselineScripts] [block counter] Op offset: 11, count: 154
[BaselineScripts] [block counter] Op offset: 21, count: 618
[BaselineScripts] [block counter] Op offset: 22, count: 618
[BaselineScripts] [block counter] Op offset: 63, count: 773
[BaselineScripts] [block counter] Op offset: 77, count: 155
[BaselineScripts] [block counter] Op offset: 89, count: 193
[BaselineScripts] [block counter] Op offset: 102, count: 39
[BaselineScripts] [block counter] Dump 11 block counters for 0x1d7bac0
[BaselineScripts] [block counter] Op offset: 10, count: 154
[BaselineScripts] [block counter] Op offset: 11, count: 154
[BaselineScripts] [block counter] Op offset: 55, count: 618
[BaselineScripts] [block counter] Op offset: 56, count: 618
[BaselineScripts] [block counter] Op offset: 101, count: 313
[BaselineScripts] [block counter] Op offset: 123, count: 305
[BaselineScripts] [block counter] Op offset: 136, count: 618
[BaselineScripts] [block counter] Op offset: 150, count: 773
[BaselineScripts] [block counter] Op offset: 163, count: 155
[BaselineScripts] [block counter] Op offset: 343, count: 193
[BaselineScripts] [block counter] Op offset: 356, count: 39
[BaselineOp] Analyzing op @ 0 (end=30): string
[BaselineOp] Analyzing op @ 5 (end=30): getarg
[BaselineOp] Analyzing op @ 8 (end=30): dup
[BaselineOp] Analyzing op @ 9 (end=30): callprop
[BaselineOp] Analyzing op @ 14 (end=30): swap
[BaselineOp] Analyzing op @ 15 (end=30): notearg
[BaselineOp] Analyzing op @ 16 (end=30): zero
[BaselineOp] Analyzing op @ 17 (end=30): notearg
[BaselineOp] Analyzing op @ 18 (end=30): call
[BaselineOp] Analyzing op @ 21 (end=30): add
[BaselineOp] Analyzing op @ 22 (end=30): string
[BaselineOp] Analyzing op @ 27 (end=30): add
[BaselineOp] Analyzing op @ 28 (end=30): return
[BaselineOp] Analyzing op @ 29 (end=30): stop
[BaselineScripts] Baseline compiling script crypto-aes.js:279 (0x7fda8d0519c0)
[BaselineOp] Compiling op @ 0: string
[BaselineOp] Compiling op @ 5: getarg
[BaselineOp] Compiling op @ 8: dup
[BaselineOp] Compiling op @ 9: callprop
[BaselineOp] Compiling op @ 14: swap
[BaselineOp] Compiling op @ 15: notearg
[BaselineOp] Compiling op @ 16: zero
[BaselineOp] Compiling op @ 17: notearg
[BaselineOp] Compiling op @ 18: call
[BaselineOp] Compiling op @ 21: add
[BaselineOp] Compiling op @ 22: string
[BaselineOp] Compiling op @ 27: add
[BaselineOp] Compiling op @ 28: return
[BaselineOp] Compiling op @ 29: stop
[BaselineScripts] Created BaselineScript 0x1d56ab0 (raw 0x7fda8ed36490) for crypto-aes.js:279
[BaselineScripts] [block counter] 0 block counters were emitted for script crypto-aes.js:279 (0x1d56ab0) (lineno: 279 column: 97)
[BaselineOp] Analyzing op @ 0 (end=28): getarg
[BaselineOp] Analyzing op @ 3 (end=28): dup
[BaselineOp] Analyzing op @ 4 (end=28): callprop
[BaselineOp] Analyzing op @ 9 (end=28): swap
[BaselineOp] Analyzing op @ 10 (end=28): notearg
[BaselineOp] Analyzing op @ 11 (end=28): regexp
[BaselineOp] Analyzing op @ 16 (end=28): notearg
[BaselineOp] Analyzing op @ 17 (end=28): lambda
[BaselineOp] Analyzing op @ 22 (end=28): notearg
[BaselineOp] Analyzing op @ 23 (end=28): call
[BaselineOp] Analyzing op @ 26 (end=28): return
[BaselineOp] Analyzing op @ 27 (end=28): stop
[BaselineScripts] Baseline compiling script crypto-aes.js:278 (0x7fda8d0518f8)
[BaselineOp] Compiling op @ 0: getarg
[BaselineOp] Compiling op @ 3: dup
[BaselineOp] Compiling op @ 4: callprop
[BaselineOp] Compiling op @ 9: swap
[BaselineOp] Compiling op @ 10: notearg
[BaselineOp] Compiling op @ 11: regexp
[BaselineOp] Compiling op @ 16: notearg
[BaselineOp] Compiling op @ 17: lambda
[BaselineOp] Compiling op @ 22: notearg
[BaselineOp] Compiling op @ 23: call
[BaselineOp] Compiling op @ 26: return
[BaselineOp] Compiling op @ 27: stop
[BaselineScripts] Created BaselineScript 0x1d8d010 (raw 0x7fda8ed36630) for crypto-aes.js:278
[BaselineScripts] [block counter] 0 block counters were emitted for script crypto-aes.js:278 (0x1d8d010) (lineno: 279 column: 101)
[BaselineScripts] [block counter] Dump 12 block counters for 0x1d78b80
[BaselineScripts] [block counter] Op offset: 79, count: 327
[BaselineScripts] [block counter] Op offset: 80, count: 327
[BaselineScripts] [block counter] Op offset: 134, count: 348
[BaselineScripts] [block counter] Op offset: 151, count: 21
[BaselineScripts] [block counter] Op offset: 189, count: 273
[BaselineScripts] [block counter] Op offset: 190, count: 273
[BaselineScripts] [block counter] Op offset: 298, count: 294
[BaselineScripts] [block counter] Op offset: 312, count: 21
[BaselineScripts] [block counter] Op offset: 417, count: 336
[BaselineScripts] [block counter] Op offset: 418, count: 336
[BaselineScripts] [block counter] Op offset: 472, count: 357
[BaselineScripts] [block counter] Op offset: 489, count: 21
[BaselineScripts] [block counter] Dump 40 block counters for 0x1d74b20
[BaselineScripts] [block counter] Op offset: 12, count: 0
[BaselineScripts] [block counter] Op offset: 25, count: 0
[BaselineScripts] [block counter] Op offset: 33, count: 0
[BaselineScripts] [block counter] Op offset: 39, count: 0
[BaselineScripts] [block counter] Op offset: 45, count: 0
[BaselineScripts] [block counter] Op offset: 83, count: 23
[BaselineScripts] [block counter] Op offset: 84, count: 23
[BaselineScripts] [block counter] Op offset: 126, count: 24
[BaselineScripts] [block counter] Op offset: 140, count: 1
[BaselineScripts] [block counter] Op offset: 274, count: 4
[BaselineScripts] [block counter] Op offset: 275, count: 4
[BaselineScripts] [block counter] Op offset: 309, count: 5
[BaselineScripts] [block counter] Op offset: 322, count: 1
[BaselineScripts] [block counter] Op offset: 332, count: 4
[BaselineScripts] [block counter] Op offset: 333, count: 4
[BaselineScripts] [block counter] Op offset: 376, count: 5
[BaselineScripts] [block counter] Op offset: 389, count: 1
[BaselineScripts] [block counter] Op offset: 468, count: 40
[BaselineScripts] [block counter] Op offset: 469, count: 40
[BaselineScripts] [block counter] Op offset: 479, count: 160
[BaselineScripts] [block counter] Op offset: 480, count: 160
[BaselineScripts] [block counter] Op offset: 517, count: 200
[BaselineScripts] [block counter] Op offset: 530, count: 40
[BaselineScripts] [block counter] Op offset: 540, count: 160
[BaselineScripts] [block counter] Op offset: 541, count: 160
[BaselineScripts] [block counter] Op offset: 583, count: 200
[BaselineScripts] [block counter] Op offset: 596, count: 40
[BaselineScripts] [block counter] Op offset: 632, count: 40
[BaselineScripts] [block counter] Op offset: 640, count: 0
[BaselineScripts] [block counter] Op offset: 656, count: 40
[BaselineScripts] [block counter] Op offset: 679, count: 640
[BaselineScripts] [block counter] Op offset: 680, count: 640
[BaselineScripts] [block counter] Op offset: 765, count: 680
[BaselineScripts] [block counter] Op offset: 779, count: 40
[BaselineScripts] [block counter] Op offset: 813, count: 41
[BaselineScripts] [block counter] Op offset: 827, count: 0
[BaselineScripts] [block counter] Op offset: 846, count: 0
[BaselineScripts] [block counter] Op offset: 847, count: 0
[BaselineScripts] [block counter] Op offset: 891, count: 0
[BaselineScripts] [block counter] Op offset: 904, count: 0
[BaselineOp] Analyzing op @ 0 (end=779): getarg
[BaselineOp] Analyzing op @ 3 (end=779): uint16
[BaselineOp] Analyzing op @ 6 (end=779): eq
[BaselineOp] Analyzing op @ 7 (end=779): or
[BaselineOp] Analyzing op @ 12 (end=779): pop
[BaselineOp] Analyzing op @ 13 (end=779): getarg
[BaselineOp] Analyzing op @ 16 (end=779): uint16
[BaselineOp] Analyzing op @ 19 (end=779): eq
[BaselineOp] Analyzing op @ 20 (end=779): or
[BaselineOp] Analyzing op @ 25 (end=779): pop
[BaselineOp] Analyzing op @ 26 (end=779): getarg
[BaselineOp] Analyzing op @ 29 (end=779): uint16
[BaselineOp] Analyzing op @ 32 (end=779): eq
[BaselineOp] Analyzing op @ 33 (end=779): not
[BaselineOp] Analyzing op @ 34 (end=779): ifeq
[BaselineOp] Analyzing op @ 39 (end=779): string
[BaselineOp] Analyzing op @ 44 (end=779): return
[BaselineOp] Analyzing op @ 45 (end=779): getarg
[BaselineOp] Analyzing op @ 48 (end=779): int8
[BaselineOp] Analyzing op @ 50 (end=779): div
[BaselineOp] Analyzing op @ 51 (end=779): setlocal
[BaselineOp] Analyzing op @ 54 (end=779): pop
[BaselineOp] Analyzing op @ 55 (end=779): getgname
[BaselineOp] Analyzing op @ 60 (end=779): undefined
[BaselineOp] Analyzing op @ 61 (end=779): notearg
[BaselineOp] Analyzing op @ 62 (end=779): getlocal
[BaselineOp] Analyzing op @ 65 (end=779): notearg
[BaselineOp] Analyzing op @ 66 (end=779): new
[BaselineOp] Analyzing op @ 69 (end=779): setlocal
[BaselineOp] Analyzing op @ 72 (end=779): pop
[BaselineOp] Analyzing op @ 73 (end=779): zero
[BaselineOp] Analyzing op @ 74 (end=779): setlocal
[BaselineOp] Analyzing op @ 77 (end=779): pop
[BaselineOp] Analyzing op @ 78 (end=779): goto
[BaselineOp] Analyzing op @ 83 (end=779): loophead
[BaselineOp] Analyzing op @ 84 (end=779): getlocal
[BaselineOp] Analyzing op @ 87 (end=779): getlocal
[BaselineOp] Analyzing op @ 90 (end=779): getarg
[BaselineOp] Analyzing op @ 93 (end=779): dup
[BaselineOp] Analyzing op @ 94 (end=779): callprop
[BaselineOp] Analyzing op @ 99 (end=779): swap
[BaselineOp] Analyzing op @ 100 (end=779): notearg
[BaselineOp] Analyzing op @ 101 (end=779): getlocal
[BaselineOp] Analyzing op @ 104 (end=779): notearg
[BaselineOp] Analyzing op @ 105 (end=779): call
[BaselineOp] Analyzing op @ 108 (end=779): uint16
[BaselineOp] Analyzing op @ 111 (end=779): bitand
[BaselineOp] Analyzing op @ 112 (end=779): setelem
[BaselineOp] Analyzing op @ 113 (end=779): pop
[BaselineOp] Analyzing op @ 114 (end=779): getlocal
[BaselineOp] Analyzing op @ 117 (end=779): pos
[BaselineOp] Analyzing op @ 118 (end=779): dup
[BaselineOp] Analyzing op @ 119 (end=779): one
[BaselineOp] Analyzing op @ 120 (end=779): add
[BaselineOp] Analyzing op @ 121 (end=779): setlocal
[BaselineOp] Analyzing op @ 124 (end=779): pop
[BaselineOp] Analyzing op @ 125 (end=779): pop
[BaselineOp] Analyzing op @ 126 (end=779): loopentry
[BaselineOp] Analyzing op @ 128 (end=779): getlocal
[BaselineOp] Analyzing op @ 131 (end=779): getlocal
[BaselineOp] Analyzing op @ 134 (end=779): lt
[BaselineOp] Analyzing op @ 135 (end=779): ifne
[BaselineOp] Analyzing op @ 84 (end=779): getlocal
[BaselineOp] Analyzing op @ 87 (end=779): getlocal
[BaselineOp] Analyzing op @ 90 (end=779): getarg
[BaselineOp] Analyzing op @ 93 (end=779): dup
[BaselineOp] Analyzing op @ 94 (end=779): callprop
[BaselineOp] Analyzing op @ 99 (end=779): swap
[BaselineOp] Analyzing op @ 100 (end=779): notearg
[BaselineOp] Analyzing op @ 101 (end=779): getlocal
[BaselineOp] Analyzing op @ 104 (end=779): notearg
[BaselineOp] Analyzing op @ 105 (end=779): call
[BaselineOp] Analyzing op @ 108 (end=779): uint16
[BaselineOp] Analyzing op @ 111 (end=779): bitand
[BaselineOp] Analyzing op @ 112 (end=779): setelem
[BaselineOp] Analyzing op @ 113 (end=779): pop
[BaselineOp] Analyzing op @ 114 (end=779): getlocal
[BaselineOp] Analyzing op @ 117 (end=779): pos
[BaselineOp] Analyzing op @ 118 (end=779): dup
[BaselineOp] Analyzing op @ 119 (end=779): one
[BaselineOp] Analyzing op @ 120 (end=779): add
[BaselineOp] Analyzing op @ 121 (end=779): setlocal
[BaselineOp] Analyzing op @ 124 (end=779): pop
[BaselineOp] Analyzing op @ 125 (end=779): pop
[BaselineOp] Analyzing op @ 126 (end=779): loopentry
[BaselineOp] Analyzing op @ 128 (end=779): getlocal
[BaselineOp] Analyzing op @ 131 (end=779): getlocal
[BaselineOp] Analyzing op @ 134 (end=779): lt
[BaselineOp] Analyzing op @ 135 (end=779): ifne
[BaselineOp] Analyzing op @ 140 (end=779): callgname
[BaselineOp] Analyzing op @ 145 (end=779): undefined
[BaselineOp] Analyzing op @ 146 (end=779): notearg
[BaselineOp] Analyzing op @ 147 (end=779): getlocal
[BaselineOp] Analyzing op @ 150 (end=779): notearg
[BaselineOp] Analyzing op @ 151 (end=779): call
[BaselineOp] Analyzing op @ 154 (end=779): setlocal
[BaselineOp] Analyzing op @ 157 (end=779): pop
[BaselineOp] Analyzing op @ 158 (end=779): callgname
[BaselineOp] Analyzing op @ 163 (end=779): undefined
[BaselineOp] Analyzing op @ 164 (end=779): notearg
[BaselineOp] Analyzing op @ 165 (end=779): getlocal
[BaselineOp] Analyzing op @ 168 (end=779): notearg
[BaselineOp] Analyzing op @ 169 (end=779): getlocal
[BaselineOp] Analyzing op @ 172 (end=779): notearg
[BaselineOp] Analyzing op @ 173 (end=779): call
[BaselineOp] Analyzing op @ 176 (end=779): setlocal
[BaselineOp] Analyzing op @ 179 (end=779): pop
[BaselineOp] Analyzing op @ 180 (end=779): getlocal
[BaselineOp] Analyzing op @ 183 (end=779): dup
[BaselineOp] Analyzing op @ 184 (end=779): callprop
[BaselineOp] Analyzing op @ 189 (end=779): swap
[BaselineOp] Analyzing op @ 190 (end=779): notearg
[BaselineOp] Analyzing op @ 191 (end=779): getlocal
[BaselineOp] Analyzing op @ 194 (end=779): dup
[BaselineOp] Analyzing op @ 195 (end=779): callprop
[BaselineOp] Analyzing op @ 200 (end=779): swap
[BaselineOp] Analyzing op @ 201 (end=779): notearg
[BaselineOp] Analyzing op @ 202 (end=779): zero
[BaselineOp] Analyzing op @ 203 (end=779): notearg
[BaselineOp] Analyzing op @ 204 (end=779): getlocal
[BaselineOp] Analyzing op @ 207 (end=779): int8
[BaselineOp] Analyzing op @ 209 (end=779): sub
[BaselineOp] Analyzing op @ 210 (end=779): notearg
[BaselineOp] Analyzing op @ 211 (end=779): call
[BaselineOp] Analyzing op @ 214 (end=779): notearg
[BaselineOp] Analyzing op @ 215 (end=779): call
[BaselineOp] Analyzing op @ 218 (end=779): setlocal
[BaselineOp] Analyzing op @ 221 (end=779): pop
[BaselineOp] Analyzing op @ 222 (end=779): callgname
[BaselineOp] Analyzing op @ 227 (end=779): undefined
[BaselineOp] Analyzing op @ 228 (end=779): notearg
[BaselineOp] Analyzing op @ 229 (end=779): getlocal
[BaselineOp] Analyzing op @ 232 (end=779): notearg
[BaselineOp] Analyzing op @ 233 (end=779): call
[BaselineOp] Analyzing op @ 236 (end=779): setlocal
[BaselineOp] Analyzing op @ 239 (end=779): pop
[BaselineOp] Analyzing op @ 240 (end=779): getarg
[BaselineOp] Analyzing op @ 243 (end=779): dup
[BaselineOp] Analyzing op @ 244 (end=779): callprop
[BaselineOp] Analyzing op @ 249 (end=779): swap
[BaselineOp] Analyzing op @ 250 (end=779): notearg
[BaselineOp] Analyzing op @ 251 (end=779): string
[BaselineOp] Analyzing op @ 256 (end=779): notearg
[BaselineOp] Analyzing op @ 257 (end=779): call
[BaselineOp] Analyzing op @ 260 (end=779): setarg
[BaselineOp] Analyzing op @ 263 (end=779): pop
[BaselineOp] Analyzing op @ 264 (end=779): int8
[BaselineOp] Analyzing op @ 266 (end=779): setlocal
[BaselineOp] Analyzing op @ 269 (end=779): pop
[BaselineOp] Analyzing op @ 270 (end=779): getgname
[BaselineOp] Analyzing op @ 275 (end=779): undefined
[BaselineOp] Analyzing op @ 276 (end=779): notearg
[BaselineOp] Analyzing op @ 277 (end=779): getlocal
[BaselineOp] Analyzing op @ 280 (end=779): notearg
[BaselineOp] Analyzing op @ 281 (end=779): new
[BaselineOp] Analyzing op @ 284 (end=779): setlocal
[BaselineOp] Analyzing op @ 287 (end=779): pop
[BaselineOp] Analyzing op @ 288 (end=779): callgname
[BaselineOp] Analyzing op @ 293 (end=779): undefined
[BaselineOp] Analyzing op @ 294 (end=779): notearg
[BaselineOp] Analyzing op @ 295 (end=779): getarg
[BaselineOp] Analyzing op @ 298 (end=779): zero
[BaselineOp] Analyzing op @ 299 (end=779): getelem
[BaselineOp] Analyzing op @ 300 (end=779): notearg
[BaselineOp] Analyzing op @ 301 (end=779): call
[BaselineOp] Analyzing op @ 304 (end=779): setlocal
[BaselineOp] Analyzing op @ 307 (end=779): pop
[BaselineOp] Analyzing op @ 308 (end=779): zero
[BaselineOp] Analyzing op @ 309 (end=779): setlocal
[BaselineOp] Analyzing op @ 312 (end=779): pop
[BaselineOp] Analyzing op @ 313 (end=779): goto
[BaselineOp] Analyzing op @ 318 (end=779): loophead
[BaselineOp] Analyzing op @ 319 (end=779): getlocal
[BaselineOp] Analyzing op @ 322 (end=779): getlocal
[BaselineOp] Analyzing op @ 325 (end=779): getlocal
[BaselineOp] Analyzing op @ 328 (end=779): dup
[BaselineOp] Analyzing op @ 329 (end=779): callprop
[BaselineOp] Analyzing op @ 334 (end=779): swap
[BaselineOp] Analyzing op @ 335 (end=779): notearg
[BaselineOp] Analyzing op @ 336 (end=779): getlocal
[BaselineOp] Analyzing op @ 339 (end=779): notearg
[BaselineOp] Analyzing op @ 340 (end=779): call
[BaselineOp] Analyzing op @ 343 (end=779): setelem
[BaselineOp] Analyzing op @ 344 (end=779): pop
[BaselineOp] Analyzing op @ 345 (end=779): getlocal
[BaselineOp] Analyzing op @ 348 (end=779): pos
[BaselineOp] Analyzing op @ 349 (end=779): dup
[BaselineOp] Analyzing op @ 350 (end=779): one
[BaselineOp] Analyzing op @ 351 (end=779): add
[BaselineOp] Analyzing op @ 352 (end=779): setlocal
[BaselineOp] Analyzing op @ 355 (end=779): pop
[BaselineOp] Analyzing op @ 356 (end=779): pop
[BaselineOp] Analyzing op @ 357 (end=779): loopentry
[BaselineOp] Analyzing op @ 359 (end=779): getlocal
[BaselineOp] Analyzing op @ 362 (end=779): int8
[BaselineOp] Analyzing op @ 364 (end=779): lt
[BaselineOp] Analyzing op @ 365 (end=779): ifne
[BaselineOp] Analyzing op @ 319 (end=779): getlocal
[BaselineOp] Analyzing op @ 322 (end=779): getlocal
[BaselineOp] Analyzing op @ 325 (end=779): getlocal
[BaselineOp] Analyzing op @ 328 (end=779): dup
[BaselineOp] Analyzing op @ 329 (end=779): callprop
[BaselineOp] Analyzing op @ 334 (end=779): swap
[BaselineOp] Analyzing op @ 335 (end=779): notearg
[BaselineOp] Analyzing op @ 336 (end=779): getlocal
[BaselineOp] Analyzing op @ 339 (end=779): notearg
[BaselineOp] Analyzing op @ 340 (end=779): call
[BaselineOp] Analyzing op @ 343 (end=779): setelem
[BaselineOp] Analyzing op @ 344 (end=779): pop
[BaselineOp] Analyzing op @ 345 (end=779): getlocal
[BaselineOp] Analyzing op @ 348 (end=779): pos
[BaselineOp] Analyzing op @ 349 (end=779): dup
[BaselineOp] Analyzing op @ 350 (end=779): one
[BaselineOp] Analyzing op @ 351 (end=779): add
[BaselineOp] Analyzing op @ 352 (end=779): setlocal
[BaselineOp] Analyzing op @ 355 (end=779): pop
[BaselineOp] Analyzing op @ 356 (end=779): pop
[BaselineOp] Analyzing op @ 357 (end=779): loopentry
[BaselineOp] Analyzing op @ 359 (end=779): getlocal
[BaselineOp] Analyzing op @ 362 (end=779): int8
[BaselineOp] Analyzing op @ 364 (end=779): lt
[BaselineOp] Analyzing op @ 365 (end=779): ifne
[BaselineOp] Analyzing op @ 370 (end=779): getgname
[BaselineOp] Analyzing op @ 375 (end=779): undefined
[BaselineOp] Analyzing op @ 376 (end=779): notearg
[BaselineOp] Analyzing op @ 377 (end=779): getarg
[BaselineOp] Analyzing op @ 380 (end=779): length
[BaselineOp] Analyzing op @ 385 (end=779): one
[BaselineOp] Analyzing op @ 386 (end=779): sub
[BaselineOp] Analyzing op @ 387 (end=779): notearg
[BaselineOp] Analyzing op @ 388 (end=779): new
[BaselineOp] Analyzing op @ 391 (end=779): setlocal
[BaselineOp] Analyzing op @ 394 (end=779): pop
[BaselineOp] Analyzing op @ 395 (end=779): one
[BaselineOp] Analyzing op @ 396 (end=779): setlocal
[BaselineOp] Analyzing op @ 399 (end=779): pop
[BaselineOp] Analyzing op @ 400 (end=779): goto
[BaselineOp] Analyzing op @ 405 (end=779): loophead
[BaselineOp] Analyzing op @ 406 (end=779): zero
[BaselineOp] Analyzing op @ 407 (end=779): setlocal
[BaselineOp] Analyzing op @ 410 (end=779): pop
[BaselineOp] Analyzing op @ 411 (end=779): goto
[BaselineOp] Analyzing op @ 416 (end=779): loophead
[BaselineOp] Analyzing op @ 417 (end=779): getlocal
[BaselineOp] Analyzing op @ 420 (end=779): int8
[BaselineOp] Analyzing op @ 422 (end=779): getlocal
[BaselineOp] Analyzing op @ 425 (end=779): sub
[BaselineOp] Analyzing op @ 426 (end=779): getlocal
[BaselineOp] Analyzing op @ 429 (end=779): one
[BaselineOp] Analyzing op @ 430 (end=779): sub
[BaselineOp] Analyzing op @ 431 (end=779): getlocal
[BaselineOp] Analyzing op @ 434 (end=779): int8
[BaselineOp] Analyzing op @ 436 (end=779): mul
[BaselineOp] Analyzing op @ 437 (end=779): ursh
[BaselineOp] Analyzing op @ 438 (end=779): uint16
[BaselineOp] Analyzing op @ 441 (end=779): bitand
[BaselineOp] Analyzing op @ 442 (end=779): setelem
[BaselineOp] Analyzing op @ 443 (end=779): pop
[BaselineOp] Analyzing op @ 444 (end=779): getlocal
[BaselineOp] Analyzing op @ 447 (end=779): pos
[BaselineOp] Analyzing op @ 448 (end=779): dup
[BaselineOp] Analyzing op @ 449 (end=779): one
[BaselineOp] Analyzing op @ 450 (end=779): add
[BaselineOp] Analyzing op @ 451 (end=779): setlocal
[BaselineOp] Analyzing op @ 454 (end=779): pop
[BaselineOp] Analyzing op @ 455 (end=779): pop
[BaselineOp] Analyzing op @ 456 (end=779): loopentry
[BaselineOp] Analyzing op @ 458 (end=779): getlocal
[BaselineOp] Analyzing op @ 461 (end=779): int8
[BaselineOp] Analyzing op @ 463 (end=779): lt
[BaselineOp] Analyzing op @ 464 (end=779): ifne
[BaselineOp] Analyzing op @ 469 (end=779): zero
[BaselineOp] Analyzing op @ 470 (end=779): setlocal
[BaselineOp] Analyzing op @ 473 (end=779): pop
[BaselineOp] Analyzing op @ 474 (end=779): goto
[BaselineOp] Analyzing op @ 479 (end=779): loophead
[BaselineOp] Analyzing op @ 480 (end=779): getlocal
[BaselineOp] Analyzing op @ 483 (end=779): int8
[BaselineOp] Analyzing op @ 485 (end=779): getlocal
[BaselineOp] Analyzing op @ 488 (end=779): sub
[BaselineOp] Analyzing op @ 489 (end=779): int8
[BaselineOp] Analyzing op @ 491 (end=779): sub
[BaselineOp] Analyzing op @ 492 (end=779): getlocal
[BaselineOp] Analyzing op @ 495 (end=779): double
[BaselineOp] Analyzing op @ 500 (end=779): div
[BaselineOp] Analyzing op @ 501 (end=779): one
[BaselineOp] Analyzing op @ 502 (end=779): sub
[BaselineOp] Analyzing op @ 503 (end=779): getlocal
[BaselineOp] Analyzing op @ 506 (end=779): int8
[BaselineOp] Analyzing op @ 508 (end=779): mul
[BaselineOp] Analyzing op @ 509 (end=779): ursh
[BaselineOp] Analyzing op @ 510 (end=779): uint16
[BaselineOp] Analyzing op @ 513 (end=779): bitand
[BaselineOp] Analyzing op @ 514 (end=779): setelem
[BaselineOp] Analyzing op @ 515 (end=779): pop
[BaselineOp] Analyzing op @ 516 (end=779): getlocal
[BaselineOp] Analyzing op @ 519 (end=779): pos
[BaselineOp] Analyzing op @ 520 (end=779): dup
[BaselineOp] Analyzing op @ 521 (end=779): one
[BaselineOp] Analyzing op @ 522 (end=779): add
[BaselineOp] Analyzing op @ 523 (end=779): setlocal
[BaselineOp] Analyzing op @ 526 (end=779): pop
[BaselineOp] Analyzing op @ 527 (end=779): pop
[BaselineOp] Analyzing op @ 528 (end=779): loopentry
[BaselineOp] Analyzing op @ 530 (end=779): getlocal
[BaselineOp] Analyzing op @ 533 (end=779): int8
[BaselineOp] Analyzing op @ 535 (end=779): lt
[BaselineOp] Analyzing op @ 536 (end=779): ifne
[BaselineOp] Analyzing op @ 541 (end=779): callgname
[BaselineOp] Analyzing op @ 546 (end=779): undefined
[BaselineOp] Analyzing op @ 547 (end=779): notearg
[BaselineOp] Analyzing op @ 548 (end=779): getlocal
[BaselineOp] Analyzing op @ 551 (end=779): notearg
[BaselineOp] Analyzing op @ 552 (end=779): getlocal
[BaselineOp] Analyzing op @ 555 (end=779): notearg
[BaselineOp] Analyzing op @ 556 (end=779): call
[BaselineOp] Analyzing op @ 559 (end=779): setlocal
[BaselineOp] Analyzing op @ 562 (end=779): pop
[BaselineOp] Analyzing op @ 563 (end=779): getarg
[BaselineOp] Analyzing op @ 566 (end=779): getlocal
[BaselineOp] Analyzing op @ 569 (end=779): callgname
[BaselineOp] Analyzing op @ 574 (end=779): undefined
[BaselineOp] Analyzing op @ 575 (end=779): notearg
[BaselineOp] Analyzing op @ 576 (end=779): getarg
[BaselineOp] Analyzing op @ 579 (end=779): getlocal
[BaselineOp] Analyzing op @ 582 (end=779): getelem
[BaselineOp] Analyzing op @ 583 (end=779): notearg
[BaselineOp] Analyzing op @ 584 (end=779): call
[BaselineOp] Analyzing op @ 587 (end=779): setelem
[BaselineOp] Analyzing op @ 588 (end=779): pop
[BaselineOp] Analyzing op @ 589 (end=779): string
[BaselineOp] Analyzing op @ 594 (end=779): setlocal
[BaselineOp] Analyzing op @ 597 (end=779): pop
[BaselineOp] Analyzing op @ 598 (end=779): zero
[BaselineOp] Analyzing op @ 599 (end=779): setlocal
[BaselineOp] Analyzing op @ 602 (end=779): pop
[BaselineOp] Analyzing op @ 603 (end=779): goto
[BaselineOp] Analyzing op @ 608 (end=779): loophead
[BaselineOp] Analyzing op @ 609 (end=779): getarg
[BaselineOp] Analyzing op @ 612 (end=779): getlocal
[BaselineOp] Analyzing op @ 615 (end=779): getelem
[BaselineOp] Analyzing op @ 616 (end=779): dup
[BaselineOp] Analyzing op @ 617 (end=779): callprop
[BaselineOp] Analyzing op @ 622 (end=779): swap
[BaselineOp] Analyzing op @ 623 (end=779): notearg
[BaselineOp] Analyzing op @ 624 (end=779): getlocal
[BaselineOp] Analyzing op @ 627 (end=779): notearg
[BaselineOp] Analyzing op @ 628 (end=779): call
[BaselineOp] Analyzing op @ 631 (end=779): setlocal
[BaselineOp] Analyzing op @ 634 (end=779): pop
[BaselineOp] Analyzing op @ 635 (end=779): getlocal
[BaselineOp] Analyzing op @ 638 (end=779): getlocal
[BaselineOp] Analyzing op @ 641 (end=779): getlocal
[BaselineOp] Analyzing op @ 644 (end=779): getelem
[BaselineOp] Analyzing op @ 645 (end=779): bitxor
[BaselineOp] Analyzing op @ 646 (end=779): setlocal
[BaselineOp] Analyzing op @ 649 (end=779): pop
[BaselineOp] Analyzing op @ 650 (end=779): getlocal
[BaselineOp] Analyzing op @ 653 (end=779): getgname
[BaselineOp] Analyzing op @ 658 (end=779): dup
[BaselineOp] Analyzing op @ 659 (end=779): callprop
[BaselineOp] Analyzing op @ 664 (end=779): swap
[BaselineOp] Analyzing op @ 665 (end=779): notearg
[BaselineOp] Analyzing op @ 666 (end=779): getlocal
[BaselineOp] Analyzing op @ 669 (end=779): notearg
[BaselineOp] Analyzing op @ 670 (end=779): call
[BaselineOp] Analyzing op @ 673 (end=779): add
[BaselineOp] Analyzing op @ 674 (end=779): setlocal
[BaselineOp] Analyzing op @ 677 (end=779): pop
[BaselineOp] Analyzing op @ 678 (end=779): getlocal
[BaselineOp] Analyzing op @ 681 (end=779): pos
[BaselineOp] Analyzing op @ 682 (end=779): dup
[BaselineOp] Analyzing op @ 683 (end=779): one
[BaselineOp] Analyzing op @ 684 (end=779): add
[BaselineOp] Analyzing op @ 685 (end=779): setlocal
[BaselineOp] Analyzing op @ 688 (end=779): pop
[BaselineOp] Analyzing op @ 689 (end=779): pop
[BaselineOp] Analyzing op @ 690 (end=779): loopentry
[BaselineOp] Analyzing op @ 692 (end=779): getlocal
[BaselineOp] Analyzing op @ 695 (end=779): getarg
[BaselineOp] Analyzing op @ 698 (end=779): getlocal
[BaselineOp] Analyzing op @ 701 (end=779): getelem
[BaselineOp] Analyzing op @ 702 (end=779): length
[BaselineOp] Analyzing op @ 707 (end=779): lt
[BaselineOp] Analyzing op @ 708 (end=779): ifne
[BaselineOp] Analyzing op @ 713 (end=779): getlocal
[BaselineOp] Analyzing op @ 716 (end=779): getlocal
[BaselineOp] Analyzing op @ 719 (end=779): one
[BaselineOp] Analyzing op @ 720 (end=779): sub
[BaselineOp] Analyzing op @ 721 (end=779): getlocal
[BaselineOp] Analyzing op @ 724 (end=779): setelem
[BaselineOp] Analyzing op @ 725 (end=779): pop
[BaselineOp] Analyzing op @ 726 (end=779): getlocal
[BaselineOp] Analyzing op @ 729 (end=779): pos
[BaselineOp] Analyzing op @ 730 (end=779): dup
[BaselineOp] Analyzing op @ 731 (end=779): one
[BaselineOp] Analyzing op @ 732 (end=779): add
[BaselineOp] Analyzing op @ 733 (end=779): setlocal
[BaselineOp] Analyzing op @ 736 (end=779): pop
[BaselineOp] Analyzing op @ 737 (end=779): pop
[BaselineOp] Analyzing op @ 738 (end=779): loopentry
[BaselineOp] Analyzing op @ 740 (end=779): getlocal
[BaselineOp] Analyzing op @ 743 (end=779): getarg
[BaselineOp] Analyzing op @ 746 (end=779): length
[BaselineOp] Analyzing op @ 751 (end=779): lt
[BaselineOp] Analyzing op @ 752 (end=779): ifne
[BaselineOp] Analyzing op @ 406 (end=779): zero
[BaselineOp] Analyzing op @ 407 (end=779): setlocal
[BaselineOp] Analyzing op @ 410 (end=779): pop
[BaselineOp] Analyzing op @ 411 (end=779): goto
[BaselineOp] Analyzing op @ 416 (end=779): loophead
[BaselineOp] Analyzing op @ 417 (end=779): getlocal
[BaselineOp] Analyzing op @ 420 (end=779): int8
[BaselineOp] Analyzing op @ 422 (end=779): getlocal
[BaselineOp] Analyzing op @ 425 (end=779): sub
[BaselineOp] Analyzing op @ 426 (end=779): getlocal
[BaselineOp] Analyzing op @ 429 (end=779): one
[BaselineOp] Analyzing op @ 430 (end=779): sub
[BaselineOp] Analyzing op @ 431 (end=779): getlocal
[BaselineOp] Analyzing op @ 434 (end=779): int8
[BaselineOp] Analyzing op @ 436 (end=779): mul
[BaselineOp] Analyzing op @ 437 (end=779): ursh
[BaselineOp] Analyzing op @ 438 (end=779): uint16
[BaselineOp] Analyzing op @ 441 (end=779): bitand
[BaselineOp] Analyzing op @ 442 (end=779): setelem
[BaselineOp] Analyzing op @ 443 (end=779): pop
[BaselineOp] Analyzing op @ 444 (end=779): getlocal
[BaselineOp] Analyzing op @ 447 (end=779): pos
[BaselineOp] Analyzing op @ 448 (end=779): dup
[BaselineOp] Analyzing op @ 449 (end=779): one
[BaselineOp] Analyzing op @ 450 (end=779): add
[BaselineOp] Analyzing op @ 451 (end=779): setlocal
[BaselineOp] Analyzing op @ 454 (end=779): pop
[BaselineOp] Analyzing op @ 455 (end=779): pop
[BaselineOp] Analyzing op @ 456 (end=779): loopentry
[BaselineOp] Analyzing op @ 458 (end=779): getlocal
[BaselineOp] Analyzing op @ 461 (end=779): int8
[BaselineOp] Analyzing op @ 463 (end=779): lt
[BaselineOp] Analyzing op @ 464 (end=779): ifne
[BaselineOp] Analyzing op @ 417 (end=779): getlocal
[BaselineOp] Analyzing op @ 420 (end=779): int8
[BaselineOp] Analyzing op @ 422 (end=779): getlocal
[BaselineOp] Analyzing op @ 425 (end=779): sub
[BaselineOp] Analyzing op @ 426 (end=779): getlocal
[BaselineOp] Analyzing op @ 429 (end=779): one
[BaselineOp] Analyzing op @ 430 (end=779): sub
[BaselineOp] Analyzing op @ 431 (end=779): getlocal
[BaselineOp] Analyzing op @ 434 (end=779): int8
[BaselineOp] Analyzing op @ 436 (end=779): mul
[BaselineOp] Analyzing op @ 437 (end=779): ursh
[BaselineOp] Analyzing op @ 438 (end=779): uint16
[BaselineOp] Analyzing op @ 441 (end=779): bitand
[BaselineOp] Analyzing op @ 442 (end=779): setelem
[BaselineOp] Analyzing op @ 443 (end=779): pop
[BaselineOp] Analyzing op @ 444 (end=779): getlocal
[BaselineOp] Analyzing op @ 447 (end=779): pos
[BaselineOp] Analyzing op @ 448 (end=779): dup
[BaselineOp] Analyzing op @ 449 (end=779): one
[BaselineOp] Analyzing op @ 450 (end=779): add
[BaselineOp] Analyzing op @ 451 (end=779): setlocal
[BaselineOp] Analyzing op @ 454 (end=779): pop
[BaselineOp] Analyzing op @ 455 (end=779): pop
[BaselineOp] Analyzing op @ 456 (end=779): loopentry
[BaselineOp] Analyzing op @ 458 (end=779): getlocal
[BaselineOp] Analyzing op @ 461 (end=779): int8
[BaselineOp] Analyzing op @ 463 (end=779): lt
[BaselineOp] Analyzing op @ 464 (end=779): ifne
[BaselineOp] Analyzing op @ 469 (end=779): zero
[BaselineOp] Analyzing op @ 470 (end=779): setlocal
[BaselineOp] Analyzing op @ 473 (end=779): pop
[BaselineOp] Analyzing op @ 474 (end=779): goto
[BaselineOp] Analyzing op @ 479 (end=779): loophead
[BaselineOp] Analyzing op @ 480 (end=779): getlocal
[BaselineOp] Analyzing op @ 483 (end=779): int8
[BaselineOp] Analyzing op @ 485 (end=779): getlocal
[BaselineOp] Analyzing op @ 488 (end=779): sub
[BaselineOp] Analyzing op @ 489 (end=779): int8
[BaselineOp] Analyzing op @ 491 (end=779): sub
[BaselineOp] Analyzing op @ 492 (end=779): getlocal
[BaselineOp] Analyzing op @ 495 (end=779): double
[BaselineOp] Analyzing op @ 500 (end=779): div
[BaselineOp] Analyzing op @ 501 (end=779): one
[BaselineOp] Analyzing op @ 502 (end=779): sub
[BaselineOp] Analyzing op @ 503 (end=779): getlocal
[BaselineOp] Analyzing op @ 506 (end=779): int8
[BaselineOp] Analyzing op @ 508 (end=779): mul
[BaselineOp] Analyzing op @ 509 (end=779): ursh
[BaselineOp] Analyzing op @ 510 (end=779): uint16
[BaselineOp] Analyzing op @ 513 (end=779): bitand
[BaselineOp] Analyzing op @ 514 (end=779): setelem
[BaselineOp] Analyzing op @ 515 (end=779): pop
[BaselineOp] Analyzing op @ 516 (end=779): getlocal
[BaselineOp] Analyzing op @ 519 (end=779): pos
[BaselineOp] Analyzing op @ 520 (end=779): dup
[BaselineOp] Analyzing op @ 521 (end=779): one
[BaselineOp] Analyzing op @ 522 (end=779): add
[BaselineOp] Analyzing op @ 523 (end=779): setlocal
[BaselineOp] Analyzing op @ 526 (end=779): pop
[BaselineOp] Analyzing op @ 527 (end=779): pop
[BaselineOp] Analyzing op @ 528 (end=779): loopentry
[BaselineOp] Analyzing op @ 530 (end=779): getlocal
[BaselineOp] Analyzing op @ 533 (end=779): int8
[BaselineOp] Analyzing op @ 535 (end=779): lt
[BaselineOp] Analyzing op @ 536 (end=779): ifne
[BaselineOp] Analyzing op @ 480 (end=779): getlocal
[BaselineOp] Analyzing op @ 483 (end=779): int8
[BaselineOp] Analyzing op @ 485 (end=779): getlocal
[BaselineOp] Analyzing op @ 488 (end=779): sub
[BaselineOp] Analyzing op @ 489 (end=779): int8
[BaselineOp] Analyzing op @ 491 (end=779): sub
[BaselineOp] Analyzing op @ 492 (end=779): getlocal
[BaselineOp] Analyzing op @ 495 (end=779): double
[BaselineOp] Analyzing op @ 500 (end=779): div
[BaselineOp] Analyzing op @ 501 (end=779): one
[BaselineOp] Analyzing op @ 502 (end=779): sub
[BaselineOp] Analyzing op @ 503 (end=779): getlocal
[BaselineOp] Analyzing op @ 506 (end=779): int8
[BaselineOp] Analyzing op @ 508 (end=779): mul
[BaselineOp] Analyzing op @ 509 (end=779): ursh
[BaselineOp] Analyzing op @ 510 (end=779): uint16
[BaselineOp] Analyzing op @ 513 (end=779): bitand
[BaselineOp] Analyzing op @ 514 (end=779): setelem
[BaselineOp] Analyzing op @ 515 (end=779): pop
[BaselineOp] Analyzing op @ 516 (end=779): getlocal
[BaselineOp] Analyzing op @ 519 (end=779): pos
[BaselineOp] Analyzing op @ 520 (end=779): dup
[BaselineOp] Analyzing op @ 521 (end=779): one
[BaselineOp] Analyzing op @ 522 (end=779): add
[BaselineOp] Analyzing op @ 523 (end=779): setlocal
[BaselineOp] Analyzing op @ 526 (end=779): pop
[BaselineOp] Analyzing op @ 527 (end=779): pop
[BaselineOp] Analyzing op @ 528 (end=779): loopentry
[BaselineOp] Analyzing op @ 530 (end=779): getlocal
[BaselineOp] Analyzing op @ 533 (end=779): int8
[BaselineOp] Analyzing op @ 535 (end=779): lt
[BaselineOp] Analyzing op @ 536 (end=779): ifne
[BaselineOp] Analyzing op @ 541 (end=779): callgname
[BaselineOp] Analyzing op @ 546 (end=779): undefined
[BaselineOp] Analyzing op @ 547 (end=779): notearg
[BaselineOp] Analyzing op @ 548 (end=779): getlocal
[BaselineOp] Analyzing op @ 551 (end=779): notearg
[BaselineOp] Analyzing op @ 552 (end=779): getlocal
[BaselineOp] Analyzing op @ 555 (end=779): notearg
[BaselineOp] Analyzing op @ 556 (end=779): call
[BaselineOp] Analyzing op @ 559 (end=779): setlocal
[BaselineOp] Analyzing op @ 562 (end=779): pop
[BaselineOp] Analyzing op @ 563 (end=779): getarg
[BaselineOp] Analyzing op @ 566 (end=779): getlocal
[BaselineOp] Analyzing op @ 569 (end=779): callgname
[BaselineOp] Analyzing op @ 574 (end=779): undefined
[BaselineOp] Analyzing op @ 575 (end=779): notearg
[BaselineOp] Analyzing op @ 576 (end=779): getarg
[BaselineOp] Analyzing op @ 579 (end=779): getlocal
[BaselineOp] Analyzing op @ 582 (end=779): getelem
[BaselineOp] Analyzing op @ 583 (end=779): notearg
[BaselineOp] Analyzing op @ 584 (end=779): call
[BaselineOp] Analyzing op @ 587 (end=779): setelem
[BaselineOp] Analyzing op @ 588 (end=779): pop
[BaselineOp] Analyzing op @ 589 (end=779): string
[BaselineOp] Analyzing op @ 594 (end=779): setlocal
[BaselineOp] Analyzing op @ 597 (end=779): pop
[BaselineOp] Analyzing op @ 598 (end=779): zero
[BaselineOp] Analyzing op @ 599 (end=779): setlocal
[BaselineOp] Analyzing op @ 602 (end=779): pop
[BaselineOp] Analyzing op @ 603 (end=779): goto
[BaselineOp] Analyzing op @ 608 (end=779): loophead
[BaselineOp] Analyzing op @ 609 (end=779): getarg
[BaselineOp] Analyzing op @ 612 (end=779): getlocal
[BaselineOp] Analyzing op @ 615 (end=779): getelem
[BaselineOp] Analyzing op @ 616 (end=779): dup
[BaselineOp] Analyzing op @ 617 (end=779): callprop
[BaselineOp] Analyzing op @ 622 (end=779): swap
[BaselineOp] Analyzing op @ 623 (end=779): notearg
[BaselineOp] Analyzing op @ 624 (end=779): getlocal
[BaselineOp] Analyzing op @ 627 (end=779): notearg
[BaselineOp] Analyzing op @ 628 (end=779): call
[BaselineOp] Analyzing op @ 631 (end=779): setlocal
[BaselineOp] Analyzing op @ 634 (end=779): pop
[BaselineOp] Analyzing op @ 635 (end=779): getlocal
[BaselineOp] Analyzing op @ 638 (end=779): getlocal
[BaselineOp] Analyzing op @ 641 (end=779): getlocal
[BaselineOp] Analyzing op @ 644 (end=779): getelem
[BaselineOp] Analyzing op @ 645 (end=779): bitxor
[BaselineOp] Analyzing op @ 646 (end=779): setlocal
[BaselineOp] Analyzing op @ 649 (end=779): pop
[BaselineOp] Analyzing op @ 650 (end=779): getlocal
[BaselineOp] Analyzing op @ 653 (end=779): getgname
[BaselineOp] Analyzing op @ 658 (end=779): dup
[BaselineOp] Analyzing op @ 659 (end=779): callprop
[BaselineOp] Analyzing op @ 664 (end=779): swap
[BaselineOp] Analyzing op @ 665 (end=779): notearg
[BaselineOp] Analyzing op @ 666 (end=779): getlocal
[BaselineOp] Analyzing op @ 669 (end=779): notearg
[BaselineOp] Analyzing op @ 670 (end=779): call
[BaselineOp] Analyzing op @ 673 (end=779): add
[BaselineOp] Analyzing op @ 674 (end=779): setlocal
[BaselineOp] Analyzing op @ 677 (end=779): pop
[BaselineOp] Analyzing op @ 678 (end=779): getlocal
[BaselineOp] Analyzing op @ 681 (end=779): pos
[BaselineOp] Analyzing op @ 682 (end=779): dup
[BaselineOp] Analyzing op @ 683 (end=779): one
[BaselineOp] Analyzing op @ 684 (end=779): add
[BaselineOp] Analyzing op @ 685 (end=779): setlocal
[BaselineOp] Analyzing op @ 688 (end=779): pop
[BaselineOp] Analyzing op @ 689 (end=779): pop
[BaselineOp] Analyzing op @ 690 (end=779): loopentry
[BaselineOp] Analyzing op @ 692 (end=779): getlocal
[BaselineOp] Analyzing op @ 695 (end=779): getarg
[BaselineOp] Analyzing op @ 698 (end=779): getlocal
[BaselineOp] Analyzing op @ 701 (end=779): getelem
[BaselineOp] Analyzing op @ 702 (end=779): length
[BaselineOp] Analyzing op @ 707 (end=779): lt
[BaselineOp] Analyzing op @ 708 (end=779): ifne
[BaselineOp] Analyzing op @ 609 (end=779): getarg
[BaselineOp] Analyzing op @ 612 (end=779): getlocal
[BaselineOp] Analyzing op @ 615 (end=779): getelem
[BaselineOp] Analyzing op @ 616 (end=779): dup
[BaselineOp] Analyzing op @ 617 (end=779): callprop
[BaselineOp] Analyzing op @ 622 (end=779): swap
[BaselineOp] Analyzing op @ 623 (end=779): notearg
[BaselineOp] Analyzing op @ 624 (end=779): getlocal
[BaselineOp] Analyzing op @ 627 (end=779): notearg
[BaselineOp] Analyzing op @ 628 (end=779): call
[BaselineOp] Analyzing op @ 631 (end=779): setlocal
[BaselineOp] Analyzing op @ 634 (end=779): pop
[BaselineOp] Analyzing op @ 635 (end=779): getlocal
[BaselineOp] Analyzing op @ 638 (end=779): getlocal
[BaselineOp] Analyzing op @ 641 (end=779): getlocal
[BaselineOp] Analyzing op @ 644 (end=779): getelem
[BaselineOp] Analyzing op @ 645 (end=779): bitxor
[BaselineOp] Analyzing op @ 646 (end=779): setlocal
[BaselineOp] Analyzing op @ 649 (end=779): pop
[BaselineOp] Analyzing op @ 650 (end=779): getlocal
[BaselineOp] Analyzing op @ 653 (end=779): getgname
[BaselineOp] Analyzing op @ 658 (end=779): dup
[BaselineOp] Analyzing op @ 659 (end=779): callprop
[BaselineOp] Analyzing op @ 664 (end=779): swap
[BaselineOp] Analyzing op @ 665 (end=779): notearg
[BaselineOp] Analyzing op @ 666 (end=779): getlocal
[BaselineOp] Analyzing op @ 669 (end=779): notearg
[BaselineOp] Analyzing op @ 670 (end=779): call
[BaselineOp] Analyzing op @ 673 (end=779): add
[BaselineOp] Analyzing op @ 674 (end=779): setlocal
[BaselineOp] Analyzing op @ 677 (end=779): pop
[BaselineOp] Analyzing op @ 678 (end=779): getlocal
[BaselineOp] Analyzing op @ 681 (end=779): pos
[BaselineOp] Analyzing op @ 682 (end=779): dup
[BaselineOp] Analyzing op @ 683 (end=779): one
[BaselineOp] Analyzing op @ 684 (end=779): add
[BaselineOp] Analyzing op @ 685 (end=779): setlocal
[BaselineOp] Analyzing op @ 688 (end=779): pop
[BaselineOp] Analyzing op @ 689 (end=779): pop
[BaselineOp] Analyzing op @ 690 (end=779): loopentry
[BaselineOp] Analyzing op @ 692 (end=779): getlocal
[BaselineOp] Analyzing op @ 695 (end=779): getarg
[BaselineOp] Analyzing op @ 698 (end=779): getlocal
[BaselineOp] Analyzing op @ 701 (end=779): getelem
[BaselineOp] Analyzing op @ 702 (end=779): length
[BaselineOp] Analyzing op @ 707 (end=779): lt
[BaselineOp] Analyzing op @ 708 (end=779): ifne
[BaselineOp] Analyzing op @ 713 (end=779): getlocal
[BaselineOp] Analyzing op @ 716 (end=779): getlocal
[BaselineOp] Analyzing op @ 719 (end=779): one
[BaselineOp] Analyzing op @ 720 (end=779): sub
[BaselineOp] Analyzing op @ 721 (end=779): getlocal
[BaselineOp] Analyzing op @ 724 (end=779): setelem
[BaselineOp] Analyzing op @ 725 (end=779): pop
[BaselineOp] Analyzing op @ 726 (end=779): getlocal
[BaselineOp] Analyzing op @ 729 (end=779): pos
[BaselineOp] Analyzing op @ 730 (end=779): dup
[BaselineOp] Analyzing op @ 731 (end=779): one
[BaselineOp] Analyzing op @ 732 (end=779): add
[BaselineOp] Analyzing op @ 733 (end=779): setlocal
[BaselineOp] Analyzing op @ 736 (end=779): pop
[BaselineOp] Analyzing op @ 737 (end=779): pop
[BaselineOp] Analyzing op @ 738 (end=779): loopentry
[BaselineOp] Analyzing op @ 740 (end=779): getlocal
[BaselineOp] Analyzing op @ 743 (end=779): getarg
[BaselineOp] Analyzing op @ 746 (end=779): length
[BaselineOp] Analyzing op @ 751 (end=779): lt
[BaselineOp] Analyzing op @ 752 (end=779): ifne
[BaselineOp] Analyzing op @ 757 (end=779): getlocal
[BaselineOp] Analyzing op @ 760 (end=779): dup
[BaselineOp] Analyzing op @ 761 (end=779): callprop
[BaselineOp] Analyzing op @ 766 (end=779): swap
[BaselineOp] Analyzing op @ 767 (end=779): notearg
[BaselineOp] Analyzing op @ 768 (end=779): string
[BaselineOp] Analyzing op @ 773 (end=779): notearg
[BaselineOp] Analyzing op @ 774 (end=779): call
[BaselineOp] Analyzing op @ 777 (end=779): return
[BaselineOp] Analyzing op @ 778 (end=779): stop
[BaselineScripts] Baseline compiling script crypto-aes.js:230 (0x7fda8d051a88)
[BaselineOp] Compiling op @ 0: getarg
[BaselineOp] Compiling op @ 3: uint16
[BaselineOp] Compiling op @ 6: eq
[BaselineOp] Compiling op @ 7: or
[BaselineOp] Compiling op @ 12: pop
[BaselineOp] [block counter] Emitting a block counter for op @ 12: pop (lineno: 231 column: 6)
[BaselineOp] Compiling op @ 13: getarg
[BaselineOp] Compiling op @ 16: uint16
[BaselineOp] Compiling op @ 19: eq
[BaselineOp] Compiling op @ 20: or
[BaselineOp] Compiling op @ 25: pop
[BaselineOp] [block counter] Emitting a block counter for op @ 25: pop (lineno: 231 column: 6)
[BaselineOp] Compiling op @ 26: getarg
[BaselineOp] Compiling op @ 29: uint16
[BaselineOp] Compiling op @ 32: eq
[BaselineOp] Compiling op @ 33: not
[BaselineOp] [block counter] Emitting a block counter for op @ 33: not (lineno: 231 column: 6)
[BaselineOp] Compiling op @ 34: ifeq
[BaselineOp] Compiling op @ 39: string
[BaselineOp] [block counter] Emitting a block counter for op @ 39: string (lineno: 231 column: 0)
[BaselineOp] Compiling op @ 44: return
[BaselineOp] Compiling op @ 45: getarg
[BaselineOp] [block counter] Emitting a block counter for op @ 45: getarg (lineno: 233 column: 0)
[BaselineOp] Compiling op @ 48: int8
[BaselineOp] Compiling op @ 50: div
[BaselineOp] Compiling op @ 51: setlocal
[BaselineOp] Compiling op @ 54: pop
[BaselineOp] Compiling op @ 55: getgname
[BaselineOp] Compiling op @ 60: undefined
[BaselineOp] Compiling op @ 61: notearg
[BaselineOp] Compiling op @ 62: getlocal
[BaselineOp] Compiling op @ 65: notearg
[BaselineOp] Compiling op @ 66: new
[BaselineOp] Compiling op @ 69: setlocal
[BaselineOp] Compiling op @ 72: pop
[BaselineOp] Compiling op @ 73: zero
[BaselineOp] Compiling op @ 74: setlocal
[BaselineOp] Compiling op @ 77: pop
[BaselineOp] Compiling op @ 78: goto
[BaselineOp] Compiling op @ 83: loophead
[BaselineOp] [block counter] Emitting a block counter for op @ 83: loophead (lineno: 235 column: 31)
[BaselineOp] Compiling op @ 84: getlocal
[BaselineOp] [block counter] Emitting a block counter for op @ 84: getlocal (lineno: 235 column: 31)
[BaselineOp] Compiling op @ 87: getlocal
[BaselineOp] Compiling op @ 90: getarg
[BaselineOp] Compiling op @ 93: dup
[BaselineOp] Compiling op @ 94: callprop
[BaselineOp] Compiling op @ 99: swap
[BaselineOp] Compiling op @ 100: notearg
[BaselineOp] Compiling op @ 101: getlocal
[BaselineOp] Compiling op @ 104: notearg
[BaselineOp] Compiling op @ 105: call
[BaselineOp] Compiling op @ 108: uint16
[BaselineOp] Compiling op @ 111: bitand
[BaselineOp] Compiling op @ 112: setelem
[BaselineOp] Compiling op @ 113: pop
[BaselineOp] Compiling op @ 114: getlocal
[BaselineOp] Compiling op @ 117: pos
[BaselineOp] Compiling op @ 118: dup
[BaselineOp] Compiling op @ 119: one
[BaselineOp] Compiling op @ 120: add
[BaselineOp] Compiling op @ 121: setlocal
[BaselineOp] Compiling op @ 124: pop
[BaselineOp] Compiling op @ 125: pop
[BaselineOp] Compiling op @ 126: loopentry
[BaselineOp] [block counter] Emitting a block counter for op @ 126: loopentry (lineno: 235 column: 16)
[BaselineOp] Compiling op @ 128: getlocal
[BaselineOp] Compiling op @ 131: getlocal
[BaselineOp] Compiling op @ 134: lt
[BaselineOp] Compiling op @ 135: ifne
[BaselineOp] Compiling op @ 140: callgname
[BaselineOp] [block counter] Emitting a block counter for op @ 140: callgname (lineno: 236 column: 0)
[BaselineOp] Compiling op @ 145: undefined
[BaselineOp] Compiling op @ 146: notearg
[BaselineOp] Compiling op @ 147: getlocal
[BaselineOp] Compiling op @ 150: notearg
[BaselineOp] Compiling op @ 151: call
[BaselineOp] Compiling op @ 154: setlocal
[BaselineOp] Compiling op @ 157: pop
[BaselineOp] Compiling op @ 158: callgname
[BaselineOp] Compiling op @ 163: undefined
[BaselineOp] Compiling op @ 164: notearg
[BaselineOp] Compiling op @ 165: getlocal
[BaselineOp] Compiling op @ 168: notearg
[BaselineOp] Compiling op @ 169: getlocal
[BaselineOp] Compiling op @ 172: notearg
[BaselineOp] Compiling op @ 173: call
[BaselineOp] Compiling op @ 176: setlocal
[BaselineOp] Compiling op @ 179: pop
[BaselineOp] Compiling op @ 180: getlocal
[BaselineOp] Compiling op @ 183: dup
[BaselineOp] Compiling op @ 184: callprop
[BaselineOp] Compiling op @ 189: swap
[BaselineOp] Compiling op @ 190: notearg
[BaselineOp] Compiling op @ 191: getlocal
[BaselineOp] Compiling op @ 194: dup
[BaselineOp] Compiling op @ 195: callprop
[BaselineOp] Compiling op @ 200: swap
[BaselineOp] Compiling op @ 201: notearg
[BaselineOp] Compiling op @ 202: zero
[BaselineOp] Compiling op @ 203: notearg
[BaselineOp] Compiling op @ 204: getlocal
[BaselineOp] Compiling op @ 207: int8
[BaselineOp] Compiling op @ 209: sub
[BaselineOp] Compiling op @ 210: notearg
[BaselineOp] Compiling op @ 211: call
[BaselineOp] Compiling op @ 214: notearg
[BaselineOp] Compiling op @ 215: call
[BaselineOp] Compiling op @ 218: setlocal
[BaselineOp] Compiling op @ 221: pop
[BaselineOp] Compiling op @ 222: callgname
[BaselineOp] Compiling op @ 227: undefined
[BaselineOp] Compiling op @ 228: notearg
[BaselineOp] Compiling op @ 229: getlocal
[BaselineOp] Compiling op @ 232: notearg
[BaselineOp] Compiling op @ 233: call
[BaselineOp] Compiling op @ 236: setlocal
[BaselineOp] Compiling op @ 239: pop
[BaselineOp] Compiling op @ 240: getarg
[BaselineOp] Compiling op @ 243: dup
[BaselineOp] Compiling op @ 244: callprop
[BaselineOp] Compiling op @ 249: swap
[BaselineOp] Compiling op @ 250: notearg
[BaselineOp] Compiling op @ 251: string
[BaselineOp] Compiling op @ 256: notearg
[BaselineOp] Compiling op @ 257: call
[BaselineOp] Compiling op @ 260: setarg
[BaselineOp] Compiling op @ 263: pop
[BaselineOp] Compiling op @ 264: int8
[BaselineOp] Compiling op @ 266: setlocal
[BaselineOp] Compiling op @ 269: pop
[BaselineOp] Compiling op @ 270: getgname
[BaselineOp] Compiling op @ 275: undefined
[BaselineOp] Compiling op @ 276: notearg
[BaselineOp] Compiling op @ 277: getlocal
[BaselineOp] Compiling op @ 280: notearg
[BaselineOp] Compiling op @ 281: new
[BaselineOp] Compiling op @ 284: setlocal
[BaselineOp] Compiling op @ 287: pop
[BaselineOp] Compiling op @ 288: callgname
[BaselineOp] Compiling op @ 293: undefined
[BaselineOp] Compiling op @ 294: notearg
[BaselineOp] Compiling op @ 295: getarg
[BaselineOp] Compiling op @ 298: zero
[BaselineOp] Compiling op @ 299: getelem
[BaselineOp] Compiling op @ 300: notearg
[BaselineOp] Compiling op @ 301: call
[BaselineOp] Compiling op @ 304: setlocal
[BaselineOp] Compiling op @ 307: pop
[BaselineOp] Compiling op @ 308: zero
[BaselineOp] Compiling op @ 309: setlocal
[BaselineOp] Compiling op @ 312: pop
[BaselineOp] Compiling op @ 313: goto
[BaselineOp] Compiling op @ 318: loophead
[BaselineOp] [block counter] Emitting a block counter for op @ 318: loophead (lineno: 248 column: 26)
[BaselineOp] Compiling op @ 319: getlocal
[BaselineOp] [block counter] Emitting a block counter for op @ 319: getlocal (lineno: 248 column: 26)
[BaselineOp] Compiling op @ 322: getlocal
[BaselineOp] Compiling op @ 325: getlocal
[BaselineOp] Compiling op @ 328: dup
[BaselineOp] Compiling op @ 329: callprop
[BaselineOp] Compiling op @ 334: swap
[BaselineOp] Compiling op @ 335: notearg
[BaselineOp] Compiling op @ 336: getlocal
[BaselineOp] Compiling op @ 339: notearg
[BaselineOp] Compiling op @ 340: call
[BaselineOp] Compiling op @ 343: setelem
[BaselineOp] Compiling op @ 344: pop
[BaselineOp] Compiling op @ 345: getlocal
[BaselineOp] Compiling op @ 348: pos
[BaselineOp] Compiling op @ 349: dup
[BaselineOp] Compiling op @ 350: one
[BaselineOp] Compiling op @ 351: add
[BaselineOp] Compiling op @ 352: setlocal
[BaselineOp] Compiling op @ 355: pop
[BaselineOp] Compiling op @ 356: pop
[BaselineOp] Compiling op @ 357: loopentry
[BaselineOp] [block counter] Emitting a block counter for op @ 357: loopentry (lineno: 248 column: 16)
[BaselineOp] Compiling op @ 359: getlocal
[BaselineOp] Compiling op @ 362: int8
[BaselineOp] Compiling op @ 364: lt
[BaselineOp] Compiling op @ 365: ifne
[BaselineOp] Compiling op @ 370: getgname
[BaselineOp] [block counter] Emitting a block counter for op @ 370: getgname (lineno: 250 column: 0)
[BaselineOp] Compiling op @ 375: undefined
[BaselineOp] Compiling op @ 376: notearg
[BaselineOp] Compiling op @ 377: getarg
[BaselineOp] Compiling op @ 380: length
[BaselineOp] Compiling op @ 385: one
[BaselineOp] Compiling op @ 386: sub
[BaselineOp] Compiling op @ 387: notearg
[BaselineOp] Compiling op @ 388: new
[BaselineOp] Compiling op @ 391: setlocal
[BaselineOp] Compiling op @ 394: pop
[BaselineOp] Compiling op @ 395: one
[BaselineOp] Compiling op @ 396: setlocal
[BaselineOp] Compiling op @ 399: pop
[BaselineOp] Compiling op @ 400: goto
[BaselineOp] Compiling op @ 405: loophead
[BaselineOp] [block counter] Emitting a block counter for op @ 405: loophead (lineno: 254 column: 0)
[BaselineOp] Compiling op @ 406: zero
[BaselineOp] [block counter] Emitting a block counter for op @ 406: zero (lineno: 254 column: 9)
[BaselineOp] Compiling op @ 407: setlocal
[BaselineOp] Compiling op @ 410: pop
[BaselineOp] Compiling op @ 411: goto
[BaselineOp] Compiling op @ 416: loophead
[BaselineOp] [block counter] Emitting a block counter for op @ 416: loophead (lineno: 254 column: 28)
[BaselineOp] Compiling op @ 417: getlocal
[BaselineOp] [block counter] Emitting a block counter for op @ 417: getlocal (lineno: 254 column: 28)
[BaselineOp] Compiling op @ 420: int8
[BaselineOp] Compiling op @ 422: getlocal
[BaselineOp] Compiling op @ 425: sub
[BaselineOp] Compiling op @ 426: getlocal
[BaselineOp] Compiling op @ 429: one
[BaselineOp] Compiling op @ 430: sub
[BaselineOp] Compiling op @ 431: getlocal
[BaselineOp] Compiling op @ 434: int8
[BaselineOp] Compiling op @ 436: mul
[BaselineOp] Compiling op @ 437: ursh
[BaselineOp] Compiling op @ 438: uint16
[BaselineOp] Compiling op @ 441: bitand
[BaselineOp] Compiling op @ 442: setelem
[BaselineOp] Compiling op @ 443: pop
[BaselineOp] Compiling op @ 444: getlocal
[BaselineOp] Compiling op @ 447: pos
[BaselineOp] Compiling op @ 448: dup
[BaselineOp] Compiling op @ 449: one
[BaselineOp] Compiling op @ 450: add
[BaselineOp] Compiling op @ 451: setlocal
[BaselineOp] Compiling op @ 454: pop
[BaselineOp] Compiling op @ 455: pop
[BaselineOp] Compiling op @ 456: loopentry
[BaselineOp] [block counter] Emitting a block counter for op @ 456: loopentry (lineno: 254 column: 18)
[BaselineOp] Compiling op @ 458: getlocal
[BaselineOp] Compiling op @ 461: int8
[BaselineOp] Compiling op @ 463: lt
[BaselineOp] Compiling op @ 464: ifne
[BaselineOp] Compiling op @ 469: zero
[BaselineOp] [block counter] Emitting a block counter for op @ 469: zero (lineno: 255 column: 9)
[BaselineOp] Compiling op @ 470: setlocal
[BaselineOp] Compiling op @ 473: pop
[BaselineOp] Compiling op @ 474: goto
[BaselineOp] Compiling op @ 479: loophead
[BaselineOp] [block counter] Emitting a block counter for op @ 479: loophead (lineno: 255 column: 28)
[BaselineOp] Compiling op @ 480: getlocal
[BaselineOp] [block counter] Emitting a block counter for op @ 480: getlocal (lineno: 255 column: 28)
[BaselineOp] Compiling op @ 483: int8
[BaselineOp] Compiling op @ 485: getlocal
[BaselineOp] Compiling op @ 488: sub
[BaselineOp] Compiling op @ 489: int8
[BaselineOp] Compiling op @ 491: sub
[BaselineOp] Compiling op @ 492: getlocal
[BaselineOp] Compiling op @ 495: double
[BaselineOp] Compiling op @ 500: div
[BaselineOp] Compiling op @ 501: one
[BaselineOp] Compiling op @ 502: sub
[BaselineOp] Compiling op @ 503: getlocal
[BaselineOp] Compiling op @ 506: int8
[BaselineOp] Compiling op @ 508: mul
[BaselineOp] Compiling op @ 509: ursh
[BaselineOp] Compiling op @ 510: uint16
[BaselineOp] Compiling op @ 513: bitand
[BaselineOp] Compiling op @ 514: setelem
[BaselineOp] Compiling op @ 515: pop
[BaselineOp] Compiling op @ 516: getlocal
[BaselineOp] Compiling op @ 519: pos
[BaselineOp] Compiling op @ 520: dup
[BaselineOp] Compiling op @ 521: one
[BaselineOp] Compiling op @ 522: add
[BaselineOp] Compiling op @ 523: setlocal
[BaselineOp] Compiling op @ 526: pop
[BaselineOp] Compiling op @ 527: pop
[BaselineOp] Compiling op @ 528: loopentry
[BaselineOp] [block counter] Emitting a block counter for op @ 528: loopentry (lineno: 255 column: 18)
[BaselineOp] Compiling op @ 530: getlocal
[BaselineOp] Compiling op @ 533: int8
[BaselineOp] Compiling op @ 535: lt
[BaselineOp] Compiling op @ 536: ifne
[BaselineOp] Compiling op @ 541: callgname
[BaselineOp] [block counter] Emitting a block counter for op @ 541: callgname (lineno: 257 column: 0)
[BaselineOp] Compiling op @ 546: undefined
[BaselineOp] Compiling op @ 547: notearg
[BaselineOp] Compiling op @ 548: getlocal
[BaselineOp] Compiling op @ 551: notearg
[BaselineOp] Compiling op @ 552: getlocal
[BaselineOp] Compiling op @ 555: notearg
[BaselineOp] Compiling op @ 556: call
[BaselineOp] Compiling op @ 559: setlocal
[BaselineOp] Compiling op @ 562: pop
[BaselineOp] Compiling op @ 563: getarg
[BaselineOp] Compiling op @ 566: getlocal
[BaselineOp] Compiling op @ 569: callgname
[BaselineOp] Compiling op @ 574: undefined
[BaselineOp] Compiling op @ 575: notearg
[BaselineOp] Compiling op @ 576: getarg
[BaselineOp] Compiling op @ 579: getlocal
[BaselineOp] Compiling op @ 582: getelem
[BaselineOp] Compiling op @ 583: notearg
[BaselineOp] Compiling op @ 584: call
[BaselineOp] Compiling op @ 587: setelem
[BaselineOp] Compiling op @ 588: pop
[BaselineOp] Compiling op @ 589: string
[BaselineOp] Compiling op @ 594: setlocal
[BaselineOp] Compiling op @ 597: pop
[BaselineOp] Compiling op @ 598: zero
[BaselineOp] Compiling op @ 599: setlocal
[BaselineOp] Compiling op @ 602: pop
[BaselineOp] Compiling op @ 603: goto
[BaselineOp] Compiling op @ 608: loophead
[BaselineOp] [block counter] Emitting a block counter for op @ 608: loophead (lineno: 264 column: 0)
[BaselineOp] Compiling op @ 609: getarg
[BaselineOp] [block counter] Emitting a block counter for op @ 609: getarg (lineno: 264 column: 0)
[BaselineOp] Compiling op @ 612: getlocal
[BaselineOp] Compiling op @ 615: getelem
[BaselineOp] Compiling op @ 616: dup
[BaselineOp] Compiling op @ 617: callprop
[BaselineOp] Compiling op @ 622: swap
[BaselineOp] Compiling op @ 623: notearg
[BaselineOp] Compiling op @ 624: getlocal
[BaselineOp] Compiling op @ 627: notearg
[BaselineOp] Compiling op @ 628: call
[BaselineOp] Compiling op @ 631: setlocal
[BaselineOp] Compiling op @ 634: pop
[BaselineOp] Compiling op @ 635: getlocal
[BaselineOp] Compiling op @ 638: getlocal
[BaselineOp] Compiling op @ 641: getlocal
[BaselineOp] Compiling op @ 644: getelem
[BaselineOp] Compiling op @ 645: bitxor
[BaselineOp] Compiling op @ 646: setlocal
[BaselineOp] Compiling op @ 649: pop
[BaselineOp] Compiling op @ 650: getlocal
[BaselineOp] Compiling op @ 653: getgname
[BaselineOp] Compiling op @ 658: dup
[BaselineOp] Compiling op @ 659: callprop
[BaselineOp] Compiling op @ 664: swap
[BaselineOp] Compiling op @ 665: notearg
[BaselineOp] Compiling op @ 666: getlocal
[BaselineOp] Compiling op @ 669: notearg
[BaselineOp] Compiling op @ 670: call
[BaselineOp] Compiling op @ 673: add
[BaselineOp] Compiling op @ 674: setlocal
[BaselineOp] Compiling op @ 677: pop
[BaselineOp] Compiling op @ 678: getlocal
[BaselineOp] Compiling op @ 681: pos
[BaselineOp] Compiling op @ 682: dup
[BaselineOp] Compiling op @ 683: one
[BaselineOp] Compiling op @ 684: add
[BaselineOp] Compiling op @ 685: setlocal
[BaselineOp] Compiling op @ 688: pop
[BaselineOp] Compiling op @ 689: pop
[BaselineOp] Compiling op @ 690: loopentry
[BaselineOp] [block counter] Emitting a block counter for op @ 690: loopentry (lineno: 262 column: 18)
[BaselineOp] Compiling op @ 692: getlocal
[BaselineOp] Compiling op @ 695: getarg
[BaselineOp] Compiling op @ 698: getlocal
[BaselineOp] Compiling op @ 701: getelem
[BaselineOp] Compiling op @ 702: length
[BaselineOp] Compiling op @ 707: lt
[BaselineOp] Compiling op @ 708: ifne
[BaselineOp] Compiling op @ 713: getlocal
[BaselineOp] [block counter] Emitting a block counter for op @ 713: getlocal (lineno: 270 column: 4)
[BaselineOp] Compiling op @ 716: getlocal
[BaselineOp] Compiling op @ 719: one
[BaselineOp] Compiling op @ 720: sub
[BaselineOp] Compiling op @ 721: getlocal
[BaselineOp] Compiling op @ 724: setelem
[BaselineOp] Compiling op @ 725: pop
[BaselineOp] Compiling op @ 726: getlocal
[BaselineOp] Compiling op @ 729: pos
[BaselineOp] Compiling op @ 730: dup
[BaselineOp] Compiling op @ 731: one
[BaselineOp] Compiling op @ 732: add
[BaselineOp] Compiling op @ 733: setlocal
[BaselineOp] Compiling op @ 736: pop
[BaselineOp] Compiling op @ 737: pop
[BaselineOp] Compiling op @ 738: loopentry
[BaselineOp] [block counter] Emitting a block counter for op @ 738: loopentry (lineno: 252 column: 16)
[BaselineOp] Compiling op @ 740: getlocal
[BaselineOp] Compiling op @ 743: getarg
[BaselineOp] Compiling op @ 746: length
[BaselineOp] Compiling op @ 751: lt
[BaselineOp] Compiling op @ 752: ifne
[BaselineOp] Compiling op @ 757: getlocal
[BaselineOp] [block counter] Emitting a block counter for op @ 757: getlocal (lineno: 273 column: 2)
[BaselineOp] Compiling op @ 760: dup
[BaselineOp] Compiling op @ 761: callprop
[BaselineOp] Compiling op @ 766: swap
[BaselineOp] Compiling op @ 767: notearg
[BaselineOp] Compiling op @ 768: string
[BaselineOp] Compiling op @ 773: notearg
[BaselineOp] Compiling op @ 774: call
[BaselineOp] Compiling op @ 777: return
[BaselineOp] Compiling op @ 778: stop
[BaselineScripts] Created BaselineScript 0x1dd1310 (raw 0x7fda8ed3b888) for crypto-aes.js:230
[BaselineScripts] [block counter] 29 block counters were emitted for script crypto-aes.js:230 (0x1dd1310) (lineno: 273 column: 28)
[BaselineScripts] [block counter] Dump 26 block counters for 0x1d769c0
[BaselineScripts] [block counter] Op offset: 82, count: 24
[BaselineScripts] [block counter] Op offset: 83, count: 24
[BaselineScripts] [block counter] Op offset: 179, count: 27
[BaselineScripts] [block counter] Op offset: 193, count: 3
[BaselineScripts] [block counter] Op offset: 205, count: 186
[BaselineScripts] [block counter] Op offset: 206, count: 186
[BaselineScripts] [block counter] Op offset: 237, count: 744
[BaselineScripts] [block counter] Op offset: 238, count: 744
[BaselineScripts] [block counter] Op offset: 271, count: 930
[BaselineScripts] [block counter] Op offset: 284, count: 186
[BaselineScripts] [block counter] Op offset: 298, count: 26
[BaselineScripts] [block counter] Op offset: 337, count: 104
[BaselineScripts] [block counter] Op offset: 338, count: 104
[BaselineScripts] [block counter] Op offset: 378, count: 130
[BaselineScripts] [block counter] Op offset: 391, count: 26
[BaselineScripts] [block counter] Op offset: 396, count: 160
[BaselineScripts] [block counter] Op offset: 407, count: 160
[BaselineScripts] [block counter] Op offset: 418, count: 160
[BaselineScripts] [block counter] Op offset: 423, count: 22
[BaselineScripts] [block counter] Op offset: 441, count: 186
[BaselineScripts] [block counter] Op offset: 451, count: 744
[BaselineScripts] [block counter] Op offset: 452, count: 744
[BaselineScripts] [block counter] Op offset: 499, count: 930
[BaselineScripts] [block counter] Op offset: 512, count: 186
[BaselineScripts] [block counter] Op offset: 524, count: 190
[BaselineScripts] [block counter] Op offset: 544, count: 2
[BaselineOp] Analyzing op @ 0 (end=38): getgname
[BaselineOp] Analyzing op @ 5 (end=38): dup
[BaselineOp] Analyzing op @ 6 (end=38): callprop
[BaselineOp] Analyzing op @ 11 (end=38): swap
[BaselineOp] Analyzing op @ 12 (end=38): notearg
[BaselineOp] Analyzing op @ 13 (end=38): getarg
[BaselineOp] Analyzing op @ 16 (end=38): dup
[BaselineOp] Analyzing op @ 17 (end=38): callprop
[BaselineOp] Analyzing op @ 22 (end=38): swap
[BaselineOp] Analyzing op @ 23 (end=38): notearg
[BaselineOp] Analyzing op @ 24 (end=38): one
[BaselineOp] Analyzing op @ 25 (end=38): notearg
[BaselineOp] Analyzing op @ 26 (end=38): one
[BaselineOp] Analyzing op @ 27 (end=38): neg
[BaselineOp] Analyzing op @ 28 (end=38): notearg
[BaselineOp] Analyzing op @ 29 (end=38): call
[BaselineOp] Analyzing op @ 32 (end=38): notearg
[BaselineOp] Analyzing op @ 33 (end=38): call
[BaselineOp] Analyzing op @ 36 (end=38): return
[BaselineOp] Analyzing op @ 37 (end=38): stop
[BaselineScripts] Baseline compiling script crypto-aes.js:283 (0x7fda8d051c18)
[BaselineOp] Compiling op @ 0: getgname
[BaselineOp] Compiling op @ 5: dup
[BaselineOp] Compiling op @ 6: callprop
[BaselineOp] Compiling op @ 11: swap
[BaselineOp] Compiling op @ 12: notearg
[BaselineOp] Compiling op @ 13: getarg
[BaselineOp] Compiling op @ 16: dup
[BaselineOp] Compiling op @ 17: callprop
[BaselineOp] Compiling op @ 22: swap
[BaselineOp] Compiling op @ 23: notearg
[BaselineOp] Compiling op @ 24: one
[BaselineOp] Compiling op @ 25: notearg
[BaselineOp] Compiling op @ 26: one
[BaselineOp] Compiling op @ 27: neg
[BaselineOp] Compiling op @ 28: notearg
[BaselineOp] Compiling op @ 29: call
[BaselineOp] Compiling op @ 32: notearg
[BaselineOp] Compiling op @ 33: call
[BaselineOp] Compiling op @ 36: return
[BaselineOp] Compiling op @ 37: stop
[BaselineScripts] Created BaselineScript 0x1db95e0 (raw 0x7fda8ed3e8d0) for crypto-aes.js:283
[BaselineScripts] [block counter] 0 block counters were emitted for script crypto-aes.js:283 (0x1db95e0) (lineno: 283 column: 92)
[BaselineOp] Analyzing op @ 0 (end=28): getarg
[BaselineOp] Analyzing op @ 3 (end=28): dup
[BaselineOp] Analyzing op @ 4 (end=28): callprop
[BaselineOp] Analyzing op @ 9 (end=28): swap
[BaselineOp] Analyzing op @ 10 (end=28): notearg
[BaselineOp] Analyzing op @ 11 (end=28): regexp
[BaselineOp] Analyzing op @ 16 (end=28): notearg
[BaselineOp] Analyzing op @ 17 (end=28): lambda
[BaselineOp] Analyzing op @ 22 (end=28): notearg
[BaselineOp] Analyzing op @ 23 (end=28): call
[BaselineOp] Analyzing op @ 26 (end=28): return
[BaselineOp] Analyzing op @ 27 (end=28): stop
[BaselineScripts] Baseline compiling script crypto-aes.js:282 (0x7fda8d051b50)
[BaselineOp] Compiling op @ 0: getarg
[BaselineOp] Compiling op @ 3: dup
[BaselineOp] Compiling op @ 4: callprop
[BaselineOp] Compiling op @ 9: swap
[BaselineOp] Compiling op @ 10: notearg
[BaselineOp] Compiling op @ 11: regexp
[BaselineOp] Compiling op @ 16: notearg
[BaselineOp] Compiling op @ 17: lambda
[BaselineOp] Compiling op @ 22: notearg
[BaselineOp] Compiling op @ 23: call
[BaselineOp] Compiling op @ 26: return
[BaselineOp] Compiling op @ 27: stop
[BaselineScripts] Created BaselineScript 0x1dd2380 (raw 0x7fda8ed3eb70) for crypto-aes.js:282
[BaselineScripts] [block counter] 0 block counters were emitted for script crypto-aes.js:282 (0x1dd2380) (lineno: 283 column: 96)
[BaselineScripts] [block counter] Dump 12 block counters for 0x1d78b80
[BaselineScripts] [block counter] Op offset: 79, count: 695
[BaselineScripts] [block counter] Op offset: 80, count: 695
[BaselineScripts] [block counter] Op offset: 134, count: 739
[BaselineScripts] [block counter] Op offset: 151, count: 44
[BaselineScripts] [block counter] Op offset: 189, count: 572
[BaselineScripts] [block counter] Op offset: 190, count: 572
[BaselineScripts] [block counter] Op offset: 298, count: 616
[BaselineScripts] [block counter] Op offset: 312, count: 44
[BaselineScripts] [block counter] Op offset: 417, count: 704
[BaselineScripts] [block counter] Op offset: 418, count: 704
[BaselineScripts] [block counter] Op offset: 472, count: 748
[BaselineScripts] [block counter] Op offset: 489, count: 44
[BaselineScripts] [block counter] Dump 29 block counters for 0x1dd1310
[BaselineScripts] [block counter] Op offset: 12, count: 0
[BaselineScripts] [block counter] Op offset: 25, count: 0
[BaselineScripts] [block counter] Op offset: 33, count: 0
[BaselineScripts] [block counter] Op offset: 39, count: 0
[BaselineScripts] [block counter] Op offset: 45, count: 0
[BaselineScripts] [block counter] Op offset: 83, count: 23
[BaselineScripts] [block counter] Op offset: 84, count: 23
[BaselineScripts] [block counter] Op offset: 126, count: 24
[BaselineScripts] [block counter] Op offset: 140, count: 1
[BaselineScripts] [block counter] Op offset: 318, count: 8
[BaselineScripts] [block counter] Op offset: 319, count: 8
[BaselineScripts] [block counter] Op offset: 357, count: 9
[BaselineScripts] [block counter] Op offset: 370, count: 1
[BaselineScripts] [block counter] Op offset: 405, count: 38
[BaselineScripts] [block counter] Op offset: 406, count: 38
[BaselineScripts] [block counter] Op offset: 416, count: 152
[BaselineScripts] [block counter] Op offset: 417, count: 152
[BaselineScripts] [block counter] Op offset: 456, count: 190
[BaselineScripts] [block counter] Op offset: 469, count: 38
[BaselineScripts] [block counter] Op offset: 479, count: 152
[BaselineScripts] [block counter] Op offset: 480, count: 152
[BaselineScripts] [block counter] Op offset: 528, count: 190
[BaselineScripts] [block counter] Op offset: 541, count: 38
[BaselineScripts] [block counter] Op offset: 608, count: 608
[BaselineScripts] [block counter] Op offset: 609, count: 608
[BaselineScripts] [block counter] Op offset: 690, count: 646
[BaselineScripts] [block counter] Op offset: 713, count: 38
[BaselineScripts] [block counter] Op offset: 738, count: 39
[BaselineScripts] [block counter] Op offset: 757, count: 0
