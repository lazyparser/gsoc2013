[BaselineOp] Analyzing op @ 0 (end=131): zero
[BaselineOp] Analyzing op @ 1 (end=131): setlocal
[BaselineOp] Analyzing op @ 4 (end=131): pop
[BaselineOp] Analyzing op @ 5 (end=131): goto
[BaselineOp] Analyzing op @ 10 (end=131): loophead
[BaselineOp] Analyzing op @ 11 (end=131): zero
[BaselineOp] Analyzing op @ 12 (end=131): setlocal
[BaselineOp] Analyzing op @ 15 (end=131): pop
[BaselineOp] Analyzing op @ 16 (end=131): zero
[BaselineOp] Analyzing op @ 17 (end=131): setlocal
[BaselineOp] Analyzing op @ 20 (end=131): pop
[BaselineOp] Analyzing op @ 21 (end=131): goto
[BaselineOp] Analyzing op @ 26 (end=131): loophead
[BaselineOp] Analyzing op @ 27 (end=131): getlocal
[BaselineOp] Analyzing op @ 30 (end=131): callgname
[BaselineOp] Analyzing op @ 35 (end=131): undefined
[BaselineOp] Analyzing op @ 36 (end=131): notearg
[BaselineOp] Analyzing op @ 37 (end=131): getlocal
[BaselineOp] Analyzing op @ 40 (end=131): notearg
[BaselineOp] Analyzing op @ 41 (end=131): getlocal
[BaselineOp] Analyzing op @ 44 (end=131): notearg
[BaselineOp] Analyzing op @ 45 (end=131): call
[BaselineOp] Analyzing op @ 48 (end=131): getarg
[BaselineOp] Analyzing op @ 51 (end=131): getlocal
[BaselineOp] Analyzing op @ 54 (end=131): getelem
[BaselineOp] Analyzing op @ 55 (end=131): mul
[BaselineOp] Analyzing op @ 56 (end=131): add
[BaselineOp] Analyzing op @ 57 (end=131): setlocal
[BaselineOp] Analyzing op @ 60 (end=131): pop
[BaselineOp] Analyzing op @ 61 (end=131): getlocal
[BaselineOp] Analyzing op @ 64 (end=131): pos
[BaselineOp] Analyzing op @ 65 (end=131): one
[BaselineOp] Analyzing op @ 66 (end=131): add
[BaselineOp] Analyzing op @ 67 (end=131): setlocal
[BaselineOp] Analyzing op @ 70 (end=131): pop
[BaselineOp] Analyzing op @ 71 (end=131): loopentry
[BaselineOp] Analyzing op @ 73 (end=131): getlocal
[BaselineOp] Analyzing op @ 76 (end=131): getarg
[BaselineOp] Analyzing op @ 79 (end=131): length
[BaselineOp] Analyzing op @ 84 (end=131): lt
[BaselineOp] Analyzing op @ 85 (end=131): ifne
[BaselineOp] Analyzing op @ 90 (end=131): getarg
[BaselineOp] Analyzing op @ 93 (end=131): getlocal
[BaselineOp] Analyzing op @ 96 (end=131): getlocal
[BaselineOp] Analyzing op @ 99 (end=131): setelem
[BaselineOp] Analyzing op @ 100 (end=131): pop
[BaselineOp] Analyzing op @ 101 (end=131): getlocal
[BaselineOp] Analyzing op @ 104 (end=131): pos
[BaselineOp] Analyzing op @ 105 (end=131): one
[BaselineOp] Analyzing op @ 106 (end=131): add
[BaselineOp] Analyzing op @ 107 (end=131): setlocal
[BaselineOp] Analyzing op @ 110 (end=131): pop
[BaselineOp] Analyzing op @ 111 (end=131): loopentry
[BaselineOp] Analyzing op @ 113 (end=131): getlocal
[BaselineOp] Analyzing op @ 116 (end=131): getarg
[BaselineOp] Analyzing op @ 119 (end=131): length
[BaselineOp] Analyzing op @ 124 (end=131): lt
[BaselineOp] Analyzing op @ 125 (end=131): ifne
[BaselineOp] Analyzing op @ 11 (end=131): zero
[BaselineOp] Analyzing op @ 12 (end=131): setlocal
[BaselineOp] Analyzing op @ 15 (end=131): pop
[BaselineOp] Analyzing op @ 16 (end=131): zero
[BaselineOp] Analyzing op @ 17 (end=131): setlocal
[BaselineOp] Analyzing op @ 20 (end=131): pop
[BaselineOp] Analyzing op @ 21 (end=131): goto
[BaselineOp] Analyzing op @ 26 (end=131): loophead
[BaselineOp] Analyzing op @ 27 (end=131): getlocal
[BaselineOp] Analyzing op @ 30 (end=131): callgname
[BaselineOp] Analyzing op @ 35 (end=131): undefined
[BaselineOp] Analyzing op @ 36 (end=131): notearg
[BaselineOp] Analyzing op @ 37 (end=131): getlocal
[BaselineOp] Analyzing op @ 40 (end=131): notearg
[BaselineOp] Analyzing op @ 41 (end=131): getlocal
[BaselineOp] Analyzing op @ 44 (end=131): notearg
[BaselineOp] Analyzing op @ 45 (end=131): call
[BaselineOp] Analyzing op @ 48 (end=131): getarg
[BaselineOp] Analyzing op @ 51 (end=131): getlocal
[BaselineOp] Analyzing op @ 54 (end=131): getelem
[BaselineOp] Analyzing op @ 55 (end=131): mul
[BaselineOp] Analyzing op @ 56 (end=131): add
[BaselineOp] Analyzing op @ 57 (end=131): setlocal
[BaselineOp] Analyzing op @ 60 (end=131): pop
[BaselineOp] Analyzing op @ 61 (end=131): getlocal
[BaselineOp] Analyzing op @ 64 (end=131): pos
[BaselineOp] Analyzing op @ 65 (end=131): one
[BaselineOp] Analyzing op @ 66 (end=131): add
[BaselineOp] Analyzing op @ 67 (end=131): setlocal
[BaselineOp] Analyzing op @ 70 (end=131): pop
[BaselineOp] Analyzing op @ 71 (end=131): loopentry
[BaselineOp] Analyzing op @ 73 (end=131): getlocal
[BaselineOp] Analyzing op @ 76 (end=131): getarg
[BaselineOp] Analyzing op @ 79 (end=131): length
[BaselineOp] Analyzing op @ 84 (end=131): lt
[BaselineOp] Analyzing op @ 85 (end=131): ifne
[BaselineOp] Analyzing op @ 27 (end=131): getlocal
[BaselineOp] Analyzing op @ 30 (end=131): callgname
[BaselineOp] Analyzing op @ 35 (end=131): undefined
[BaselineOp] Analyzing op @ 36 (end=131): notearg
[BaselineOp] Analyzing op @ 37 (end=131): getlocal
[BaselineOp] Analyzing op @ 40 (end=131): notearg
[BaselineOp] Analyzing op @ 41 (end=131): getlocal
[BaselineOp] Analyzing op @ 44 (end=131): notearg
[BaselineOp] Analyzing op @ 45 (end=131): call
[BaselineOp] Analyzing op @ 48 (end=131): getarg
[BaselineOp] Analyzing op @ 51 (end=131): getlocal
[BaselineOp] Analyzing op @ 54 (end=131): getelem
[BaselineOp] Analyzing op @ 55 (end=131): mul
[BaselineOp] Analyzing op @ 56 (end=131): add
[BaselineOp] Analyzing op @ 57 (end=131): setlocal
[BaselineOp] Analyzing op @ 60 (end=131): pop
[BaselineOp] Analyzing op @ 61 (end=131): getlocal
[BaselineOp] Analyzing op @ 64 (end=131): pos
[BaselineOp] Analyzing op @ 65 (end=131): one
[BaselineOp] Analyzing op @ 66 (end=131): add
[BaselineOp] Analyzing op @ 67 (end=131): setlocal
[BaselineOp] Analyzing op @ 70 (end=131): pop
[BaselineOp] Analyzing op @ 71 (end=131): loopentry
[BaselineOp] Analyzing op @ 73 (end=131): getlocal
[BaselineOp] Analyzing op @ 76 (end=131): getarg
[BaselineOp] Analyzing op @ 79 (end=131): length
[BaselineOp] Analyzing op @ 84 (end=131): lt
[BaselineOp] Analyzing op @ 85 (end=131): ifne
[BaselineOp] Analyzing op @ 90 (end=131): getarg
[BaselineOp] Analyzing op @ 93 (end=131): getlocal
[BaselineOp] Analyzing op @ 96 (end=131): getlocal
[BaselineOp] Analyzing op @ 99 (end=131): setelem
[BaselineOp] Analyzing op @ 100 (end=131): pop
[BaselineOp] Analyzing op @ 101 (end=131): getlocal
[BaselineOp] Analyzing op @ 104 (end=131): pos
[BaselineOp] Analyzing op @ 105 (end=131): one
[BaselineOp] Analyzing op @ 106 (end=131): add
[BaselineOp] Analyzing op @ 107 (end=131): setlocal
[BaselineOp] Analyzing op @ 110 (end=131): pop
[BaselineOp] Analyzing op @ 111 (end=131): loopentry
[BaselineOp] Analyzing op @ 113 (end=131): getlocal
[BaselineOp] Analyzing op @ 116 (end=131): getarg
[BaselineOp] Analyzing op @ 119 (end=131): length
[BaselineOp] Analyzing op @ 124 (end=131): lt
[BaselineOp] Analyzing op @ 125 (end=131): ifne
[BaselineOp] Analyzing op @ 130 (end=131): stop
[BaselineScripts] Baseline compiling script math-spectral-norm.js:10 (0x7fe314251380)
[BaselineOp] Compiling op @ 0: zero
[BaselineOp] Compiling op @ 1: setlocal
[BaselineOp] Compiling op @ 4: pop
[BaselineOp] Compiling op @ 5: goto
[BaselineOp] Compiling op @ 10: loophead
[BaselineOp] [block counter] Emitting a block counter for op @ 10: loophead (lineno: 12 column: 0)
[BaselineOp] Compiling op @ 11: zero
[BaselineOp] [block counter] Emitting a block counter for op @ 11: zero (lineno: 12 column: 0)
[BaselineOp] Compiling op @ 12: setlocal
[BaselineOp] Compiling op @ 15: pop
[BaselineOp] Compiling op @ 16: zero
[BaselineOp] Compiling op @ 17: setlocal
[BaselineOp] Compiling op @ 20: pop
[BaselineOp] Compiling op @ 21: goto
[BaselineOp] Compiling op @ 26: loophead
[BaselineOp] [block counter] Emitting a block counter for op @ 26: loophead (lineno: 14 column: 6)
[BaselineOp] Compiling op @ 27: getlocal
[BaselineOp] [block counter] Emitting a block counter for op @ 27: getlocal (lineno: 14 column: 6)
[BaselineOp] Compiling op @ 30: callgname
[BaselineOp] Compiling op @ 35: undefined
[BaselineOp] Compiling op @ 36: notearg
[BaselineOp] Compiling op @ 37: getlocal
[BaselineOp] Compiling op @ 40: notearg
[BaselineOp] Compiling op @ 41: getlocal
[BaselineOp] Compiling op @ 44: notearg
[BaselineOp] Compiling op @ 45: call
[BaselineOp] Compiling op @ 48: getarg
[BaselineOp] Compiling op @ 51: getlocal
[BaselineOp] Compiling op @ 54: getelem
[BaselineOp] Compiling op @ 55: mul
[BaselineOp] Compiling op @ 56: add
[BaselineOp] Compiling op @ 57: setlocal
[BaselineOp] Compiling op @ 60: pop
[BaselineOp] Compiling op @ 61: getlocal
[BaselineOp] Compiling op @ 64: pos
[BaselineOp] Compiling op @ 65: one
[BaselineOp] Compiling op @ 66: add
[BaselineOp] Compiling op @ 67: setlocal
[BaselineOp] Compiling op @ 70: pop
[BaselineOp] Compiling op @ 71: loopentry
[BaselineOp] [block counter] Emitting a block counter for op @ 71: loopentry (lineno: 13 column: 18)
[BaselineOp] Compiling op @ 73: getlocal
[BaselineOp] Compiling op @ 76: getarg
[BaselineOp] Compiling op @ 79: length
[BaselineOp] Compiling op @ 84: lt
[BaselineOp] Compiling op @ 85: ifne
[BaselineOp] Compiling op @ 90: getarg
[BaselineOp] [block counter] Emitting a block counter for op @ 90: getarg (lineno: 15 column: 4)
[BaselineOp] Compiling op @ 93: getlocal
[BaselineOp] Compiling op @ 96: getlocal
[BaselineOp] Compiling op @ 99: setelem
[BaselineOp] Compiling op @ 100: pop
[BaselineOp] Compiling op @ 101: getlocal
[BaselineOp] Compiling op @ 104: pos
[BaselineOp] Compiling op @ 105: one
[BaselineOp] Compiling op @ 106: add
[BaselineOp] Compiling op @ 107: setlocal
[BaselineOp] Compiling op @ 110: pop
[BaselineOp] Compiling op @ 111: loopentry
[BaselineOp] [block counter] Emitting a block counter for op @ 111: loopentry (lineno: 11 column: 16)
[BaselineOp] Compiling op @ 113: getlocal
[BaselineOp] Compiling op @ 116: getarg
[BaselineOp] Compiling op @ 119: length
[BaselineOp] Compiling op @ 124: lt
[BaselineOp] Compiling op @ 125: ifne
[BaselineOp] Compiling op @ 130: stop
[BaselineOp] [block counter] Emitting a block counter for op @ 130: stop (lineno: 15 column: 13)
[BaselineScripts] Created BaselineScript 0x2d1c3a0 (raw 0x7fe315f5f3a8) for math-spectral-norm.js:10
[BaselineScripts] [block counter] 8 block counters were emitted for script math-spectral-norm.js:10 (0x2d1c3a0) (lineno: 15 column: 13)
[BaselineOp] Analyzing op @ 0 (end=30): one
[BaselineOp] Analyzing op @ 1 (end=30): getarg
[BaselineOp] Analyzing op @ 4 (end=30): getarg
[BaselineOp] Analyzing op @ 7 (end=30): add
[BaselineOp] Analyzing op @ 8 (end=30): getarg
[BaselineOp] Analyzing op @ 11 (end=30): getarg
[BaselineOp] Analyzing op @ 14 (end=30): add
[BaselineOp] Analyzing op @ 15 (end=30): one
[BaselineOp] Analyzing op @ 16 (end=30): add
[BaselineOp] Analyzing op @ 17 (end=30): mul
[BaselineOp] Analyzing op @ 18 (end=30): int8
[BaselineOp] Analyzing op @ 20 (end=30): div
[BaselineOp] Analyzing op @ 21 (end=30): getarg
[BaselineOp] Analyzing op @ 24 (end=30): add
[BaselineOp] Analyzing op @ 25 (end=30): one
[BaselineOp] Analyzing op @ 26 (end=30): add
[BaselineOp] Analyzing op @ 27 (end=30): div
[BaselineOp] Analyzing op @ 28 (end=30): return
[BaselineOp] Analyzing op @ 29 (end=30): stop
[BaselineScripts] Baseline compiling script math-spectral-norm.js:6 (0x7fe314251448)
[BaselineOp] Compiling op @ 0: one
[BaselineOp] Compiling op @ 1: getarg
[BaselineOp] Compiling op @ 4: getarg
[BaselineOp] Compiling op @ 7: add
[BaselineOp] Compiling op @ 8: getarg
[BaselineOp] Compiling op @ 11: getarg
[BaselineOp] Compiling op @ 14: add
[BaselineOp] Compiling op @ 15: one
[BaselineOp] Compiling op @ 16: add
[BaselineOp] Compiling op @ 17: mul
[BaselineOp] Compiling op @ 18: int8
[BaselineOp] Compiling op @ 20: div
[BaselineOp] Compiling op @ 21: getarg
[BaselineOp] Compiling op @ 24: add
[BaselineOp] Compiling op @ 25: one
[BaselineOp] Compiling op @ 26: add
[BaselineOp] Compiling op @ 27: div
[BaselineOp] Compiling op @ 28: return
[BaselineOp] Compiling op @ 29: stop
[BaselineScripts] Created BaselineScript 0x2d1e860 (raw 0x7fe315f5fc20) for math-spectral-norm.js:6
[BaselineScripts] [block counter] 0 block counters were emitted for script math-spectral-norm.js:6 (0x2d1e860) (lineno: 7 column: 33)
[BaselineOp] Analyzing op @ 0 (end=131): zero
[BaselineOp] Analyzing op @ 1 (end=131): setlocal
[BaselineOp] Analyzing op @ 4 (end=131): pop
[BaselineOp] Analyzing op @ 5 (end=131): goto
[BaselineOp] Analyzing op @ 10 (end=131): loophead
[BaselineOp] Analyzing op @ 11 (end=131): zero
[BaselineOp] Analyzing op @ 12 (end=131): setlocal
[BaselineOp] Analyzing op @ 15 (end=131): pop
[BaselineOp] Analyzing op @ 16 (end=131): zero
[BaselineOp] Analyzing op @ 17 (end=131): setlocal
[BaselineOp] Analyzing op @ 20 (end=131): pop
[BaselineOp] Analyzing op @ 21 (end=131): goto
[BaselineOp] Analyzing op @ 26 (end=131): loophead
[BaselineOp] Analyzing op @ 27 (end=131): getlocal
[BaselineOp] Analyzing op @ 30 (end=131): callgname
[BaselineOp] Analyzing op @ 35 (end=131): undefined
[BaselineOp] Analyzing op @ 36 (end=131): notearg
[BaselineOp] Analyzing op @ 37 (end=131): getlocal
[BaselineOp] Analyzing op @ 40 (end=131): notearg
[BaselineOp] Analyzing op @ 41 (end=131): getlocal
[BaselineOp] Analyzing op @ 44 (end=131): notearg
[BaselineOp] Analyzing op @ 45 (end=131): call
[BaselineOp] Analyzing op @ 48 (end=131): getarg
[BaselineOp] Analyzing op @ 51 (end=131): getlocal
[BaselineOp] Analyzing op @ 54 (end=131): getelem
[BaselineOp] Analyzing op @ 55 (end=131): mul
[BaselineOp] Analyzing op @ 56 (end=131): add
[BaselineOp] Analyzing op @ 57 (end=131): setlocal
[BaselineOp] Analyzing op @ 60 (end=131): pop
[BaselineOp] Analyzing op @ 61 (end=131): getlocal
[BaselineOp] Analyzing op @ 64 (end=131): pos
[BaselineOp] Analyzing op @ 65 (end=131): one
[BaselineOp] Analyzing op @ 66 (end=131): add
[BaselineOp] Analyzing op @ 67 (end=131): setlocal
[BaselineOp] Analyzing op @ 70 (end=131): pop
[BaselineOp] Analyzing op @ 71 (end=131): loopentry
[BaselineOp] Analyzing op @ 73 (end=131): getlocal
[BaselineOp] Analyzing op @ 76 (end=131): getarg
[BaselineOp] Analyzing op @ 79 (end=131): length
[BaselineOp] Analyzing op @ 84 (end=131): lt
[BaselineOp] Analyzing op @ 85 (end=131): ifne
[BaselineOp] Analyzing op @ 90 (end=131): getarg
[BaselineOp] Analyzing op @ 93 (end=131): getlocal
[BaselineOp] Analyzing op @ 96 (end=131): getlocal
[BaselineOp] Analyzing op @ 99 (end=131): setelem
[BaselineOp] Analyzing op @ 100 (end=131): pop
[BaselineOp] Analyzing op @ 101 (end=131): getlocal
[BaselineOp] Analyzing op @ 104 (end=131): pos
[BaselineOp] Analyzing op @ 105 (end=131): one
[BaselineOp] Analyzing op @ 106 (end=131): add
[BaselineOp] Analyzing op @ 107 (end=131): setlocal
[BaselineOp] Analyzing op @ 110 (end=131): pop
[BaselineOp] Analyzing op @ 111 (end=131): loopentry
[BaselineOp] Analyzing op @ 113 (end=131): getlocal
[BaselineOp] Analyzing op @ 116 (end=131): getarg
[BaselineOp] Analyzing op @ 119 (end=131): length
[BaselineOp] Analyzing op @ 124 (end=131): lt
[BaselineOp] Analyzing op @ 125 (end=131): ifne
[BaselineOp] Analyzing op @ 11 (end=131): zero
[BaselineOp] Analyzing op @ 12 (end=131): setlocal
[BaselineOp] Analyzing op @ 15 (end=131): pop
[BaselineOp] Analyzing op @ 16 (end=131): zero
[BaselineOp] Analyzing op @ 17 (end=131): setlocal
[BaselineOp] Analyzing op @ 20 (end=131): pop
[BaselineOp] Analyzing op @ 21 (end=131): goto
[BaselineOp] Analyzing op @ 26 (end=131): loophead
[BaselineOp] Analyzing op @ 27 (end=131): getlocal
[BaselineOp] Analyzing op @ 30 (end=131): callgname
[BaselineOp] Analyzing op @ 35 (end=131): undefined
[BaselineOp] Analyzing op @ 36 (end=131): notearg
[BaselineOp] Analyzing op @ 37 (end=131): getlocal
[BaselineOp] Analyzing op @ 40 (end=131): notearg
[BaselineOp] Analyzing op @ 41 (end=131): getlocal
[BaselineOp] Analyzing op @ 44 (end=131): notearg
[BaselineOp] Analyzing op @ 45 (end=131): call
[BaselineOp] Analyzing op @ 48 (end=131): getarg
[BaselineOp] Analyzing op @ 51 (end=131): getlocal
[BaselineOp] Analyzing op @ 54 (end=131): getelem
[BaselineOp] Analyzing op @ 55 (end=131): mul
[BaselineOp] Analyzing op @ 56 (end=131): add
[BaselineOp] Analyzing op @ 57 (end=131): setlocal
[BaselineOp] Analyzing op @ 60 (end=131): pop
[BaselineOp] Analyzing op @ 61 (end=131): getlocal
[BaselineOp] Analyzing op @ 64 (end=131): pos
[BaselineOp] Analyzing op @ 65 (end=131): one
[BaselineOp] Analyzing op @ 66 (end=131): add
[BaselineOp] Analyzing op @ 67 (end=131): setlocal
[BaselineOp] Analyzing op @ 70 (end=131): pop
[BaselineOp] Analyzing op @ 71 (end=131): loopentry
[BaselineOp] Analyzing op @ 73 (end=131): getlocal
[BaselineOp] Analyzing op @ 76 (end=131): getarg
[BaselineOp] Analyzing op @ 79 (end=131): length
[BaselineOp] Analyzing op @ 84 (end=131): lt
[BaselineOp] Analyzing op @ 85 (end=131): ifne
[BaselineOp] Analyzing op @ 27 (end=131): getlocal
[BaselineOp] Analyzing op @ 30 (end=131): callgname
[BaselineOp] Analyzing op @ 35 (end=131): undefined
[BaselineOp] Analyzing op @ 36 (end=131): notearg
[BaselineOp] Analyzing op @ 37 (end=131): getlocal
[BaselineOp] Analyzing op @ 40 (end=131): notearg
[BaselineOp] Analyzing op @ 41 (end=131): getlocal
[BaselineOp] Analyzing op @ 44 (end=131): notearg
[BaselineOp] Analyzing op @ 45 (end=131): call
[BaselineOp] Analyzing op @ 48 (end=131): getarg
[BaselineOp] Analyzing op @ 51 (end=131): getlocal
[BaselineOp] Analyzing op @ 54 (end=131): getelem
[BaselineOp] Analyzing op @ 55 (end=131): mul
[BaselineOp] Analyzing op @ 56 (end=131): add
[BaselineOp] Analyzing op @ 57 (end=131): setlocal
[BaselineOp] Analyzing op @ 60 (end=131): pop
[BaselineOp] Analyzing op @ 61 (end=131): getlocal
[BaselineOp] Analyzing op @ 64 (end=131): pos
[BaselineOp] Analyzing op @ 65 (end=131): one
[BaselineOp] Analyzing op @ 66 (end=131): add
[BaselineOp] Analyzing op @ 67 (end=131): setlocal
[BaselineOp] Analyzing op @ 70 (end=131): pop
[BaselineOp] Analyzing op @ 71 (end=131): loopentry
[BaselineOp] Analyzing op @ 73 (end=131): getlocal
[BaselineOp] Analyzing op @ 76 (end=131): getarg
[BaselineOp] Analyzing op @ 79 (end=131): length
[BaselineOp] Analyzing op @ 84 (end=131): lt
[BaselineOp] Analyzing op @ 85 (end=131): ifne
[BaselineOp] Analyzing op @ 90 (end=131): getarg
[BaselineOp] Analyzing op @ 93 (end=131): getlocal
[BaselineOp] Analyzing op @ 96 (end=131): getlocal
[BaselineOp] Analyzing op @ 99 (end=131): setelem
[BaselineOp] Analyzing op @ 100 (end=131): pop
[BaselineOp] Analyzing op @ 101 (end=131): getlocal
[BaselineOp] Analyzing op @ 104 (end=131): pos
[BaselineOp] Analyzing op @ 105 (end=131): one
[BaselineOp] Analyzing op @ 106 (end=131): add
[BaselineOp] Analyzing op @ 107 (end=131): setlocal
[BaselineOp] Analyzing op @ 110 (end=131): pop
[BaselineOp] Analyzing op @ 111 (end=131): loopentry
[BaselineOp] Analyzing op @ 113 (end=131): getlocal
[BaselineOp] Analyzing op @ 116 (end=131): getarg
[BaselineOp] Analyzing op @ 119 (end=131): length
[BaselineOp] Analyzing op @ 124 (end=131): lt
[BaselineOp] Analyzing op @ 125 (end=131): ifne
[BaselineOp] Analyzing op @ 130 (end=131): stop
[BaselineScripts] Baseline compiling script math-spectral-norm.js:19 (0x7fe314251510)
[BaselineOp] Compiling op @ 0: zero
[BaselineOp] Compiling op @ 1: setlocal
[BaselineOp] Compiling op @ 4: pop
[BaselineOp] Compiling op @ 5: goto
[BaselineOp] Compiling op @ 10: loophead
[BaselineOp] [block counter] Emitting a block counter for op @ 10: loophead (lineno: 21 column: 0)
[BaselineOp] Compiling op @ 11: zero
[BaselineOp] [block counter] Emitting a block counter for op @ 11: zero (lineno: 21 column: 0)
[BaselineOp] Compiling op @ 12: setlocal
[BaselineOp] Compiling op @ 15: pop
[BaselineOp] Compiling op @ 16: zero
[BaselineOp] Compiling op @ 17: setlocal
[BaselineOp] Compiling op @ 20: pop
[BaselineOp] Compiling op @ 21: goto
[BaselineOp] Compiling op @ 26: loophead
[BaselineOp] [block counter] Emitting a block counter for op @ 26: loophead (lineno: 23 column: 6)
[BaselineOp] Compiling op @ 27: getlocal
[BaselineOp] [block counter] Emitting a block counter for op @ 27: getlocal (lineno: 23 column: 6)
[BaselineOp] Compiling op @ 30: callgname
[BaselineOp] Compiling op @ 35: undefined
[BaselineOp] Compiling op @ 36: notearg
[BaselineOp] Compiling op @ 37: getlocal
[BaselineOp] Compiling op @ 40: notearg
[BaselineOp] Compiling op @ 41: getlocal
[BaselineOp] Compiling op @ 44: notearg
[BaselineOp] Compiling op @ 45: call
[BaselineOp] Compiling op @ 48: getarg
[BaselineOp] Compiling op @ 51: getlocal
[BaselineOp] Compiling op @ 54: getelem
[BaselineOp] Compiling op @ 55: mul
[BaselineOp] Compiling op @ 56: add
[BaselineOp] Compiling op @ 57: setlocal
[BaselineOp] Compiling op @ 60: pop
[BaselineOp] Compiling op @ 61: getlocal
[BaselineOp] Compiling op @ 64: pos
[BaselineOp] Compiling op @ 65: one
[BaselineOp] Compiling op @ 66: add
[BaselineOp] Compiling op @ 67: setlocal
[BaselineOp] Compiling op @ 70: pop
[BaselineOp] Compiling op @ 71: loopentry
[BaselineOp] [block counter] Emitting a block counter for op @ 71: loopentry (lineno: 22 column: 18)
[BaselineOp] Compiling op @ 73: getlocal
[BaselineOp] Compiling op @ 76: getarg
[BaselineOp] Compiling op @ 79: length
[BaselineOp] Compiling op @ 84: lt
[BaselineOp] Compiling op @ 85: ifne
[BaselineOp] Compiling op @ 90: getarg
[BaselineOp] [block counter] Emitting a block counter for op @ 90: getarg (lineno: 24 column: 4)
[BaselineOp] Compiling op @ 93: getlocal
[BaselineOp] Compiling op @ 96: getlocal
[BaselineOp] Compiling op @ 99: setelem
[BaselineOp] Compiling op @ 100: pop
[BaselineOp] Compiling op @ 101: getlocal
[BaselineOp] Compiling op @ 104: pos
[BaselineOp] Compiling op @ 105: one
[BaselineOp] Compiling op @ 106: add
[BaselineOp] Compiling op @ 107: setlocal
[BaselineOp] Compiling op @ 110: pop
[BaselineOp] Compiling op @ 111: loopentry
[BaselineOp] [block counter] Emitting a block counter for op @ 111: loopentry (lineno: 20 column: 16)
[BaselineOp] Compiling op @ 113: getlocal
[BaselineOp] Compiling op @ 116: getarg
[BaselineOp] Compiling op @ 119: length
[BaselineOp] Compiling op @ 124: lt
[BaselineOp] Compiling op @ 125: ifne
[BaselineOp] Compiling op @ 130: stop
[BaselineOp] [block counter] Emitting a block counter for op @ 130: stop (lineno: 24 column: 13)
[BaselineScripts] Created BaselineScript 0x2d1dc20 (raw 0x7fe315f60370) for math-spectral-norm.js:19
[BaselineScripts] [block counter] 8 block counters were emitted for script math-spectral-norm.js:19 (0x2d1dc20) (lineno: 24 column: 13)
[BaselineOp] Analyzing op @ 0 (end=288): getlocal
[BaselineOp] Analyzing op @ 3 (end=288): pop
[BaselineOp] Analyzing op @ 4 (end=288): newarray
[BaselineOp] Analyzing op @ 8 (end=288): endinit
[BaselineOp] Analyzing op @ 9 (end=288): setlocal
[BaselineOp] Analyzing op @ 12 (end=288): pop
[BaselineOp] Analyzing op @ 13 (end=288): newarray
[BaselineOp] Analyzing op @ 17 (end=288): endinit
[BaselineOp] Analyzing op @ 18 (end=288): setlocal
[BaselineOp] Analyzing op @ 21 (end=288): pop
[BaselineOp] Analyzing op @ 22 (end=288): newarray
[BaselineOp] Analyzing op @ 26 (end=288): endinit
[BaselineOp] Analyzing op @ 27 (end=288): setlocal
[BaselineOp] Analyzing op @ 30 (end=288): pop
[BaselineOp] Analyzing op @ 31 (end=288): zero
[BaselineOp] Analyzing op @ 32 (end=288): setlocal
[BaselineOp] Analyzing op @ 35 (end=288): pop
[BaselineOp] Analyzing op @ 36 (end=288): zero
[BaselineOp] Analyzing op @ 37 (end=288): setlocal
[BaselineOp] Analyzing op @ 40 (end=288): pop
[BaselineOp] Analyzing op @ 41 (end=288): zero
[BaselineOp] Analyzing op @ 42 (end=288): setlocal
[BaselineOp] Analyzing op @ 45 (end=288): pop
[BaselineOp] Analyzing op @ 46 (end=288): goto
[BaselineOp] Analyzing op @ 51 (end=288): loophead
[BaselineOp] Analyzing op @ 52 (end=288): getlocal
[BaselineOp] Analyzing op @ 55 (end=288): getlocal
[BaselineOp] Analyzing op @ 58 (end=288): one
[BaselineOp] Analyzing op @ 59 (end=288): setelem
[BaselineOp] Analyzing op @ 60 (end=288): pop
[BaselineOp] Analyzing op @ 61 (end=288): getlocal
[BaselineOp] Analyzing op @ 64 (end=288): getlocal
[BaselineOp] Analyzing op @ 67 (end=288): getlocal
[BaselineOp] Analyzing op @ 70 (end=288): getlocal
[BaselineOp] Analyzing op @ 73 (end=288): zero
[BaselineOp] Analyzing op @ 74 (end=288): setelem
[BaselineOp] Analyzing op @ 75 (end=288): setelem
[BaselineOp] Analyzing op @ 76 (end=288): pop
[BaselineOp] Analyzing op @ 77 (end=288): getlocal
[BaselineOp] Analyzing op @ 80 (end=288): pos
[BaselineOp] Analyzing op @ 81 (end=288): one
[BaselineOp] Analyzing op @ 82 (end=288): add
[BaselineOp] Analyzing op @ 83 (end=288): setlocal
[BaselineOp] Analyzing op @ 86 (end=288): pop
[BaselineOp] Analyzing op @ 87 (end=288): loopentry
[BaselineOp] Analyzing op @ 89 (end=288): getlocal
[BaselineOp] Analyzing op @ 92 (end=288): getarg
[BaselineOp] Analyzing op @ 95 (end=288): lt
[BaselineOp] Analyzing op @ 96 (end=288): ifne
[BaselineOp] Analyzing op @ 52 (end=288): getlocal
[BaselineOp] Analyzing op @ 55 (end=288): getlocal
[BaselineOp] Analyzing op @ 58 (end=288): one
[BaselineOp] Analyzing op @ 59 (end=288): setelem
[BaselineOp] Analyzing op @ 60 (end=288): pop
[BaselineOp] Analyzing op @ 61 (end=288): getlocal
[BaselineOp] Analyzing op @ 64 (end=288): getlocal
[BaselineOp] Analyzing op @ 67 (end=288): getlocal
[BaselineOp] Analyzing op @ 70 (end=288): getlocal
[BaselineOp] Analyzing op @ 73 (end=288): zero
[BaselineOp] Analyzing op @ 74 (end=288): setelem
[BaselineOp] Analyzing op @ 75 (end=288): setelem
[BaselineOp] Analyzing op @ 76 (end=288): pop
[BaselineOp] Analyzing op @ 77 (end=288): getlocal
[BaselineOp] Analyzing op @ 80 (end=288): pos
[BaselineOp] Analyzing op @ 81 (end=288): one
[BaselineOp] Analyzing op @ 82 (end=288): add
[BaselineOp] Analyzing op @ 83 (end=288): setlocal
[BaselineOp] Analyzing op @ 86 (end=288): pop
[BaselineOp] Analyzing op @ 87 (end=288): loopentry
[BaselineOp] Analyzing op @ 89 (end=288): getlocal
[BaselineOp] Analyzing op @ 92 (end=288): getarg
[BaselineOp] Analyzing op @ 95 (end=288): lt
[BaselineOp] Analyzing op @ 96 (end=288): ifne
[BaselineOp] Analyzing op @ 101 (end=288): zero
[BaselineOp] Analyzing op @ 102 (end=288): setlocal
[BaselineOp] Analyzing op @ 105 (end=288): pop
[BaselineOp] Analyzing op @ 106 (end=288): goto
[BaselineOp] Analyzing op @ 111 (end=288): loophead
[BaselineOp] Analyzing op @ 112 (end=288): callgname
[BaselineOp] Analyzing op @ 117 (end=288): undefined
[BaselineOp] Analyzing op @ 118 (end=288): notearg
[BaselineOp] Analyzing op @ 119 (end=288): getlocal
[BaselineOp] Analyzing op @ 122 (end=288): notearg
[BaselineOp] Analyzing op @ 123 (end=288): getlocal
[BaselineOp] Analyzing op @ 126 (end=288): notearg
[BaselineOp] Analyzing op @ 127 (end=288): getlocal
[BaselineOp] Analyzing op @ 130 (end=288): notearg
[BaselineOp] Analyzing op @ 131 (end=288): call
[BaselineOp] Analyzing op @ 134 (end=288): pop
[BaselineOp] Analyzing op @ 135 (end=288): callgname
[BaselineOp] Analyzing op @ 140 (end=288): undefined
[BaselineOp] Analyzing op @ 141 (end=288): notearg
[BaselineOp] Analyzing op @ 142 (end=288): getlocal
[BaselineOp] Analyzing op @ 145 (end=288): notearg
[BaselineOp] Analyzing op @ 146 (end=288): getlocal
[BaselineOp] Analyzing op @ 149 (end=288): notearg
[BaselineOp] Analyzing op @ 150 (end=288): getlocal
[BaselineOp] Analyzing op @ 153 (end=288): notearg
[BaselineOp] Analyzing op @ 154 (end=288): call
[BaselineOp] Analyzing op @ 157 (end=288): pop
[BaselineOp] Analyzing op @ 158 (end=288): getlocal
[BaselineOp] Analyzing op @ 161 (end=288): pos
[BaselineOp] Analyzing op @ 162 (end=288): one
[BaselineOp] Analyzing op @ 163 (end=288): add
[BaselineOp] Analyzing op @ 164 (end=288): setlocal
[BaselineOp] Analyzing op @ 167 (end=288): pop
[BaselineOp] Analyzing op @ 168 (end=288): loopentry
[BaselineOp] Analyzing op @ 170 (end=288): getlocal
[BaselineOp] Analyzing op @ 173 (end=288): int8
[BaselineOp] Analyzing op @ 175 (end=288): lt
[BaselineOp] Analyzing op @ 176 (end=288): ifne
[BaselineOp] Analyzing op @ 112 (end=288): callgname
[BaselineOp] Analyzing op @ 117 (end=288): undefined
[BaselineOp] Analyzing op @ 118 (end=288): notearg
[BaselineOp] Analyzing op @ 119 (end=288): getlocal
[BaselineOp] Analyzing op @ 122 (end=288): notearg
[BaselineOp] Analyzing op @ 123 (end=288): getlocal
[BaselineOp] Analyzing op @ 126 (end=288): notearg
[BaselineOp] Analyzing op @ 127 (end=288): getlocal
[BaselineOp] Analyzing op @ 130 (end=288): notearg
[BaselineOp] Analyzing op @ 131 (end=288): call
[BaselineOp] Analyzing op @ 134 (end=288): pop
[BaselineOp] Analyzing op @ 135 (end=288): callgname
[BaselineOp] Analyzing op @ 140 (end=288): undefined
[BaselineOp] Analyzing op @ 141 (end=288): notearg
[BaselineOp] Analyzing op @ 142 (end=288): getlocal
[BaselineOp] Analyzing op @ 145 (end=288): notearg
[BaselineOp] Analyzing op @ 146 (end=288): getlocal
[BaselineOp] Analyzing op @ 149 (end=288): notearg
[BaselineOp] Analyzing op @ 150 (end=288): getlocal
[BaselineOp] Analyzing op @ 153 (end=288): notearg
[BaselineOp] Analyzing op @ 154 (end=288): call
[BaselineOp] Analyzing op @ 157 (end=288): pop
[BaselineOp] Analyzing op @ 158 (end=288): getlocal
[BaselineOp] Analyzing op @ 161 (end=288): pos
[BaselineOp] Analyzing op @ 162 (end=288): one
[BaselineOp] Analyzing op @ 163 (end=288): add
[BaselineOp] Analyzing op @ 164 (end=288): setlocal
[BaselineOp] Analyzing op @ 167 (end=288): pop
[BaselineOp] Analyzing op @ 168 (end=288): loopentry
[BaselineOp] Analyzing op @ 170 (end=288): getlocal
[BaselineOp] Analyzing op @ 173 (end=288): int8
[BaselineOp] Analyzing op @ 175 (end=288): lt
[BaselineOp] Analyzing op @ 176 (end=288): ifne
[BaselineOp] Analyzing op @ 181 (end=288): zero
[BaselineOp] Analyzing op @ 182 (end=288): setlocal
[BaselineOp] Analyzing op @ 185 (end=288): pop
[BaselineOp] Analyzing op @ 186 (end=288): goto
[BaselineOp] Analyzing op @ 191 (end=288): loophead
[BaselineOp] Analyzing op @ 192 (end=288): getlocal
[BaselineOp] Analyzing op @ 195 (end=288): getlocal
[BaselineOp] Analyzing op @ 198 (end=288): getlocal
[BaselineOp] Analyzing op @ 201 (end=288): getelem
[BaselineOp] Analyzing op @ 202 (end=288): getlocal
[BaselineOp] Analyzing op @ 205 (end=288): getlocal
[BaselineOp] Analyzing op @ 208 (end=288): getelem
[BaselineOp] Analyzing op @ 209 (end=288): mul
[BaselineOp] Analyzing op @ 210 (end=288): add
[BaselineOp] Analyzing op @ 211 (end=288): setlocal
[BaselineOp] Analyzing op @ 214 (end=288): pop
[BaselineOp] Analyzing op @ 215 (end=288): getlocal
[BaselineOp] Analyzing op @ 218 (end=288): getlocal
[BaselineOp] Analyzing op @ 221 (end=288): getlocal
[BaselineOp] Analyzing op @ 224 (end=288): getelem
[BaselineOp] Analyzing op @ 225 (end=288): getlocal
[BaselineOp] Analyzing op @ 228 (end=288): getlocal
[BaselineOp] Analyzing op @ 231 (end=288): getelem
[BaselineOp] Analyzing op @ 232 (end=288): mul
[BaselineOp] Analyzing op @ 233 (end=288): add
[BaselineOp] Analyzing op @ 234 (end=288): setlocal
[BaselineOp] Analyzing op @ 237 (end=288): pop
[BaselineOp] Analyzing op @ 238 (end=288): getlocal
[BaselineOp] Analyzing op @ 241 (end=288): pos
[BaselineOp] Analyzing op @ 242 (end=288): one
[BaselineOp] Analyzing op @ 243 (end=288): add
[BaselineOp] Analyzing op @ 244 (end=288): setlocal
[BaselineOp] Analyzing op @ 247 (end=288): pop
[BaselineOp] Analyzing op @ 248 (end=288): loopentry
[BaselineOp] Analyzing op @ 250 (end=288): getlocal
[BaselineOp] Analyzing op @ 253 (end=288): getarg
[BaselineOp] Analyzing op @ 256 (end=288): lt
[BaselineOp] Analyzing op @ 257 (end=288): ifne
[BaselineOp] Analyzing op @ 192 (end=288): getlocal
[BaselineOp] Analyzing op @ 195 (end=288): getlocal
[BaselineOp] Analyzing op @ 198 (end=288): getlocal
[BaselineOp] Analyzing op @ 201 (end=288): getelem
[BaselineOp] Analyzing op @ 202 (end=288): getlocal
[BaselineOp] Analyzing op @ 205 (end=288): getlocal
[BaselineOp] Analyzing op @ 208 (end=288): getelem
[BaselineOp] Analyzing op @ 209 (end=288): mul
[BaselineOp] Analyzing op @ 210 (end=288): add
[BaselineOp] Analyzing op @ 211 (end=288): setlocal
[BaselineOp] Analyzing op @ 214 (end=288): pop
[BaselineOp] Analyzing op @ 215 (end=288): getlocal
[BaselineOp] Analyzing op @ 218 (end=288): getlocal
[BaselineOp] Analyzing op @ 221 (end=288): getlocal
[BaselineOp] Analyzing op @ 224 (end=288): getelem
[BaselineOp] Analyzing op @ 225 (end=288): getlocal
[BaselineOp] Analyzing op @ 228 (end=288): getlocal
[BaselineOp] Analyzing op @ 231 (end=288): getelem
[BaselineOp] Analyzing op @ 232 (end=288): mul
[BaselineOp] Analyzing op @ 233 (end=288): add
[BaselineOp] Analyzing op @ 234 (end=288): setlocal
[BaselineOp] Analyzing op @ 237 (end=288): pop
[BaselineOp] Analyzing op @ 238 (end=288): getlocal
[BaselineOp] Analyzing op @ 241 (end=288): pos
[BaselineOp] Analyzing op @ 242 (end=288): one
[BaselineOp] Analyzing op @ 243 (end=288): add
[BaselineOp] Analyzing op @ 244 (end=288): setlocal
[BaselineOp] Analyzing op @ 247 (end=288): pop
[BaselineOp] Analyzing op @ 248 (end=288): loopentry
[BaselineOp] Analyzing op @ 250 (end=288): getlocal
[BaselineOp] Analyzing op @ 253 (end=288): getarg
[BaselineOp] Analyzing op @ 256 (end=288): lt
[BaselineOp] Analyzing op @ 257 (end=288): ifne
[BaselineOp] Analyzing op @ 262 (end=288): getgname
[BaselineOp] Analyzing op @ 267 (end=288): dup
[BaselineOp] Analyzing op @ 268 (end=288): callprop
[BaselineOp] Analyzing op @ 273 (end=288): swap
[BaselineOp] Analyzing op @ 274 (end=288): notearg
[BaselineOp] Analyzing op @ 275 (end=288): getlocal
[BaselineOp] Analyzing op @ 278 (end=288): getlocal
[BaselineOp] Analyzing op @ 281 (end=288): div
[BaselineOp] Analyzing op @ 282 (end=288): notearg
[BaselineOp] Analyzing op @ 283 (end=288): call
[BaselineOp] Analyzing op @ 286 (end=288): return
[BaselineOp] Analyzing op @ 287 (end=288): stop
[BaselineScripts] Baseline compiling script math-spectral-norm.js:33 (0x7fe3142511f0)
[BaselineOp] Compiling op @ 0: getlocal
[BaselineOp] Compiling op @ 3: pop
[BaselineOp] Compiling op @ 4: newarray
[BaselineOp] Compiling op @ 8: endinit
[BaselineOp] Compiling op @ 9: setlocal
[BaselineOp] Compiling op @ 12: pop
[BaselineOp] Compiling op @ 13: newarray
[BaselineOp] Compiling op @ 17: endinit
[BaselineOp] Compiling op @ 18: setlocal
[BaselineOp] Compiling op @ 21: pop
[BaselineOp] Compiling op @ 22: newarray
[BaselineOp] Compiling op @ 26: endinit
[BaselineOp] Compiling op @ 27: setlocal
[BaselineOp] Compiling op @ 30: pop
[BaselineOp] Compiling op @ 31: zero
[BaselineOp] Compiling op @ 32: setlocal
[BaselineOp] Compiling op @ 35: pop
[BaselineOp] Compiling op @ 36: zero
[BaselineOp] Compiling op @ 37: setlocal
[BaselineOp] Compiling op @ 40: pop
[BaselineOp] Compiling op @ 41: zero
[BaselineOp] Compiling op @ 42: setlocal
[BaselineOp] Compiling op @ 45: pop
[BaselineOp] Compiling op @ 46: goto
[BaselineOp] Compiling op @ 51: loophead
[BaselineOp] [block counter] Emitting a block counter for op @ 51: loophead (lineno: 36 column: 0)
[BaselineOp] Compiling op @ 52: getlocal
[BaselineOp] [block counter] Emitting a block counter for op @ 52: getlocal (lineno: 36 column: 4)
[BaselineOp] Compiling op @ 55: getlocal
[BaselineOp] Compiling op @ 58: one
[BaselineOp] Compiling op @ 59: setelem
[BaselineOp] Compiling op @ 60: pop
[BaselineOp] Compiling op @ 61: getlocal
[BaselineOp] Compiling op @ 64: getlocal
[BaselineOp] Compiling op @ 67: getlocal
[BaselineOp] Compiling op @ 70: getlocal
[BaselineOp] Compiling op @ 73: zero
[BaselineOp] Compiling op @ 74: setelem
[BaselineOp] Compiling op @ 75: setelem
[BaselineOp] Compiling op @ 76: pop
[BaselineOp] Compiling op @ 77: getlocal
[BaselineOp] Compiling op @ 80: pos
[BaselineOp] Compiling op @ 81: one
[BaselineOp] Compiling op @ 82: add
[BaselineOp] Compiling op @ 83: setlocal
[BaselineOp] Compiling op @ 86: pop
[BaselineOp] Compiling op @ 87: loopentry
[BaselineOp] [block counter] Emitting a block counter for op @ 87: loopentry (lineno: 35 column: 12)
[BaselineOp] Compiling op @ 89: getlocal
[BaselineOp] Compiling op @ 92: getarg
[BaselineOp] Compiling op @ 95: lt
[BaselineOp] Compiling op @ 96: ifne
[BaselineOp] Compiling op @ 101: zero
[BaselineOp] [block counter] Emitting a block counter for op @ 101: zero (lineno: 38 column: 7)
[BaselineOp] Compiling op @ 102: setlocal
[BaselineOp] Compiling op @ 105: pop
[BaselineOp] Compiling op @ 106: goto
[BaselineOp] Compiling op @ 111: loophead
[BaselineOp] [block counter] Emitting a block counter for op @ 111: loophead (lineno: 39 column: 0)
[BaselineOp] Compiling op @ 112: callgname
[BaselineOp] [block counter] Emitting a block counter for op @ 112: callgname (lineno: 39 column: 4)
[BaselineOp] Compiling op @ 117: undefined
[BaselineOp] Compiling op @ 118: notearg
[BaselineOp] Compiling op @ 119: getlocal
[BaselineOp] Compiling op @ 122: notearg
[BaselineOp] Compiling op @ 123: getlocal
[BaselineOp] Compiling op @ 126: notearg
[BaselineOp] Compiling op @ 127: getlocal
[BaselineOp] Compiling op @ 130: notearg
[BaselineOp] Compiling op @ 131: call
[BaselineOp] Compiling op @ 134: pop
[BaselineOp] Compiling op @ 135: callgname
[BaselineOp] Compiling op @ 140: undefined
[BaselineOp] Compiling op @ 141: notearg
[BaselineOp] Compiling op @ 142: getlocal
[BaselineOp] Compiling op @ 145: notearg
[BaselineOp] Compiling op @ 146: getlocal
[BaselineOp] Compiling op @ 149: notearg
[BaselineOp] Compiling op @ 150: getlocal
[BaselineOp] Compiling op @ 153: notearg
[BaselineOp] Compiling op @ 154: call
[BaselineOp] Compiling op @ 157: pop
[BaselineOp] Compiling op @ 158: getlocal
[BaselineOp] Compiling op @ 161: pos
[BaselineOp] Compiling op @ 162: one
[BaselineOp] Compiling op @ 163: add
[BaselineOp] Compiling op @ 164: setlocal
[BaselineOp] Compiling op @ 167: pop
[BaselineOp] Compiling op @ 168: loopentry
[BaselineOp] [block counter] Emitting a block counter for op @ 168: loopentry (lineno: 38 column: 12)
[BaselineOp] Compiling op @ 170: getlocal
[BaselineOp] Compiling op @ 173: int8
[BaselineOp] Compiling op @ 175: lt
[BaselineOp] Compiling op @ 176: ifne
[BaselineOp] Compiling op @ 181: zero
[BaselineOp] [block counter] Emitting a block counter for op @ 181: zero (lineno: 42 column: 7)
[BaselineOp] Compiling op @ 182: setlocal
[BaselineOp] Compiling op @ 185: pop
[BaselineOp] Compiling op @ 186: goto
[BaselineOp] Compiling op @ 191: loophead
[BaselineOp] [block counter] Emitting a block counter for op @ 191: loophead (lineno: 43 column: 0)
[BaselineOp] Compiling op @ 192: getlocal
[BaselineOp] [block counter] Emitting a block counter for op @ 192: getlocal (lineno: 43 column: 4)
[BaselineOp] Compiling op @ 195: getlocal
[BaselineOp] Compiling op @ 198: getlocal
[BaselineOp] Compiling op @ 201: getelem
[BaselineOp] Compiling op @ 202: getlocal
[BaselineOp] Compiling op @ 205: getlocal
[BaselineOp] Compiling op @ 208: getelem
[BaselineOp] Compiling op @ 209: mul
[BaselineOp] Compiling op @ 210: add
[BaselineOp] Compiling op @ 211: setlocal
[BaselineOp] Compiling op @ 214: pop
[BaselineOp] Compiling op @ 215: getlocal
[BaselineOp] Compiling op @ 218: getlocal
[BaselineOp] Compiling op @ 221: getlocal
[BaselineOp] Compiling op @ 224: getelem
[BaselineOp] Compiling op @ 225: getlocal
[BaselineOp] Compiling op @ 228: getlocal
[BaselineOp] Compiling op @ 231: getelem
[BaselineOp] Compiling op @ 232: mul
[BaselineOp] Compiling op @ 233: add
[BaselineOp] Compiling op @ 234: setlocal
[BaselineOp] Compiling op @ 237: pop
[BaselineOp] Compiling op @ 238: getlocal
[BaselineOp] Compiling op @ 241: pos
[BaselineOp] Compiling op @ 242: one
[BaselineOp] Compiling op @ 243: add
[BaselineOp] Compiling op @ 244: setlocal
[BaselineOp] Compiling op @ 247: pop
[BaselineOp] Compiling op @ 248: loopentry
[BaselineOp] [block counter] Emitting a block counter for op @ 248: loopentry (lineno: 42 column: 12)
[BaselineOp] Compiling op @ 250: getlocal
[BaselineOp] Compiling op @ 253: getarg
[BaselineOp] Compiling op @ 256: lt
[BaselineOp] Compiling op @ 257: ifne
[BaselineOp] Compiling op @ 262: getgname
[BaselineOp] [block counter] Emitting a block counter for op @ 262: getgname (lineno: 46 column: 2)
[BaselineOp] Compiling op @ 267: dup
[BaselineOp] Compiling op @ 268: callprop
[BaselineOp] Compiling op @ 273: swap
[BaselineOp] Compiling op @ 274: notearg
[BaselineOp] Compiling op @ 275: getlocal
[BaselineOp] Compiling op @ 278: getlocal
[BaselineOp] Compiling op @ 281: div
[BaselineOp] Compiling op @ 282: notearg
[BaselineOp] Compiling op @ 283: call
[BaselineOp] Compiling op @ 286: return
[BaselineOp] Compiling op @ 287: stop
[BaselineScripts] Created BaselineScript 0x2db4360 (raw 0x7fe315f608f8) for math-spectral-norm.js:33
[BaselineScripts] [block counter] 12 block counters were emitted for script math-spectral-norm.js:33 (0x2db4360) (lineno: 46 column: 27)
[BaselineOp] Analyzing op @ 0 (end=39): callgname
[BaselineOp] Analyzing op @ 5 (end=39): undefined
[BaselineOp] Analyzing op @ 6 (end=39): notearg
[BaselineOp] Analyzing op @ 7 (end=39): getarg
[BaselineOp] Analyzing op @ 10 (end=39): notearg
[BaselineOp] Analyzing op @ 11 (end=39): getarg
[BaselineOp] Analyzing op @ 14 (end=39): notearg
[BaselineOp] Analyzing op @ 15 (end=39): call
[BaselineOp] Analyzing op @ 18 (end=39): pop
[BaselineOp] Analyzing op @ 19 (end=39): callgname
[BaselineOp] Analyzing op @ 24 (end=39): undefined
[BaselineOp] Analyzing op @ 25 (end=39): notearg
[BaselineOp] Analyzing op @ 26 (end=39): getarg
[BaselineOp] Analyzing op @ 29 (end=39): notearg
[BaselineOp] Analyzing op @ 30 (end=39): getarg
[BaselineOp] Analyzing op @ 33 (end=39): notearg
[BaselineOp] Analyzing op @ 34 (end=39): call
[BaselineOp] Analyzing op @ 37 (end=39): pop
[BaselineOp] Analyzing op @ 38 (end=39): stop
[BaselineScripts] Baseline compiling script math-spectral-norm.js:28 (0x7fe3142512b8)
[BaselineOp] Compiling op @ 0: callgname
[BaselineOp] Compiling op @ 5: undefined
[BaselineOp] Compiling op @ 6: notearg
[BaselineOp] Compiling op @ 7: getarg
[BaselineOp] Compiling op @ 10: notearg
[BaselineOp] Compiling op @ 11: getarg
[BaselineOp] Compiling op @ 14: notearg
[BaselineOp] Compiling op @ 15: call
[BaselineOp] Compiling op @ 18: pop
[BaselineOp] Compiling op @ 19: callgname
[BaselineOp] Compiling op @ 24: undefined
[BaselineOp] Compiling op @ 25: notearg
[BaselineOp] Compiling op @ 26: getarg
[BaselineOp] Compiling op @ 29: notearg
[BaselineOp] Compiling op @ 30: getarg
[BaselineOp] Compiling op @ 33: notearg
[BaselineOp] Compiling op @ 34: call
[BaselineOp] Compiling op @ 37: pop
[BaselineOp] Compiling op @ 38: stop
[BaselineScripts] Created BaselineScript 0x2d20fa0 (raw 0x7fe315f610b0) for math-spectral-norm.js:28
[BaselineScripts] [block counter] 0 block counters were emitted for script math-spectral-norm.js:28 (0x2d20fa0) (lineno: 30 column: 11)
[BaselineScripts] [block counter] Dump 0 block counters for 0x2d1e860
[BaselineScripts] [block counter] Dump 8 block counters for 0x2d1c3a0
[BaselineScripts] [block counter] Op offset: 10, count: 118
[BaselineScripts] [block counter] Op offset: 11, count: 118
[BaselineScripts] [block counter] Op offset: 26, count: 714
[BaselineScripts] [block counter] Op offset: 27, count: 714
[BaselineScripts] [block counter] Op offset: 71, count: 833
[BaselineScripts] [block counter] Op offset: 90, count: 119
[BaselineScripts] [block counter] Op offset: 111, count: 138
[BaselineScripts] [block counter] Op offset: 130, count: 20
[BaselineScripts] [block counter] Dump 8 block counters for 0x2d1dc20
[BaselineScripts] [block counter] Op offset: 10, count: 118
[BaselineScripts] [block counter] Op offset: 11, count: 118
[BaselineScripts] [block counter] Op offset: 26, count: 714
[BaselineScripts] [block counter] Op offset: 27, count: 714
[BaselineScripts] [block counter] Op offset: 71, count: 833
[BaselineScripts] [block counter] Op offset: 90, count: 119
[BaselineScripts] [block counter] Op offset: 111, count: 138
[BaselineScripts] [block counter] Op offset: 130, count: 20
